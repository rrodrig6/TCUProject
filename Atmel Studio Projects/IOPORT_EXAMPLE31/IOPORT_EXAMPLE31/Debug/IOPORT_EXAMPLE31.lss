
IOPORT_EXAMPLE31.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00003f78  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00403f78  00403f78  00013f78  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009b8  20400000  00403f80  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          000000fc  204009b8  00404938  000209b8  2**2
                  ALLOC
  4 .stack        00002004  20400ab4  00404a34  000209b8  2**0
                  ALLOC
  5 .heap         00000200  20402ab8  00406a38  000209b8  2**0
                  ALLOC
  6 .ARM.attributes 0000002e  00000000  00000000  000209b8  2**0
                  CONTENTS, READONLY
  7 .comment      00000059  00000000  00000000  000209e6  2**0
                  CONTENTS, READONLY
  8 .debug_info   00012bcf  00000000  00000000  00020a3f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 000027db  00000000  00000000  0003360e  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00003e57  00000000  00000000  00035de9  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 00000988  00000000  00000000  00039c40  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000a00  00000000  00000000  0003a5c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  0001e703  00000000  00000000  0003afc8  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   0000a21b  00000000  00000000  000596cb  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    0009189c  00000000  00000000  000638e6  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_frame  00002114  00000000  00000000  000f5184  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	b8 2a 40 20 a9 07 40 00 a5 07 40 00 a5 07 40 00     .*@ ..@...@...@.
  400010:	a5 07 40 00 a5 07 40 00 a5 07 40 00 00 00 00 00     ..@...@...@.....
	...
  40002c:	a5 07 40 00 a5 07 40 00 00 00 00 00 a5 07 40 00     ..@...@.......@.
  40003c:	a5 07 40 00 a5 07 40 00 a5 07 40 00 a5 07 40 00     ..@...@...@...@.
  40004c:	a5 07 40 00 a5 07 40 00 a5 07 40 00 a5 07 40 00     ..@...@...@...@.
  40005c:	a5 07 40 00 a5 07 40 00 00 00 00 00 01 06 40 00     ..@...@.......@.
  40006c:	15 06 40 00 29 06 40 00 a5 07 40 00 a5 07 40 00     ..@.).@...@...@.
  40007c:	a5 07 40 00 3d 06 40 00 51 06 40 00 a5 07 40 00     ..@.=.@.Q.@...@.
  40008c:	a5 07 40 00 a5 07 40 00 a5 07 40 00 a5 07 40 00     ..@...@...@...@.
  40009c:	a5 07 40 00 a5 07 40 00 a5 07 40 00 a5 07 40 00     ..@...@...@...@.
  4000ac:	a5 07 40 00 a5 07 40 00 a5 07 40 00 a5 07 40 00     ..@...@...@...@.
  4000bc:	a5 07 40 00 a5 07 40 00 a5 07 40 00 a5 07 40 00     ..@...@...@...@.
  4000cc:	a5 07 40 00 a5 07 40 00 a5 07 40 00 a5 07 40 00     ..@...@...@...@.
  4000dc:	a5 07 40 00 a5 07 40 00 a5 07 40 00 a5 07 40 00     ..@...@...@...@.
  4000ec:	a5 07 40 00 a5 07 40 00 a5 07 40 00 a5 07 40 00     ..@...@...@...@.
  4000fc:	a5 07 40 00 a5 07 40 00 a5 07 40 00 a5 07 40 00     ..@...@...@...@.
  40010c:	a5 07 40 00 a5 07 40 00 00 00 00 00 00 00 00 00     ..@...@.........
  40011c:	00 00 00 00 a5 07 40 00 a5 07 40 00 a5 07 40 00     ......@...@...@.
  40012c:	a5 07 40 00 a5 07 40 00 a5 07 40 00 a5 07 40 00     ..@...@...@...@.
  40013c:	a5 07 40 00 a5 07 40 00 a5 07 40 00 a5 07 40 00     ..@...@...@...@.
  40014c:	a5 07 40 00 a5 07 40 00 a5 07 40 00 a5 07 40 00     ..@...@...@...@.
  40015c:	a5 07 40 00 a5 07 40 00 a5 07 40 00                 ..@...@...@.

00400168 <__do_global_dtors_aux>:
  400168:	b510      	push	{r4, lr}
  40016a:	4c05      	ldr	r4, [pc, #20]	; (400180 <__do_global_dtors_aux+0x18>)
  40016c:	7823      	ldrb	r3, [r4, #0]
  40016e:	b933      	cbnz	r3, 40017e <__do_global_dtors_aux+0x16>
  400170:	4b04      	ldr	r3, [pc, #16]	; (400184 <__do_global_dtors_aux+0x1c>)
  400172:	b113      	cbz	r3, 40017a <__do_global_dtors_aux+0x12>
  400174:	4804      	ldr	r0, [pc, #16]	; (400188 <__do_global_dtors_aux+0x20>)
  400176:	f3af 8000 	nop.w
  40017a:	2301      	movs	r3, #1
  40017c:	7023      	strb	r3, [r4, #0]
  40017e:	bd10      	pop	{r4, pc}
  400180:	204009b8 	.word	0x204009b8
  400184:	00000000 	.word	0x00000000
  400188:	00403f80 	.word	0x00403f80

0040018c <frame_dummy>:
  40018c:	4b0c      	ldr	r3, [pc, #48]	; (4001c0 <frame_dummy+0x34>)
  40018e:	b143      	cbz	r3, 4001a2 <frame_dummy+0x16>
  400190:	480c      	ldr	r0, [pc, #48]	; (4001c4 <frame_dummy+0x38>)
  400192:	490d      	ldr	r1, [pc, #52]	; (4001c8 <frame_dummy+0x3c>)
  400194:	b510      	push	{r4, lr}
  400196:	f3af 8000 	nop.w
  40019a:	480c      	ldr	r0, [pc, #48]	; (4001cc <frame_dummy+0x40>)
  40019c:	6803      	ldr	r3, [r0, #0]
  40019e:	b923      	cbnz	r3, 4001aa <frame_dummy+0x1e>
  4001a0:	bd10      	pop	{r4, pc}
  4001a2:	480a      	ldr	r0, [pc, #40]	; (4001cc <frame_dummy+0x40>)
  4001a4:	6803      	ldr	r3, [r0, #0]
  4001a6:	b933      	cbnz	r3, 4001b6 <frame_dummy+0x2a>
  4001a8:	4770      	bx	lr
  4001aa:	4b09      	ldr	r3, [pc, #36]	; (4001d0 <frame_dummy+0x44>)
  4001ac:	2b00      	cmp	r3, #0
  4001ae:	d0f7      	beq.n	4001a0 <frame_dummy+0x14>
  4001b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  4001b4:	4718      	bx	r3
  4001b6:	4b06      	ldr	r3, [pc, #24]	; (4001d0 <frame_dummy+0x44>)
  4001b8:	2b00      	cmp	r3, #0
  4001ba:	d0f5      	beq.n	4001a8 <frame_dummy+0x1c>
  4001bc:	4718      	bx	r3
  4001be:	bf00      	nop
  4001c0:	00000000 	.word	0x00000000
  4001c4:	00403f80 	.word	0x00403f80
  4001c8:	204009bc 	.word	0x204009bc
  4001cc:	00403f80 	.word	0x00403f80
  4001d0:	00000000 	.word	0x00000000

004001d4 <_read>:
int __attribute__((weak))
_read (int file, char * ptr, int len); // Remove GCC compiler warning

int __attribute__((weak))
_read (int file, char * ptr, int len)
{
  4001d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	int nChars = 0;

	if (file != 0) {
  4001d8:	b980      	cbnz	r0, 4001fc <_read+0x28>
  4001da:	460c      	mov	r4, r1
  4001dc:	4690      	mov	r8, r2
		return -1;
	}

	for (; len > 0; --len) {
  4001de:	2a00      	cmp	r2, #0
  4001e0:	dd0f      	ble.n	400202 <_read+0x2e>
  4001e2:	188f      	adds	r7, r1, r2
		ptr_get(stdio_base, ptr);
  4001e4:	4e08      	ldr	r6, [pc, #32]	; (400208 <_read+0x34>)
  4001e6:	4d09      	ldr	r5, [pc, #36]	; (40020c <_read+0x38>)
  4001e8:	6830      	ldr	r0, [r6, #0]
  4001ea:	4621      	mov	r1, r4
  4001ec:	682b      	ldr	r3, [r5, #0]
  4001ee:	4798      	blx	r3
		ptr++;
  4001f0:	3401      	adds	r4, #1
	for (; len > 0; --len) {
  4001f2:	42bc      	cmp	r4, r7
  4001f4:	d1f8      	bne.n	4001e8 <_read+0x14>
		nChars++;
	}
	return nChars;
}
  4001f6:	4640      	mov	r0, r8
  4001f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
  4001fc:	f04f 38ff 	mov.w	r8, #4294967295
  400200:	e7f9      	b.n	4001f6 <_read+0x22>
	for (; len > 0; --len) {
  400202:	4680      	mov	r8, r0
  400204:	e7f7      	b.n	4001f6 <_read+0x22>
  400206:	bf00      	nop
  400208:	20400a88 	.word	0x20400a88
  40020c:	20400a80 	.word	0x20400a80

00400210 <usart_set_async_baudrate>:
 * \retval 1 Baud rate set point is out of range for the given input clock
 * frequency.
 */
uint32_t usart_set_async_baudrate(Usart *p_usart,
		uint32_t baudrate, uint32_t ul_mck)
{
  400210:	b410      	push	{r4}
	uint32_t cd_fp;
	uint32_t cd;
	uint32_t fp;

	/* Calculate the receiver sampling divide of baudrate clock. */
	if (ul_mck >= HIGH_FRQ_SAMPLE_DIV * baudrate) {
  400212:	010b      	lsls	r3, r1, #4
  400214:	4293      	cmp	r3, r2
  400216:	d914      	bls.n	400242 <usart_set_async_baudrate+0x32>
	} else {
		over = LOW_FRQ_SAMPLE_DIV;
	}

	/* Calculate clock divider according to the fraction calculated formula. */
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
  400218:	00c9      	lsls	r1, r1, #3
  40021a:	084b      	lsrs	r3, r1, #1
  40021c:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
  400220:	fbb2 f2f1 	udiv	r2, r2, r1
	cd = cd_fp >> 3;
  400224:	08d3      	lsrs	r3, r2, #3
	fp = cd_fp & 0x07;
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
  400226:	1e5c      	subs	r4, r3, #1
  400228:	f64f 71fe 	movw	r1, #65534	; 0xfffe
  40022c:	428c      	cmp	r4, r1
  40022e:	d901      	bls.n	400234 <usart_set_async_baudrate+0x24>
		return 1;
  400230:	2001      	movs	r0, #1
  400232:	e017      	b.n	400264 <usart_set_async_baudrate+0x54>
	}

	/* Configure the OVER bit in MR register. */
	if (over == 8) {
		p_usart->US_MR |= US_MR_OVER;
  400234:	6841      	ldr	r1, [r0, #4]
  400236:	f441 2100 	orr.w	r1, r1, #524288	; 0x80000
  40023a:	6041      	str	r1, [r0, #4]
  40023c:	e00c      	b.n	400258 <usart_set_async_baudrate+0x48>
		return 1;
  40023e:	2001      	movs	r0, #1
  400240:	e010      	b.n	400264 <usart_set_async_baudrate+0x54>
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
  400242:	0859      	lsrs	r1, r3, #1
  400244:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
  400248:	fbb2 f2f3 	udiv	r2, r2, r3
	cd = cd_fp >> 3;
  40024c:	08d3      	lsrs	r3, r2, #3
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
  40024e:	1e5c      	subs	r4, r3, #1
  400250:	f64f 71fe 	movw	r1, #65534	; 0xfffe
  400254:	428c      	cmp	r4, r1
  400256:	d8f2      	bhi.n	40023e <usart_set_async_baudrate+0x2e>
	}

	/* Configure the baudrate generate register. */
	p_usart->US_BRGR = (cd << US_BRGR_CD_Pos) | (fp << US_BRGR_FP_Pos);
  400258:	0412      	lsls	r2, r2, #16
  40025a:	f402 22e0 	and.w	r2, r2, #458752	; 0x70000
  40025e:	431a      	orrs	r2, r3
  400260:	6202      	str	r2, [r0, #32]

	return 0;
  400262:	2000      	movs	r0, #0
}
  400264:	f85d 4b04 	ldr.w	r4, [sp], #4
  400268:	4770      	bx	lr
	...

0040026c <usart_reset>:
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_disable_writeprotect(Usart *p_usart)
{
	p_usart->US_WPMR = US_WPMR_WPKEY_PASSWD;
  40026c:	4b08      	ldr	r3, [pc, #32]	; (400290 <usart_reset+0x24>)
  40026e:	f8c0 30e4 	str.w	r3, [r0, #228]	; 0xe4
	p_usart->US_MR = 0;
  400272:	2300      	movs	r3, #0
  400274:	6043      	str	r3, [r0, #4]
	p_usart->US_RTOR = 0;
  400276:	6243      	str	r3, [r0, #36]	; 0x24
	p_usart->US_TTGR = 0;
  400278:	6283      	str	r3, [r0, #40]	; 0x28
	p_usart->US_CR = US_CR_RSTTX | US_CR_TXDIS;
  40027a:	2388      	movs	r3, #136	; 0x88
  40027c:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RSTRX | US_CR_RXDIS;
  40027e:	2324      	movs	r3, #36	; 0x24
  400280:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RSTSTA;
  400282:	f44f 7380 	mov.w	r3, #256	; 0x100
  400286:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RTSDIS;
  400288:	f44f 2300 	mov.w	r3, #524288	; 0x80000
  40028c:	6003      	str	r3, [r0, #0]
  40028e:	4770      	bx	lr
  400290:	55534100 	.word	0x55534100

00400294 <usart_init_rs232>:
{
  400294:	b570      	push	{r4, r5, r6, lr}
  400296:	4605      	mov	r5, r0
  400298:	460c      	mov	r4, r1
  40029a:	4616      	mov	r6, r2
	usart_reset(p_usart);
  40029c:	4b0f      	ldr	r3, [pc, #60]	; (4002dc <usart_init_rs232+0x48>)
  40029e:	4798      	blx	r3
	ul_reg_val = 0;
  4002a0:	2200      	movs	r2, #0
  4002a2:	4b0f      	ldr	r3, [pc, #60]	; (4002e0 <usart_init_rs232+0x4c>)
  4002a4:	601a      	str	r2, [r3, #0]
	if (!p_usart_opt || usart_set_async_baudrate(p_usart,
  4002a6:	b1a4      	cbz	r4, 4002d2 <usart_init_rs232+0x3e>
  4002a8:	4632      	mov	r2, r6
  4002aa:	6821      	ldr	r1, [r4, #0]
  4002ac:	4628      	mov	r0, r5
  4002ae:	4b0d      	ldr	r3, [pc, #52]	; (4002e4 <usart_init_rs232+0x50>)
  4002b0:	4798      	blx	r3
  4002b2:	4602      	mov	r2, r0
  4002b4:	b978      	cbnz	r0, 4002d6 <usart_init_rs232+0x42>
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
  4002b6:	6863      	ldr	r3, [r4, #4]
  4002b8:	68a1      	ldr	r1, [r4, #8]
  4002ba:	430b      	orrs	r3, r1
  4002bc:	6921      	ldr	r1, [r4, #16]
  4002be:	430b      	orrs	r3, r1
			p_usart_opt->channel_mode | p_usart_opt->stop_bits;
  4002c0:	68e1      	ldr	r1, [r4, #12]
  4002c2:	430b      	orrs	r3, r1
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
  4002c4:	4906      	ldr	r1, [pc, #24]	; (4002e0 <usart_init_rs232+0x4c>)
  4002c6:	600b      	str	r3, [r1, #0]
	p_usart->US_MR |= ul_reg_val;
  4002c8:	6869      	ldr	r1, [r5, #4]
  4002ca:	430b      	orrs	r3, r1
  4002cc:	606b      	str	r3, [r5, #4]
}
  4002ce:	4610      	mov	r0, r2
  4002d0:	bd70      	pop	{r4, r5, r6, pc}
		return 1;
  4002d2:	2201      	movs	r2, #1
  4002d4:	e7fb      	b.n	4002ce <usart_init_rs232+0x3a>
  4002d6:	2201      	movs	r2, #1
  4002d8:	e7f9      	b.n	4002ce <usart_init_rs232+0x3a>
  4002da:	bf00      	nop
  4002dc:	0040026d 	.word	0x0040026d
  4002e0:	204009d4 	.word	0x204009d4
  4002e4:	00400211 	.word	0x00400211

004002e8 <usart_enable_tx>:
	p_usart->US_CR = US_CR_TXEN;
  4002e8:	2340      	movs	r3, #64	; 0x40
  4002ea:	6003      	str	r3, [r0, #0]
  4002ec:	4770      	bx	lr

004002ee <usart_enable_rx>:
	p_usart->US_CR = US_CR_RXEN;
  4002ee:	2310      	movs	r3, #16
  4002f0:	6003      	str	r3, [r0, #0]
  4002f2:	4770      	bx	lr

004002f4 <usart_write>:
	if (!(p_usart->US_CSR & US_CSR_TXRDY)) {
  4002f4:	6943      	ldr	r3, [r0, #20]
  4002f6:	f013 0f02 	tst.w	r3, #2
  4002fa:	d004      	beq.n	400306 <usart_write+0x12>
	p_usart->US_THR = US_THR_TXCHR(c);
  4002fc:	f3c1 0108 	ubfx	r1, r1, #0, #9
  400300:	61c1      	str	r1, [r0, #28]
	return 0;
  400302:	2000      	movs	r0, #0
  400304:	4770      	bx	lr
		return 1;
  400306:	2001      	movs	r0, #1
}
  400308:	4770      	bx	lr

0040030a <usart_read>:
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
  40030a:	6943      	ldr	r3, [r0, #20]
  40030c:	f013 0f01 	tst.w	r3, #1
  400310:	d005      	beq.n	40031e <usart_read+0x14>
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;
  400312:	6983      	ldr	r3, [r0, #24]
  400314:	f3c3 0308 	ubfx	r3, r3, #0, #9
  400318:	600b      	str	r3, [r1, #0]
	return 0;
  40031a:	2000      	movs	r0, #0
  40031c:	4770      	bx	lr
		return 1;
  40031e:	2001      	movs	r0, #1
}
  400320:	4770      	bx	lr
	...

00400324 <_write>:
int __attribute__((weak))
_write (int file, const char *ptr, int len)
{
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
  400324:	3801      	subs	r0, #1
  400326:	2802      	cmp	r0, #2
  400328:	d815      	bhi.n	400356 <_write+0x32>
{
  40032a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40032e:	460e      	mov	r6, r1
  400330:	4614      	mov	r4, r2
		return -1;
	}

	for (; len != 0; --len) {
  400332:	b19a      	cbz	r2, 40035c <_write+0x38>
  400334:	460d      	mov	r5, r1
		if (ptr_put(stdio_base, *ptr++) < 0) {
  400336:	f8df 8038 	ldr.w	r8, [pc, #56]	; 400370 <_write+0x4c>
  40033a:	4f0c      	ldr	r7, [pc, #48]	; (40036c <_write+0x48>)
  40033c:	f8d8 0000 	ldr.w	r0, [r8]
  400340:	f815 1b01 	ldrb.w	r1, [r5], #1
  400344:	683b      	ldr	r3, [r7, #0]
  400346:	4798      	blx	r3
  400348:	2800      	cmp	r0, #0
  40034a:	db0a      	blt.n	400362 <_write+0x3e>
  40034c:	1ba8      	subs	r0, r5, r6
	for (; len != 0; --len) {
  40034e:	3c01      	subs	r4, #1
  400350:	d1f4      	bne.n	40033c <_write+0x18>
  400352:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
  400356:	f04f 30ff 	mov.w	r0, #4294967295
  40035a:	4770      	bx	lr
	for (; len != 0; --len) {
  40035c:	4610      	mov	r0, r2
  40035e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			return -1;
  400362:	f04f 30ff 	mov.w	r0, #4294967295
		}
		++nChars;
	}
	return nChars;
}
  400366:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40036a:	bf00      	nop
  40036c:	20400a84 	.word	0x20400a84
  400370:	20400a88 	.word	0x20400a88

00400374 <uart_write>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_write(Uart *p_uart, const uint8_t uc_data)
{
	/* Check if the transmitter is ready */
	if (!(p_uart->UART_SR & UART_SR_TXRDY))
  400374:	6943      	ldr	r3, [r0, #20]
  400376:	f013 0f02 	tst.w	r3, #2
  40037a:	d002      	beq.n	400382 <uart_write+0xe>
		return 1;

	/* Send character */
	p_uart->UART_THR = uc_data;
  40037c:	61c1      	str	r1, [r0, #28]
	return 0;
  40037e:	2000      	movs	r0, #0
  400380:	4770      	bx	lr
		return 1;
  400382:	2001      	movs	r0, #1
}
  400384:	4770      	bx	lr

00400386 <uart_read>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_read(Uart *p_uart, uint8_t *puc_data)
{
	/* Check if the receiver is ready */
	if ((p_uart->UART_SR & UART_SR_RXRDY) == 0)
  400386:	6943      	ldr	r3, [r0, #20]
  400388:	f013 0f01 	tst.w	r3, #1
  40038c:	d003      	beq.n	400396 <uart_read+0x10>
		return 1;

	/* Read character */
	*puc_data = (uint8_t) p_uart->UART_RHR;
  40038e:	6983      	ldr	r3, [r0, #24]
  400390:	700b      	strb	r3, [r1, #0]
	return 0;
  400392:	2000      	movs	r0, #0
  400394:	4770      	bx	lr
		return 1;
  400396:	2001      	movs	r0, #1
}
  400398:	4770      	bx	lr
	...

0040039c <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  40039c:	b510      	push	{r4, lr}
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  40039e:	4810      	ldr	r0, [pc, #64]	; (4003e0 <sysclk_init+0x44>)
  4003a0:	4b10      	ldr	r3, [pc, #64]	; (4003e4 <sysclk_init+0x48>)
  4003a2:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  4003a4:	213e      	movs	r1, #62	; 0x3e
  4003a6:	2000      	movs	r0, #0
  4003a8:	4b0f      	ldr	r3, [pc, #60]	; (4003e8 <sysclk_init+0x4c>)
  4003aa:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  4003ac:	4c0f      	ldr	r4, [pc, #60]	; (4003ec <sysclk_init+0x50>)
  4003ae:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  4003b0:	2800      	cmp	r0, #0
  4003b2:	d0fc      	beq.n	4003ae <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  4003b4:	4b0e      	ldr	r3, [pc, #56]	; (4003f0 <sysclk_init+0x54>)
  4003b6:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  4003b8:	4a0e      	ldr	r2, [pc, #56]	; (4003f4 <sysclk_init+0x58>)
  4003ba:	4b0f      	ldr	r3, [pc, #60]	; (4003f8 <sysclk_init+0x5c>)
  4003bc:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
	return pmc_is_locked_pllack();
  4003be:	4c0f      	ldr	r4, [pc, #60]	; (4003fc <sysclk_init+0x60>)
  4003c0:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  4003c2:	2800      	cmp	r0, #0
  4003c4:	d0fc      	beq.n	4003c0 <sysclk_init+0x24>
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
  4003c6:	2002      	movs	r0, #2
  4003c8:	4b0d      	ldr	r3, [pc, #52]	; (400400 <sysclk_init+0x64>)
  4003ca:	4798      	blx	r3
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  4003cc:	2010      	movs	r0, #16
  4003ce:	4b0d      	ldr	r3, [pc, #52]	; (400404 <sysclk_init+0x68>)
  4003d0:	4798      	blx	r3
		pll_wait_for_lock(1);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}
	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  4003d2:	4b0d      	ldr	r3, [pc, #52]	; (400408 <sysclk_init+0x6c>)
  4003d4:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  4003d6:	480d      	ldr	r0, [pc, #52]	; (40040c <sysclk_init+0x70>)
  4003d8:	4b02      	ldr	r3, [pc, #8]	; (4003e4 <sysclk_init+0x48>)
  4003da:	4798      	blx	r3
  4003dc:	bd10      	pop	{r4, pc}
  4003de:	bf00      	nop
  4003e0:	07270e00 	.word	0x07270e00
  4003e4:	0040097d 	.word	0x0040097d
  4003e8:	00400701 	.word	0x00400701
  4003ec:	00400755 	.word	0x00400755
  4003f0:	00400765 	.word	0x00400765
  4003f4:	20183f01 	.word	0x20183f01
  4003f8:	400e0600 	.word	0x400e0600
  4003fc:	00400775 	.word	0x00400775
  400400:	00400665 	.word	0x00400665
  400404:	0040069d 	.word	0x0040069d
  400408:	00400871 	.word	0x00400871
  40040c:	08f0d180 	.word	0x08f0d180

00400410 <board_init>:
	__ISB();
}
#endif

void board_init(void)
{
  400410:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
  400412:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  400416:	4b5c      	ldr	r3, [pc, #368]	; (400588 <board_init+0x178>)
  400418:	605a      	str	r2, [r3, #4]
    This function acts as a special kind of Data Memory Barrier.
    It completes when all explicit memory accesses before this instruction complete.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DSB(void)
{
  __ASM volatile ("dsb");
  40041a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  40041e:	f3bf 8f6f 	isb	sy
__STATIC_INLINE void SCB_EnableICache(void)
{
  #if (__ICACHE_PRESENT == 1)
    __DSB();
    __ISB();
    SCB->ICIALLU = 0;                       // invalidate I-Cache
  400422:	4b5a      	ldr	r3, [pc, #360]	; (40058c <board_init+0x17c>)
  400424:	2200      	movs	r2, #0
  400426:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
    SCB->CCR |=  SCB_CCR_IC_Msk;            // enable I-Cache
  40042a:	695a      	ldr	r2, [r3, #20]
  40042c:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
  400430:	615a      	str	r2, [r3, #20]
  __ASM volatile ("dsb");
  400432:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400436:	f3bf 8f6f 	isb	sy
{
  #if (__DCACHE_PRESENT == 1)
    uint32_t ccsidr, sshift, wshift, sw;
    uint32_t sets, ways;

    ccsidr  = SCB->CCSIDR;
  40043a:	f8d3 7080 	ldr.w	r7, [r3, #128]	; 0x80
    sets    = CCSIDR_SETS(ccsidr);
  40043e:	f3c7 364e 	ubfx	r6, r7, #13, #15
    sshift  = CCSIDR_LSSHIFT(ccsidr) + 4;
  400442:	f007 0007 	and.w	r0, r7, #7
  400446:	3004      	adds	r0, #4
    ways    = CCSIDR_WAYS(ccsidr);
  400448:	f3c7 07c9 	ubfx	r7, r7, #3, #10
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint8_t __CLZ(uint32_t value)
{
  uint32_t result;

  __ASM volatile ("clz %0, %1" : "=r" (result) : "r" (value) );
  40044c:	fab7 fe87 	clz	lr, r7
    wshift  = __CLZ(ways) & 0x1f;
  400450:	f00e 0e1f 	and.w	lr, lr, #31
  __ASM volatile ("dsb");
  400454:	f3bf 8f4f 	dsb	sy
  400458:	f04f 34ff 	mov.w	r4, #4294967295
  40045c:	fa04 fc00 	lsl.w	ip, r4, r0
  400460:	fa06 f000 	lsl.w	r0, r6, r0
  400464:	fa04 f40e 	lsl.w	r4, r4, lr
  400468:	fa07 fe0e 	lsl.w	lr, r7, lr

    do {                                    // invalidate D-Cache
         int32_t tmpways = ways;
         do {
              sw = ((tmpways << wshift) | (sets << sshift));
              SCB->DCISW = sw;
  40046c:	461d      	mov	r5, r3
         int32_t tmpways = ways;
  40046e:	463a      	mov	r2, r7
  400470:	4673      	mov	r3, lr
              sw = ((tmpways << wshift) | (sets << sshift));
  400472:	ea40 0103 	orr.w	r1, r0, r3
              SCB->DCISW = sw;
  400476:	f8c5 1260 	str.w	r1, [r5, #608]	; 0x260
            } while(tmpways--);
  40047a:	3a01      	subs	r2, #1
  40047c:	4423      	add	r3, r4
  40047e:	f1b2 3fff 	cmp.w	r2, #4294967295
  400482:	d1f6      	bne.n	400472 <board_init+0x62>
        } while(sets--);
  400484:	3e01      	subs	r6, #1
  400486:	4460      	add	r0, ip
  400488:	f1b6 3fff 	cmp.w	r6, #4294967295
  40048c:	d1ef      	bne.n	40046e <board_init+0x5e>
  40048e:	f3bf 8f4f 	dsb	sy
    __DSB();

    SCB->CCR |=  SCB_CCR_DC_Msk;            // enable D-Cache
  400492:	4b3e      	ldr	r3, [pc, #248]	; (40058c <board_init+0x17c>)
  400494:	695a      	ldr	r2, [r3, #20]
  400496:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
  40049a:	615a      	str	r2, [r3, #20]
  40049c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  4004a0:	f3bf 8f6f 	isb	sy
		*dst++ = *src++;
	}
#endif
#else
	/* TCM Configuration */
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  4004a4:	4a3a      	ldr	r2, [pc, #232]	; (400590 <board_init+0x180>)
  4004a6:	493b      	ldr	r1, [pc, #236]	; (400594 <board_init+0x184>)
  4004a8:	6051      	str	r1, [r2, #4]
					| EEFC_FCR_FARG(8));
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  4004aa:	f5a1 7180 	sub.w	r1, r1, #256	; 0x100
  4004ae:	6051      	str	r1, [r2, #4]
  __ASM volatile ("dsb");
  4004b0:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  4004b4:	f3bf 8f6f 	isb	sy
	SCB->ITCMCR &= ~(uint32_t)(1UL);
  4004b8:	f8d3 2290 	ldr.w	r2, [r3, #656]	; 0x290
  4004bc:	f022 0201 	bic.w	r2, r2, #1
  4004c0:	f8c3 2290 	str.w	r2, [r3, #656]	; 0x290
	SCB->DTCMCR &= ~(uint32_t)SCB_DTCMCR_EN_Msk;
  4004c4:	f8d3 2294 	ldr.w	r2, [r3, #660]	; 0x294
  4004c8:	f022 0201 	bic.w	r2, r2, #1
  4004cc:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
  __ASM volatile ("dsb");
  4004d0:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  4004d4:	f3bf 8f6f 	isb	sy
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  4004d8:	200a      	movs	r0, #10
  4004da:	4c2f      	ldr	r4, [pc, #188]	; (400598 <board_init+0x188>)
  4004dc:	47a0      	blx	r4
  4004de:	200b      	movs	r0, #11
  4004e0:	47a0      	blx	r4
  4004e2:	200c      	movs	r0, #12
  4004e4:	47a0      	blx	r4
  4004e6:	2010      	movs	r0, #16
  4004e8:	47a0      	blx	r4
  4004ea:	2011      	movs	r0, #17
  4004ec:	47a0      	blx	r4
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  4004ee:	4b2b      	ldr	r3, [pc, #172]	; (40059c <board_init+0x18c>)
  4004f0:	f44f 7280 	mov.w	r2, #256	; 0x100
  4004f4:	611a      	str	r2, [r3, #16]
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  4004f6:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  4004fa:	631a      	str	r2, [r3, #48]	; 0x30
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  4004fc:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
  400500:	f44f 6200 	mov.w	r2, #2048	; 0x800
  400504:	615a      	str	r2, [r3, #20]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400506:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_PUER = mask;
  40050a:	665a      	str	r2, [r3, #100]	; 0x64
		base->PIO_PPDDR = mask;
  40050c:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  400510:	655a      	str	r2, [r3, #84]	; 0x54
		base->PIO_IFER = mask;
  400512:	621a      	str	r2, [r3, #32]
		base->PIO_IFSCER = mask;
  400514:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
		base->PIO_ABCDSR[0] &= ~mask;
  400518:	6f19      	ldr	r1, [r3, #112]	; 0x70
  40051a:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
  40051e:	6719      	str	r1, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  400520:	6f59      	ldr	r1, [r3, #116]	; 0x74
  400522:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
  400526:	6759      	str	r1, [r3, #116]	; 0x74
	case IOPORT_SENSE_FALLING:
		base->PIO_ESR = mask;
		base->PIO_FELLSR = mask;
		break;
	case IOPORT_SENSE_RISING:
		base->PIO_ESR = mask;
  400528:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
		base->PIO_REHLSR = mask;
  40052c:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
		break;
	default:
		base->PIO_AIMDR = mask;
		return;
	}
	base->PIO_AIMER = mask;
  400530:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
		base->PIO_PUDR = mask;
  400534:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  400538:	661a      	str	r2, [r3, #96]	; 0x60
		base->PIO_PPDDR = mask;
  40053a:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  40053e:	655a      	str	r2, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
  400540:	625a      	str	r2, [r3, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  400542:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  400546:	6f19      	ldr	r1, [r3, #112]	; 0x70
  400548:	f421 1100 	bic.w	r1, r1, #2097152	; 0x200000
  40054c:	6719      	str	r1, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  40054e:	6f59      	ldr	r1, [r3, #116]	; 0x74
  400550:	f421 1100 	bic.w	r1, r1, #2097152	; 0x200000
  400554:	6759      	str	r1, [r3, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  400556:	605a      	str	r2, [r3, #4]
			GPIO_PUSH_BUTTON_1_SENSE);

#ifdef CONF_BOARD_UART_CONSOLE
	/* Configure UART pins */
	ioport_set_pin_peripheral_mode(USART1_RXD_GPIO, USART1_RXD_FLAGS);
	MATRIX->CCFG_SYSIO |= CCFG_SYSIO_SYSIO4;
  400558:	4a11      	ldr	r2, [pc, #68]	; (4005a0 <board_init+0x190>)
  40055a:	f8d2 3114 	ldr.w	r3, [r2, #276]	; 0x114
  40055e:	f043 0310 	orr.w	r3, r3, #16
  400562:	f8c2 3114 	str.w	r3, [r2, #276]	; 0x114
		base->PIO_PUDR = mask;
  400566:	4b0f      	ldr	r3, [pc, #60]	; (4005a4 <board_init+0x194>)
  400568:	2210      	movs	r2, #16
  40056a:	661a      	str	r2, [r3, #96]	; 0x60
		base->PIO_PPDDR = mask;
  40056c:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  400570:	655a      	str	r2, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
  400572:	625a      	str	r2, [r3, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  400574:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
		base->PIO_ABCDSR[0] |= mask;
  400578:	6f19      	ldr	r1, [r3, #112]	; 0x70
  40057a:	4311      	orrs	r1, r2
  40057c:	6719      	str	r1, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] |= mask;
  40057e:	6f59      	ldr	r1, [r3, #116]	; 0x74
  400580:	4311      	orrs	r1, r2
  400582:	6759      	str	r1, [r3, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  400584:	605a      	str	r2, [r3, #4]
  400586:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400588:	400e1850 	.word	0x400e1850
  40058c:	e000ed00 	.word	0xe000ed00
  400590:	400e0c00 	.word	0x400e0c00
  400594:	5a00080c 	.word	0x5a00080c
  400598:	00400785 	.word	0x00400785
  40059c:	400e1200 	.word	0x400e1200
  4005a0:	40088000 	.word	0x40088000
  4005a4:	400e1000 	.word	0x400e1000

004005a8 <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  4005a8:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  4005aa:	4770      	bx	lr

004005ac <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  4005ac:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  4005ae:	4770      	bx	lr

004005b0 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  4005b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4005b4:	4604      	mov	r4, r0
  4005b6:	4688      	mov	r8, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  4005b8:	4b0e      	ldr	r3, [pc, #56]	; (4005f4 <pio_handler_process+0x44>)
  4005ba:	4798      	blx	r3
  4005bc:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  4005be:	4620      	mov	r0, r4
  4005c0:	4b0d      	ldr	r3, [pc, #52]	; (4005f8 <pio_handler_process+0x48>)
  4005c2:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
  4005c4:	4005      	ands	r5, r0
  4005c6:	d013      	beq.n	4005f0 <pio_handler_process+0x40>
  4005c8:	4c0c      	ldr	r4, [pc, #48]	; (4005fc <pio_handler_process+0x4c>)
  4005ca:	f104 0660 	add.w	r6, r4, #96	; 0x60
  4005ce:	e003      	b.n	4005d8 <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
  4005d0:	42b4      	cmp	r4, r6
  4005d2:	d00d      	beq.n	4005f0 <pio_handler_process+0x40>
  4005d4:	3410      	adds	r4, #16
		while (status != 0) {
  4005d6:	b15d      	cbz	r5, 4005f0 <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
  4005d8:	6820      	ldr	r0, [r4, #0]
  4005da:	4540      	cmp	r0, r8
  4005dc:	d1f8      	bne.n	4005d0 <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  4005de:	6861      	ldr	r1, [r4, #4]
  4005e0:	4229      	tst	r1, r5
  4005e2:	d0f5      	beq.n	4005d0 <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  4005e4:	68e3      	ldr	r3, [r4, #12]
  4005e6:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  4005e8:	6863      	ldr	r3, [r4, #4]
  4005ea:	ea25 0503 	bic.w	r5, r5, r3
  4005ee:	e7ef      	b.n	4005d0 <pio_handler_process+0x20>
  4005f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4005f4:	004005a9 	.word	0x004005a9
  4005f8:	004005ad 	.word	0x004005ad
  4005fc:	204009d8 	.word	0x204009d8

00400600 <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  400600:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
  400602:	210a      	movs	r1, #10
  400604:	4801      	ldr	r0, [pc, #4]	; (40060c <PIOA_Handler+0xc>)
  400606:	4b02      	ldr	r3, [pc, #8]	; (400610 <PIOA_Handler+0x10>)
  400608:	4798      	blx	r3
  40060a:	bd08      	pop	{r3, pc}
  40060c:	400e0e00 	.word	0x400e0e00
  400610:	004005b1 	.word	0x004005b1

00400614 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  400614:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
  400616:	210b      	movs	r1, #11
  400618:	4801      	ldr	r0, [pc, #4]	; (400620 <PIOB_Handler+0xc>)
  40061a:	4b02      	ldr	r3, [pc, #8]	; (400624 <PIOB_Handler+0x10>)
  40061c:	4798      	blx	r3
  40061e:	bd08      	pop	{r3, pc}
  400620:	400e1000 	.word	0x400e1000
  400624:	004005b1 	.word	0x004005b1

00400628 <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
  400628:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
  40062a:	210c      	movs	r1, #12
  40062c:	4801      	ldr	r0, [pc, #4]	; (400634 <PIOC_Handler+0xc>)
  40062e:	4b02      	ldr	r3, [pc, #8]	; (400638 <PIOC_Handler+0x10>)
  400630:	4798      	blx	r3
  400632:	bd08      	pop	{r3, pc}
  400634:	400e1200 	.word	0x400e1200
  400638:	004005b1 	.word	0x004005b1

0040063c <PIOD_Handler>:
/**
 * \brief Parallel IO Controller D interrupt handler.
 * Redefined PIOD interrupt handler for NVIC interrupt table.
 */
void PIOD_Handler(void)
{
  40063c:	b508      	push	{r3, lr}
	pio_handler_process(PIOD, ID_PIOD);
  40063e:	2110      	movs	r1, #16
  400640:	4801      	ldr	r0, [pc, #4]	; (400648 <PIOD_Handler+0xc>)
  400642:	4b02      	ldr	r3, [pc, #8]	; (40064c <PIOD_Handler+0x10>)
  400644:	4798      	blx	r3
  400646:	bd08      	pop	{r3, pc}
  400648:	400e1400 	.word	0x400e1400
  40064c:	004005b1 	.word	0x004005b1

00400650 <PIOE_Handler>:
/**
 * \brief Parallel IO Controller E interrupt handler.
 * Redefined PIOE interrupt handler for NVIC interrupt table.
 */
void PIOE_Handler(void)
{
  400650:	b508      	push	{r3, lr}
	pio_handler_process(PIOE, ID_PIOE);
  400652:	2111      	movs	r1, #17
  400654:	4801      	ldr	r0, [pc, #4]	; (40065c <PIOE_Handler+0xc>)
  400656:	4b02      	ldr	r3, [pc, #8]	; (400660 <PIOE_Handler+0x10>)
  400658:	4798      	blx	r3
  40065a:	bd08      	pop	{r3, pc}
  40065c:	400e1600 	.word	0x400e1600
  400660:	004005b1 	.word	0x004005b1

00400664 <pmc_mck_set_division>:
 *
 * \param ul_div Division value.
 */
void pmc_mck_set_division(uint32_t ul_div)
{
	switch (ul_div) {
  400664:	2803      	cmp	r0, #3
  400666:	d011      	beq.n	40068c <pmc_mck_set_division+0x28>
  400668:	2804      	cmp	r0, #4
  40066a:	d012      	beq.n	400692 <pmc_mck_set_division+0x2e>
		case 1:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
  40066c:	2802      	cmp	r0, #2
  40066e:	bf0c      	ite	eq
  400670:	f44f 7180 	moveq.w	r1, #256	; 0x100
  400674:	2100      	movne	r1, #0
		default:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
			break;
	}
	PMC->PMC_MCKR =
			(PMC->PMC_MCKR & (~PMC_MCKR_MDIV_Msk)) | ul_div;
  400676:	4a08      	ldr	r2, [pc, #32]	; (400698 <pmc_mck_set_division+0x34>)
  400678:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40067a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
  40067e:	430b      	orrs	r3, r1
	PMC->PMC_MCKR =
  400680:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  400682:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400684:	f013 0f08 	tst.w	r3, #8
  400688:	d0fb      	beq.n	400682 <pmc_mck_set_division+0x1e>
}
  40068a:	4770      	bx	lr
			ul_div = PMC_MCKR_MDIV_PCK_DIV3;
  40068c:	f44f 7140 	mov.w	r1, #768	; 0x300
			break;
  400690:	e7f1      	b.n	400676 <pmc_mck_set_division+0x12>
			ul_div = PMC_MCKR_MDIV_PCK_DIV4;
  400692:	f44f 7100 	mov.w	r1, #512	; 0x200
			break;
  400696:	e7ee      	b.n	400676 <pmc_mck_set_division+0x12>
  400698:	400e0600 	.word	0x400e0600

0040069c <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  40069c:	4a17      	ldr	r2, [pc, #92]	; (4006fc <pmc_switch_mck_to_pllack+0x60>)
  40069e:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4006a0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  4006a4:	4318      	orrs	r0, r3
  4006a6:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  4006a8:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4006aa:	f013 0f08 	tst.w	r3, #8
  4006ae:	d10a      	bne.n	4006c6 <pmc_switch_mck_to_pllack+0x2a>
  4006b0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  4006b4:	4911      	ldr	r1, [pc, #68]	; (4006fc <pmc_switch_mck_to_pllack+0x60>)
  4006b6:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  4006b8:	f012 0f08 	tst.w	r2, #8
  4006bc:	d103      	bne.n	4006c6 <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  4006be:	3b01      	subs	r3, #1
  4006c0:	d1f9      	bne.n	4006b6 <pmc_switch_mck_to_pllack+0x1a>
			return 1;
  4006c2:	2001      	movs	r0, #1
  4006c4:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  4006c6:	4a0d      	ldr	r2, [pc, #52]	; (4006fc <pmc_switch_mck_to_pllack+0x60>)
  4006c8:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4006ca:	f023 0303 	bic.w	r3, r3, #3
  4006ce:	f043 0302 	orr.w	r3, r3, #2
  4006d2:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  4006d4:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4006d6:	f013 0f08 	tst.w	r3, #8
  4006da:	d10a      	bne.n	4006f2 <pmc_switch_mck_to_pllack+0x56>
  4006dc:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  4006e0:	4906      	ldr	r1, [pc, #24]	; (4006fc <pmc_switch_mck_to_pllack+0x60>)
  4006e2:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  4006e4:	f012 0f08 	tst.w	r2, #8
  4006e8:	d105      	bne.n	4006f6 <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  4006ea:	3b01      	subs	r3, #1
  4006ec:	d1f9      	bne.n	4006e2 <pmc_switch_mck_to_pllack+0x46>
			return 1;
  4006ee:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  4006f0:	4770      	bx	lr
	return 0;
  4006f2:	2000      	movs	r0, #0
  4006f4:	4770      	bx	lr
  4006f6:	2000      	movs	r0, #0
  4006f8:	4770      	bx	lr
  4006fa:	bf00      	nop
  4006fc:	400e0600 	.word	0x400e0600

00400700 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  400700:	b9a0      	cbnz	r0, 40072c <pmc_switch_mainck_to_xtal+0x2c>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  400702:	480e      	ldr	r0, [pc, #56]	; (40073c <pmc_switch_mainck_to_xtal+0x3c>)
  400704:	6a03      	ldr	r3, [r0, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  400706:	0209      	lsls	r1, r1, #8
  400708:	b289      	uxth	r1, r1
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  40070a:	4a0d      	ldr	r2, [pc, #52]	; (400740 <pmc_switch_mainck_to_xtal+0x40>)
  40070c:	401a      	ands	r2, r3
  40070e:	4b0d      	ldr	r3, [pc, #52]	; (400744 <pmc_switch_mainck_to_xtal+0x44>)
  400710:	4313      	orrs	r3, r2
  400712:	4319      	orrs	r1, r3
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  400714:	6201      	str	r1, [r0, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  400716:	4602      	mov	r2, r0
  400718:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40071a:	f013 0f01 	tst.w	r3, #1
  40071e:	d0fb      	beq.n	400718 <pmc_switch_mainck_to_xtal+0x18>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  400720:	4a06      	ldr	r2, [pc, #24]	; (40073c <pmc_switch_mainck_to_xtal+0x3c>)
  400722:	6a11      	ldr	r1, [r2, #32]
  400724:	4b08      	ldr	r3, [pc, #32]	; (400748 <pmc_switch_mainck_to_xtal+0x48>)
  400726:	430b      	orrs	r3, r1
  400728:	6213      	str	r3, [r2, #32]
  40072a:	4770      	bx	lr
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  40072c:	4903      	ldr	r1, [pc, #12]	; (40073c <pmc_switch_mainck_to_xtal+0x3c>)
  40072e:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  400730:	4a06      	ldr	r2, [pc, #24]	; (40074c <pmc_switch_mainck_to_xtal+0x4c>)
  400732:	401a      	ands	r2, r3
  400734:	4b06      	ldr	r3, [pc, #24]	; (400750 <pmc_switch_mainck_to_xtal+0x50>)
  400736:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  400738:	620b      	str	r3, [r1, #32]
  40073a:	4770      	bx	lr
  40073c:	400e0600 	.word	0x400e0600
  400740:	ffc8fffc 	.word	0xffc8fffc
  400744:	00370001 	.word	0x00370001
  400748:	01370000 	.word	0x01370000
  40074c:	fec8fffc 	.word	0xfec8fffc
  400750:	01370002 	.word	0x01370002

00400754 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  400754:	4b02      	ldr	r3, [pc, #8]	; (400760 <pmc_osc_is_ready_mainck+0xc>)
  400756:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  400758:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  40075c:	4770      	bx	lr
  40075e:	bf00      	nop
  400760:	400e0600 	.word	0x400e0600

00400764 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  400764:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  400768:	4b01      	ldr	r3, [pc, #4]	; (400770 <pmc_disable_pllack+0xc>)
  40076a:	629a      	str	r2, [r3, #40]	; 0x28
  40076c:	4770      	bx	lr
  40076e:	bf00      	nop
  400770:	400e0600 	.word	0x400e0600

00400774 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  400774:	4b02      	ldr	r3, [pc, #8]	; (400780 <pmc_is_locked_pllack+0xc>)
  400776:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  400778:	f000 0002 	and.w	r0, r0, #2
  40077c:	4770      	bx	lr
  40077e:	bf00      	nop
  400780:	400e0600 	.word	0x400e0600

00400784 <pmc_enable_periph_clk>:
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
#if defined(REG_PMC_PCR) && !SAMG55
	uint32_t pcr;
	PMC->PMC_PCR = ul_id & 0x7F;
  400784:	f000 007f 	and.w	r0, r0, #127	; 0x7f
  400788:	4b05      	ldr	r3, [pc, #20]	; (4007a0 <pmc_enable_periph_clk+0x1c>)
  40078a:	f8c3 010c 	str.w	r0, [r3, #268]	; 0x10c
	pcr = PMC->PMC_PCR | PMC_PCR_EN | PMC_PCR_CMD;
  40078e:	f8d3 210c 	ldr.w	r2, [r3, #268]	; 0x10c
  400792:	f042 2210 	orr.w	r2, r2, #268439552	; 0x10001000
	PMC->PMC_PCR = pcr;
  400796:	f8c3 210c 	str.w	r2, [r3, #268]	; 0x10c
#endif
	}

	return 0;
#endif /* defined(REG_PMC_PCR) && !SAMG55 */
}
  40079a:	2000      	movs	r0, #0
  40079c:	4770      	bx	lr
  40079e:	bf00      	nop
  4007a0:	400e0600 	.word	0x400e0600

004007a4 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  4007a4:	e7fe      	b.n	4007a4 <Dummy_Handler>
	...

004007a8 <Reset_Handler>:
{
  4007a8:	b500      	push	{lr}
  4007aa:	b083      	sub	sp, #12
        if (pSrc != pDest) {
  4007ac:	4b25      	ldr	r3, [pc, #148]	; (400844 <Reset_Handler+0x9c>)
  4007ae:	4a26      	ldr	r2, [pc, #152]	; (400848 <Reset_Handler+0xa0>)
  4007b0:	429a      	cmp	r2, r3
  4007b2:	d010      	beq.n	4007d6 <Reset_Handler+0x2e>
                for (; pDest < &_erelocate;) {
  4007b4:	4b25      	ldr	r3, [pc, #148]	; (40084c <Reset_Handler+0xa4>)
  4007b6:	4a23      	ldr	r2, [pc, #140]	; (400844 <Reset_Handler+0x9c>)
  4007b8:	429a      	cmp	r2, r3
  4007ba:	d20c      	bcs.n	4007d6 <Reset_Handler+0x2e>
  4007bc:	3b01      	subs	r3, #1
  4007be:	1a9b      	subs	r3, r3, r2
  4007c0:	f023 0303 	bic.w	r3, r3, #3
  4007c4:	3304      	adds	r3, #4
  4007c6:	4413      	add	r3, r2
  4007c8:	491f      	ldr	r1, [pc, #124]	; (400848 <Reset_Handler+0xa0>)
                        *pDest++ = *pSrc++;
  4007ca:	f851 0b04 	ldr.w	r0, [r1], #4
  4007ce:	f842 0b04 	str.w	r0, [r2], #4
                for (; pDest < &_erelocate;) {
  4007d2:	429a      	cmp	r2, r3
  4007d4:	d1f9      	bne.n	4007ca <Reset_Handler+0x22>
        for (pDest = &_szero; pDest < &_ezero;) {
  4007d6:	4b1e      	ldr	r3, [pc, #120]	; (400850 <Reset_Handler+0xa8>)
  4007d8:	4a1e      	ldr	r2, [pc, #120]	; (400854 <Reset_Handler+0xac>)
  4007da:	429a      	cmp	r2, r3
  4007dc:	d20a      	bcs.n	4007f4 <Reset_Handler+0x4c>
  4007de:	3b01      	subs	r3, #1
  4007e0:	1a9b      	subs	r3, r3, r2
  4007e2:	f023 0303 	bic.w	r3, r3, #3
  4007e6:	3304      	adds	r3, #4
  4007e8:	4413      	add	r3, r2
                *pDest++ = 0;
  4007ea:	2100      	movs	r1, #0
  4007ec:	f842 1b04 	str.w	r1, [r2], #4
        for (pDest = &_szero; pDest < &_ezero;) {
  4007f0:	4293      	cmp	r3, r2
  4007f2:	d1fb      	bne.n	4007ec <Reset_Handler+0x44>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
  4007f4:	4a18      	ldr	r2, [pc, #96]	; (400858 <Reset_Handler+0xb0>)
  4007f6:	4b19      	ldr	r3, [pc, #100]	; (40085c <Reset_Handler+0xb4>)
  4007f8:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
  4007fc:	6093      	str	r3, [r2, #8]
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
  4007fe:	f3ef 8310 	mrs	r3, PRIMASK
static volatile uint32_t cpu_irq_critical_section_counter;
static volatile bool     cpu_irq_prev_interrupt_state;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = cpu_irq_is_enabled();
  400802:	fab3 f383 	clz	r3, r3
  400806:	095b      	lsrs	r3, r3, #5
  400808:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  40080a:	b672      	cpsid	i
  __ASM volatile ("dmb");
  40080c:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  400810:	2200      	movs	r2, #0
  400812:	4b13      	ldr	r3, [pc, #76]	; (400860 <Reset_Handler+0xb8>)
  400814:	701a      	strb	r2, [r3, #0]
	return flags;
  400816:	9901      	ldr	r1, [sp, #4]
 */
__always_inline static void fpu_enable(void)
{
	irqflags_t flags;
	flags = cpu_irq_save();
	REG_CPACR |=  (0xFu << 20);
  400818:	4a12      	ldr	r2, [pc, #72]	; (400864 <Reset_Handler+0xbc>)
  40081a:	6813      	ldr	r3, [r2, #0]
  40081c:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
  400820:	6013      	str	r3, [r2, #0]
  __ASM volatile ("dsb");
  400822:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400826:	f3bf 8f6f 	isb	sy
	return (flags);
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	if (cpu_irq_is_enabled_flags(flags))
  40082a:	b129      	cbz	r1, 400838 <Reset_Handler+0x90>
		cpu_irq_enable();
  40082c:	2201      	movs	r2, #1
  40082e:	4b0c      	ldr	r3, [pc, #48]	; (400860 <Reset_Handler+0xb8>)
  400830:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb");
  400832:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  400836:	b662      	cpsie	i
        __libc_init_array();
  400838:	4b0b      	ldr	r3, [pc, #44]	; (400868 <Reset_Handler+0xc0>)
  40083a:	4798      	blx	r3
        main();
  40083c:	4b0b      	ldr	r3, [pc, #44]	; (40086c <Reset_Handler+0xc4>)
  40083e:	4798      	blx	r3
  400840:	e7fe      	b.n	400840 <Reset_Handler+0x98>
  400842:	bf00      	nop
  400844:	20400000 	.word	0x20400000
  400848:	00403f80 	.word	0x00403f80
  40084c:	204009b8 	.word	0x204009b8
  400850:	20400ab4 	.word	0x20400ab4
  400854:	204009b8 	.word	0x204009b8
  400858:	e000ed00 	.word	0xe000ed00
  40085c:	00400000 	.word	0x00400000
  400860:	20400000 	.word	0x20400000
  400864:	e000ed88 	.word	0xe000ed88
  400868:	00400d89 	.word	0x00400d89
  40086c:	00400c09 	.word	0x00400c09

00400870 <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate( void )
{
  /* Determine clock frequency according to clock register values */
  switch (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk)
  400870:	4b3b      	ldr	r3, [pc, #236]	; (400960 <SystemCoreClockUpdate+0xf0>)
  400872:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  400874:	f003 0303 	and.w	r3, r3, #3
  400878:	2b01      	cmp	r3, #1
  40087a:	d01d      	beq.n	4008b8 <SystemCoreClockUpdate+0x48>
  40087c:	b183      	cbz	r3, 4008a0 <SystemCoreClockUpdate+0x30>
  40087e:	2b02      	cmp	r3, #2
  400880:	d036      	beq.n	4008f0 <SystemCoreClockUpdate+0x80>

    default:
    break;
  }

  if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 )
  400882:	4b37      	ldr	r3, [pc, #220]	; (400960 <SystemCoreClockUpdate+0xf0>)
  400884:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  400886:	f003 0370 	and.w	r3, r3, #112	; 0x70
  40088a:	2b70      	cmp	r3, #112	; 0x70
  40088c:	d05f      	beq.n	40094e <SystemCoreClockUpdate+0xde>
  {
    SystemCoreClock /= 3U;
  }
  else
  {
    SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  40088e:	4b34      	ldr	r3, [pc, #208]	; (400960 <SystemCoreClockUpdate+0xf0>)
  400890:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  400892:	4934      	ldr	r1, [pc, #208]	; (400964 <SystemCoreClockUpdate+0xf4>)
  400894:	f3c2 1202 	ubfx	r2, r2, #4, #3
  400898:	680b      	ldr	r3, [r1, #0]
  40089a:	40d3      	lsrs	r3, r2
  40089c:	600b      	str	r3, [r1, #0]
  40089e:	4770      	bx	lr
      if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL )
  4008a0:	4b31      	ldr	r3, [pc, #196]	; (400968 <SystemCoreClockUpdate+0xf8>)
  4008a2:	695b      	ldr	r3, [r3, #20]
  4008a4:	f013 0f80 	tst.w	r3, #128	; 0x80
        SystemCoreClock = CHIP_FREQ_XTAL_32K;
  4008a8:	bf14      	ite	ne
  4008aa:	f44f 4200 	movne.w	r2, #32768	; 0x8000
        SystemCoreClock = CHIP_FREQ_SLCK_RC;
  4008ae:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  4008b2:	4b2c      	ldr	r3, [pc, #176]	; (400964 <SystemCoreClockUpdate+0xf4>)
  4008b4:	601a      	str	r2, [r3, #0]
  4008b6:	e7e4      	b.n	400882 <SystemCoreClockUpdate+0x12>
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  4008b8:	4b29      	ldr	r3, [pc, #164]	; (400960 <SystemCoreClockUpdate+0xf0>)
  4008ba:	6a1b      	ldr	r3, [r3, #32]
  4008bc:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  4008c0:	d003      	beq.n	4008ca <SystemCoreClockUpdate+0x5a>
        SystemCoreClock = CHIP_FREQ_XTAL_12M;
  4008c2:	4a2a      	ldr	r2, [pc, #168]	; (40096c <SystemCoreClockUpdate+0xfc>)
  4008c4:	4b27      	ldr	r3, [pc, #156]	; (400964 <SystemCoreClockUpdate+0xf4>)
  4008c6:	601a      	str	r2, [r3, #0]
  4008c8:	e7db      	b.n	400882 <SystemCoreClockUpdate+0x12>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  4008ca:	4a29      	ldr	r2, [pc, #164]	; (400970 <SystemCoreClockUpdate+0x100>)
  4008cc:	4b25      	ldr	r3, [pc, #148]	; (400964 <SystemCoreClockUpdate+0xf4>)
  4008ce:	601a      	str	r2, [r3, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  4008d0:	4b23      	ldr	r3, [pc, #140]	; (400960 <SystemCoreClockUpdate+0xf0>)
  4008d2:	6a1b      	ldr	r3, [r3, #32]
  4008d4:	f003 0370 	and.w	r3, r3, #112	; 0x70
  4008d8:	2b10      	cmp	r3, #16
  4008da:	d005      	beq.n	4008e8 <SystemCoreClockUpdate+0x78>
  4008dc:	2b20      	cmp	r3, #32
  4008de:	d1d0      	bne.n	400882 <SystemCoreClockUpdate+0x12>
            SystemCoreClock *= 3U;
  4008e0:	4a22      	ldr	r2, [pc, #136]	; (40096c <SystemCoreClockUpdate+0xfc>)
  4008e2:	4b20      	ldr	r3, [pc, #128]	; (400964 <SystemCoreClockUpdate+0xf4>)
  4008e4:	601a      	str	r2, [r3, #0]
          break;
  4008e6:	e7cc      	b.n	400882 <SystemCoreClockUpdate+0x12>
            SystemCoreClock *= 2U;
  4008e8:	4a22      	ldr	r2, [pc, #136]	; (400974 <SystemCoreClockUpdate+0x104>)
  4008ea:	4b1e      	ldr	r3, [pc, #120]	; (400964 <SystemCoreClockUpdate+0xf4>)
  4008ec:	601a      	str	r2, [r3, #0]
          break;
  4008ee:	e7c8      	b.n	400882 <SystemCoreClockUpdate+0x12>
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  4008f0:	4b1b      	ldr	r3, [pc, #108]	; (400960 <SystemCoreClockUpdate+0xf0>)
  4008f2:	6a1b      	ldr	r3, [r3, #32]
  4008f4:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  4008f8:	d016      	beq.n	400928 <SystemCoreClockUpdate+0xb8>
        SystemCoreClock = CHIP_FREQ_XTAL_12M ;
  4008fa:	4a1c      	ldr	r2, [pc, #112]	; (40096c <SystemCoreClockUpdate+0xfc>)
  4008fc:	4b19      	ldr	r3, [pc, #100]	; (400964 <SystemCoreClockUpdate+0xf4>)
  4008fe:	601a      	str	r2, [r3, #0]
      if ( (uint32_t) (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK )
  400900:	4b17      	ldr	r3, [pc, #92]	; (400960 <SystemCoreClockUpdate+0xf0>)
  400902:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  400904:	f003 0303 	and.w	r3, r3, #3
  400908:	2b02      	cmp	r3, #2
  40090a:	d1ba      	bne.n	400882 <SystemCoreClockUpdate+0x12>
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  40090c:	4a14      	ldr	r2, [pc, #80]	; (400960 <SystemCoreClockUpdate+0xf0>)
  40090e:	6a91      	ldr	r1, [r2, #40]	; 0x28
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  400910:	6a92      	ldr	r2, [r2, #40]	; 0x28
  400912:	4814      	ldr	r0, [pc, #80]	; (400964 <SystemCoreClockUpdate+0xf4>)
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  400914:	f3c1 410a 	ubfx	r1, r1, #16, #11
  400918:	6803      	ldr	r3, [r0, #0]
  40091a:	fb01 3303 	mla	r3, r1, r3, r3
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  40091e:	b2d2      	uxtb	r2, r2
  400920:	fbb3 f3f2 	udiv	r3, r3, r2
  400924:	6003      	str	r3, [r0, #0]
  400926:	e7ac      	b.n	400882 <SystemCoreClockUpdate+0x12>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  400928:	4a11      	ldr	r2, [pc, #68]	; (400970 <SystemCoreClockUpdate+0x100>)
  40092a:	4b0e      	ldr	r3, [pc, #56]	; (400964 <SystemCoreClockUpdate+0xf4>)
  40092c:	601a      	str	r2, [r3, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  40092e:	4b0c      	ldr	r3, [pc, #48]	; (400960 <SystemCoreClockUpdate+0xf0>)
  400930:	6a1b      	ldr	r3, [r3, #32]
  400932:	f003 0370 	and.w	r3, r3, #112	; 0x70
  400936:	2b10      	cmp	r3, #16
  400938:	d005      	beq.n	400946 <SystemCoreClockUpdate+0xd6>
  40093a:	2b20      	cmp	r3, #32
  40093c:	d1e0      	bne.n	400900 <SystemCoreClockUpdate+0x90>
            SystemCoreClock *= 3U;
  40093e:	4a0b      	ldr	r2, [pc, #44]	; (40096c <SystemCoreClockUpdate+0xfc>)
  400940:	4b08      	ldr	r3, [pc, #32]	; (400964 <SystemCoreClockUpdate+0xf4>)
  400942:	601a      	str	r2, [r3, #0]
          break;
  400944:	e7dc      	b.n	400900 <SystemCoreClockUpdate+0x90>
            SystemCoreClock *= 2U;
  400946:	4a0b      	ldr	r2, [pc, #44]	; (400974 <SystemCoreClockUpdate+0x104>)
  400948:	4b06      	ldr	r3, [pc, #24]	; (400964 <SystemCoreClockUpdate+0xf4>)
  40094a:	601a      	str	r2, [r3, #0]
          break;
  40094c:	e7d8      	b.n	400900 <SystemCoreClockUpdate+0x90>
    SystemCoreClock /= 3U;
  40094e:	4a05      	ldr	r2, [pc, #20]	; (400964 <SystemCoreClockUpdate+0xf4>)
  400950:	6813      	ldr	r3, [r2, #0]
  400952:	4909      	ldr	r1, [pc, #36]	; (400978 <SystemCoreClockUpdate+0x108>)
  400954:	fba1 1303 	umull	r1, r3, r1, r3
  400958:	085b      	lsrs	r3, r3, #1
  40095a:	6013      	str	r3, [r2, #0]
  40095c:	4770      	bx	lr
  40095e:	bf00      	nop
  400960:	400e0600 	.word	0x400e0600
  400964:	20400004 	.word	0x20400004
  400968:	400e1810 	.word	0x400e1810
  40096c:	00b71b00 	.word	0x00b71b00
  400970:	003d0900 	.word	0x003d0900
  400974:	007a1200 	.word	0x007a1200
  400978:	aaaaaaab 	.word	0xaaaaaaab

0040097c <system_init_flash>:
 * Initialize flash.
 */
void system_init_flash( uint32_t ul_clk )
{
  /* Set FWS for embedded Flash access according to operating frequency */
  if ( ul_clk < CHIP_FREQ_FWS_0 )
  40097c:	4b16      	ldr	r3, [pc, #88]	; (4009d8 <system_init_flash+0x5c>)
  40097e:	4298      	cmp	r0, r3
  400980:	d913      	bls.n	4009aa <system_init_flash+0x2e>
  {
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  }
  else
  {
    if (ul_clk < CHIP_FREQ_FWS_1)
  400982:	4b16      	ldr	r3, [pc, #88]	; (4009dc <system_init_flash+0x60>)
  400984:	4298      	cmp	r0, r3
  400986:	d915      	bls.n	4009b4 <system_init_flash+0x38>
    {
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
    }
    else
    {
      if (ul_clk < CHIP_FREQ_FWS_2)
  400988:	4b15      	ldr	r3, [pc, #84]	; (4009e0 <system_init_flash+0x64>)
  40098a:	4298      	cmp	r0, r3
  40098c:	d916      	bls.n	4009bc <system_init_flash+0x40>
      {
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
      }
      else
      {
        if ( ul_clk < CHIP_FREQ_FWS_3 )
  40098e:	4b15      	ldr	r3, [pc, #84]	; (4009e4 <system_init_flash+0x68>)
  400990:	4298      	cmp	r0, r3
  400992:	d917      	bls.n	4009c4 <system_init_flash+0x48>
        {
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
        }
        else
        {
          if ( ul_clk < CHIP_FREQ_FWS_4 )
  400994:	4b14      	ldr	r3, [pc, #80]	; (4009e8 <system_init_flash+0x6c>)
  400996:	4298      	cmp	r0, r3
  400998:	d918      	bls.n	4009cc <system_init_flash+0x50>
          {
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
          }
          else
          {
            if ( ul_clk < CHIP_FREQ_FWS_5 )
  40099a:	4b14      	ldr	r3, [pc, #80]	; (4009ec <system_init_flash+0x70>)
  40099c:	4298      	cmp	r0, r3
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  40099e:	bf94      	ite	ls
  4009a0:	4a13      	ldrls	r2, [pc, #76]	; (4009f0 <system_init_flash+0x74>)
            }
            else
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(6)|EEFC_FMR_CLOE;
  4009a2:	4a14      	ldrhi	r2, [pc, #80]	; (4009f4 <system_init_flash+0x78>)
  4009a4:	4b14      	ldr	r3, [pc, #80]	; (4009f8 <system_init_flash+0x7c>)
  4009a6:	601a      	str	r2, [r3, #0]
  4009a8:	4770      	bx	lr
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  4009aa:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  4009ae:	4b12      	ldr	r3, [pc, #72]	; (4009f8 <system_init_flash+0x7c>)
  4009b0:	601a      	str	r2, [r3, #0]
  4009b2:	4770      	bx	lr
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  4009b4:	4a11      	ldr	r2, [pc, #68]	; (4009fc <system_init_flash+0x80>)
  4009b6:	4b10      	ldr	r3, [pc, #64]	; (4009f8 <system_init_flash+0x7c>)
  4009b8:	601a      	str	r2, [r3, #0]
  4009ba:	4770      	bx	lr
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  4009bc:	4a10      	ldr	r2, [pc, #64]	; (400a00 <system_init_flash+0x84>)
  4009be:	4b0e      	ldr	r3, [pc, #56]	; (4009f8 <system_init_flash+0x7c>)
  4009c0:	601a      	str	r2, [r3, #0]
  4009c2:	4770      	bx	lr
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  4009c4:	4a0f      	ldr	r2, [pc, #60]	; (400a04 <system_init_flash+0x88>)
  4009c6:	4b0c      	ldr	r3, [pc, #48]	; (4009f8 <system_init_flash+0x7c>)
  4009c8:	601a      	str	r2, [r3, #0]
  4009ca:	4770      	bx	lr
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  4009cc:	f04f 2204 	mov.w	r2, #67109888	; 0x4000400
  4009d0:	4b09      	ldr	r3, [pc, #36]	; (4009f8 <system_init_flash+0x7c>)
  4009d2:	601a      	str	r2, [r3, #0]
  4009d4:	4770      	bx	lr
  4009d6:	bf00      	nop
  4009d8:	015ef3bf 	.word	0x015ef3bf
  4009dc:	02bde77f 	.word	0x02bde77f
  4009e0:	041cdb3f 	.word	0x041cdb3f
  4009e4:	057bceff 	.word	0x057bceff
  4009e8:	06dac2bf 	.word	0x06dac2bf
  4009ec:	0839b67f 	.word	0x0839b67f
  4009f0:	04000500 	.word	0x04000500
  4009f4:	04000600 	.word	0x04000600
  4009f8:	400e0c00 	.word	0x400e0c00
  4009fc:	04000100 	.word	0x04000100
  400a00:	04000200 	.word	0x04000200
  400a04:	04000300 	.word	0x04000300

00400a08 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  400a08:	4b0a      	ldr	r3, [pc, #40]	; (400a34 <_sbrk+0x2c>)
  400a0a:	681b      	ldr	r3, [r3, #0]
  400a0c:	b153      	cbz	r3, 400a24 <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
  400a0e:	4b09      	ldr	r3, [pc, #36]	; (400a34 <_sbrk+0x2c>)
  400a10:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  400a12:	181a      	adds	r2, r3, r0
  400a14:	4908      	ldr	r1, [pc, #32]	; (400a38 <_sbrk+0x30>)
  400a16:	4291      	cmp	r1, r2
  400a18:	db08      	blt.n	400a2c <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
  400a1a:	4610      	mov	r0, r2
  400a1c:	4a05      	ldr	r2, [pc, #20]	; (400a34 <_sbrk+0x2c>)
  400a1e:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  400a20:	4618      	mov	r0, r3
  400a22:	4770      	bx	lr
		heap = (unsigned char *)&_end;
  400a24:	4a05      	ldr	r2, [pc, #20]	; (400a3c <_sbrk+0x34>)
  400a26:	4b03      	ldr	r3, [pc, #12]	; (400a34 <_sbrk+0x2c>)
  400a28:	601a      	str	r2, [r3, #0]
  400a2a:	e7f0      	b.n	400a0e <_sbrk+0x6>
		return (caddr_t) -1;	
  400a2c:	f04f 30ff 	mov.w	r0, #4294967295
}
  400a30:	4770      	bx	lr
  400a32:	bf00      	nop
  400a34:	20400a48 	.word	0x20400a48
  400a38:	2045fffc 	.word	0x2045fffc
  400a3c:	20402cb8 	.word	0x20402cb8

00400a40 <_close>:
}

extern int _close(int file)
{
	return -1;
}
  400a40:	f04f 30ff 	mov.w	r0, #4294967295
  400a44:	4770      	bx	lr

00400a46 <_fstat>:

extern int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
  400a46:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  400a4a:	604b      	str	r3, [r1, #4]

	return 0;
}
  400a4c:	2000      	movs	r0, #0
  400a4e:	4770      	bx	lr

00400a50 <_isatty>:

extern int _isatty(int file)
{
	return 1;
}
  400a50:	2001      	movs	r0, #1
  400a52:	4770      	bx	lr

00400a54 <_lseek>:

extern int _lseek(int file, int ptr, int dir)
{
	return 0;
}
  400a54:	2000      	movs	r0, #0
  400a56:	4770      	bx	lr

00400a58 <usart_serial_getchar>:
 * \param p_usart   Base address of the USART instance.
 * \param data   Data to read
 *
 */
static inline void usart_serial_getchar(usart_if p_usart, uint8_t *data)
{
  400a58:	b5f0      	push	{r4, r5, r6, r7, lr}
  400a5a:	b083      	sub	sp, #12
  400a5c:	4605      	mov	r5, r0
  400a5e:	460c      	mov	r4, r1
	uint32_t val = 0;
  400a60:	2300      	movs	r3, #0
  400a62:	9301      	str	r3, [sp, #4]
	if (UART == (Uart*)p_usart) {
		while (uart_read((Uart*)p_usart, data));
	}
#else
# ifdef UART0
	if (UART0 == (Uart*)p_usart) {
  400a64:	4b2a      	ldr	r3, [pc, #168]	; (400b10 <usart_serial_getchar+0xb8>)
  400a66:	4298      	cmp	r0, r3
  400a68:	d013      	beq.n	400a92 <usart_serial_getchar+0x3a>
		while (uart_read((Uart*)p_usart, data));
	}
# endif
# ifdef UART1
	if (UART1 == (Uart*)p_usart) {
  400a6a:	4b2a      	ldr	r3, [pc, #168]	; (400b14 <usart_serial_getchar+0xbc>)
  400a6c:	4298      	cmp	r0, r3
  400a6e:	d018      	beq.n	400aa2 <usart_serial_getchar+0x4a>
		while (uart_read((Uart*)p_usart, data));
	}
# endif
# ifdef UART2
	if (UART2 == (Uart*)p_usart) {
  400a70:	4b29      	ldr	r3, [pc, #164]	; (400b18 <usart_serial_getchar+0xc0>)
  400a72:	4298      	cmp	r0, r3
  400a74:	d01d      	beq.n	400ab2 <usart_serial_getchar+0x5a>
		while (uart_read((Uart*)p_usart, data));
	}
# endif
# ifdef UART3
	if (UART3 == (Uart*)p_usart) {
  400a76:	4b29      	ldr	r3, [pc, #164]	; (400b1c <usart_serial_getchar+0xc4>)
  400a78:	429d      	cmp	r5, r3
  400a7a:	d022      	beq.n	400ac2 <usart_serial_getchar+0x6a>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
  400a7c:	4b28      	ldr	r3, [pc, #160]	; (400b20 <usart_serial_getchar+0xc8>)
  400a7e:	429d      	cmp	r5, r3
  400a80:	d027      	beq.n	400ad2 <usart_serial_getchar+0x7a>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
  400a82:	4b28      	ldr	r3, [pc, #160]	; (400b24 <usart_serial_getchar+0xcc>)
  400a84:	429d      	cmp	r5, r3
  400a86:	d02e      	beq.n	400ae6 <usart_serial_getchar+0x8e>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART2
	if (USART2 == p_usart) {
  400a88:	4b27      	ldr	r3, [pc, #156]	; (400b28 <usart_serial_getchar+0xd0>)
  400a8a:	429d      	cmp	r5, r3
  400a8c:	d035      	beq.n	400afa <usart_serial_getchar+0xa2>
		*data = (uint8_t)(val & 0xFF);
	}
# endif
#endif /* ifdef USART */

}
  400a8e:	b003      	add	sp, #12
  400a90:	bdf0      	pop	{r4, r5, r6, r7, pc}
		while (uart_read((Uart*)p_usart, data));
  400a92:	461f      	mov	r7, r3
  400a94:	4e25      	ldr	r6, [pc, #148]	; (400b2c <usart_serial_getchar+0xd4>)
  400a96:	4621      	mov	r1, r4
  400a98:	4638      	mov	r0, r7
  400a9a:	47b0      	blx	r6
  400a9c:	2800      	cmp	r0, #0
  400a9e:	d1fa      	bne.n	400a96 <usart_serial_getchar+0x3e>
  400aa0:	e7e9      	b.n	400a76 <usart_serial_getchar+0x1e>
		while (uart_read((Uart*)p_usart, data));
  400aa2:	461f      	mov	r7, r3
  400aa4:	4e21      	ldr	r6, [pc, #132]	; (400b2c <usart_serial_getchar+0xd4>)
  400aa6:	4621      	mov	r1, r4
  400aa8:	4638      	mov	r0, r7
  400aaa:	47b0      	blx	r6
  400aac:	2800      	cmp	r0, #0
  400aae:	d1fa      	bne.n	400aa6 <usart_serial_getchar+0x4e>
  400ab0:	e7e4      	b.n	400a7c <usart_serial_getchar+0x24>
		while (uart_read((Uart*)p_usart, data));
  400ab2:	461f      	mov	r7, r3
  400ab4:	4e1d      	ldr	r6, [pc, #116]	; (400b2c <usart_serial_getchar+0xd4>)
  400ab6:	4621      	mov	r1, r4
  400ab8:	4638      	mov	r0, r7
  400aba:	47b0      	blx	r6
  400abc:	2800      	cmp	r0, #0
  400abe:	d1fa      	bne.n	400ab6 <usart_serial_getchar+0x5e>
  400ac0:	e7df      	b.n	400a82 <usart_serial_getchar+0x2a>
		while (uart_read((Uart*)p_usart, data));
  400ac2:	461f      	mov	r7, r3
  400ac4:	4e19      	ldr	r6, [pc, #100]	; (400b2c <usart_serial_getchar+0xd4>)
  400ac6:	4621      	mov	r1, r4
  400ac8:	4638      	mov	r0, r7
  400aca:	47b0      	blx	r6
  400acc:	2800      	cmp	r0, #0
  400ace:	d1fa      	bne.n	400ac6 <usart_serial_getchar+0x6e>
  400ad0:	e7da      	b.n	400a88 <usart_serial_getchar+0x30>
		while (usart_read(p_usart, &val));
  400ad2:	461e      	mov	r6, r3
  400ad4:	4d16      	ldr	r5, [pc, #88]	; (400b30 <usart_serial_getchar+0xd8>)
  400ad6:	a901      	add	r1, sp, #4
  400ad8:	4630      	mov	r0, r6
  400ada:	47a8      	blx	r5
  400adc:	2800      	cmp	r0, #0
  400ade:	d1fa      	bne.n	400ad6 <usart_serial_getchar+0x7e>
		*data = (uint8_t)(val & 0xFF);
  400ae0:	9b01      	ldr	r3, [sp, #4]
  400ae2:	7023      	strb	r3, [r4, #0]
  400ae4:	e7d3      	b.n	400a8e <usart_serial_getchar+0x36>
		while (usart_read(p_usart, &val));
  400ae6:	461e      	mov	r6, r3
  400ae8:	4d11      	ldr	r5, [pc, #68]	; (400b30 <usart_serial_getchar+0xd8>)
  400aea:	a901      	add	r1, sp, #4
  400aec:	4630      	mov	r0, r6
  400aee:	47a8      	blx	r5
  400af0:	2800      	cmp	r0, #0
  400af2:	d1fa      	bne.n	400aea <usart_serial_getchar+0x92>
		*data = (uint8_t)(val & 0xFF);
  400af4:	9b01      	ldr	r3, [sp, #4]
  400af6:	7023      	strb	r3, [r4, #0]
  400af8:	e7c9      	b.n	400a8e <usart_serial_getchar+0x36>
		while (usart_read(p_usart, &val));
  400afa:	461e      	mov	r6, r3
  400afc:	4d0c      	ldr	r5, [pc, #48]	; (400b30 <usart_serial_getchar+0xd8>)
  400afe:	a901      	add	r1, sp, #4
  400b00:	4630      	mov	r0, r6
  400b02:	47a8      	blx	r5
  400b04:	2800      	cmp	r0, #0
  400b06:	d1fa      	bne.n	400afe <usart_serial_getchar+0xa6>
		*data = (uint8_t)(val & 0xFF);
  400b08:	9b01      	ldr	r3, [sp, #4]
  400b0a:	7023      	strb	r3, [r4, #0]
}
  400b0c:	e7bf      	b.n	400a8e <usart_serial_getchar+0x36>
  400b0e:	bf00      	nop
  400b10:	400e0800 	.word	0x400e0800
  400b14:	400e0a00 	.word	0x400e0a00
  400b18:	400e1a00 	.word	0x400e1a00
  400b1c:	400e1c00 	.word	0x400e1c00
  400b20:	40024000 	.word	0x40024000
  400b24:	40028000 	.word	0x40028000
  400b28:	4002c000 	.word	0x4002c000
  400b2c:	00400387 	.word	0x00400387
  400b30:	0040030b 	.word	0x0040030b

00400b34 <usart_serial_putchar>:
{
  400b34:	b570      	push	{r4, r5, r6, lr}
  400b36:	460c      	mov	r4, r1
	if (UART0 == (Uart*)p_usart) {
  400b38:	4b2a      	ldr	r3, [pc, #168]	; (400be4 <usart_serial_putchar+0xb0>)
  400b3a:	4298      	cmp	r0, r3
  400b3c:	d013      	beq.n	400b66 <usart_serial_putchar+0x32>
	if (UART1 == (Uart*)p_usart) {
  400b3e:	4b2a      	ldr	r3, [pc, #168]	; (400be8 <usart_serial_putchar+0xb4>)
  400b40:	4298      	cmp	r0, r3
  400b42:	d019      	beq.n	400b78 <usart_serial_putchar+0x44>
	if (UART2 == (Uart*)p_usart) {
  400b44:	4b29      	ldr	r3, [pc, #164]	; (400bec <usart_serial_putchar+0xb8>)
  400b46:	4298      	cmp	r0, r3
  400b48:	d01f      	beq.n	400b8a <usart_serial_putchar+0x56>
	if (UART3 == (Uart*)p_usart) {
  400b4a:	4b29      	ldr	r3, [pc, #164]	; (400bf0 <usart_serial_putchar+0xbc>)
  400b4c:	4298      	cmp	r0, r3
  400b4e:	d025      	beq.n	400b9c <usart_serial_putchar+0x68>
	if (USART0 == p_usart) {
  400b50:	4b28      	ldr	r3, [pc, #160]	; (400bf4 <usart_serial_putchar+0xc0>)
  400b52:	4298      	cmp	r0, r3
  400b54:	d02b      	beq.n	400bae <usart_serial_putchar+0x7a>
	if (USART1 == p_usart) {
  400b56:	4b28      	ldr	r3, [pc, #160]	; (400bf8 <usart_serial_putchar+0xc4>)
  400b58:	4298      	cmp	r0, r3
  400b5a:	d031      	beq.n	400bc0 <usart_serial_putchar+0x8c>
	if (USART2 == p_usart) {
  400b5c:	4b27      	ldr	r3, [pc, #156]	; (400bfc <usart_serial_putchar+0xc8>)
  400b5e:	4298      	cmp	r0, r3
  400b60:	d037      	beq.n	400bd2 <usart_serial_putchar+0x9e>
	return 0;
  400b62:	2000      	movs	r0, #0
}
  400b64:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  400b66:	461e      	mov	r6, r3
  400b68:	4d25      	ldr	r5, [pc, #148]	; (400c00 <usart_serial_putchar+0xcc>)
  400b6a:	4621      	mov	r1, r4
  400b6c:	4630      	mov	r0, r6
  400b6e:	47a8      	blx	r5
  400b70:	2800      	cmp	r0, #0
  400b72:	d1fa      	bne.n	400b6a <usart_serial_putchar+0x36>
		return 1;
  400b74:	2001      	movs	r0, #1
  400b76:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  400b78:	461e      	mov	r6, r3
  400b7a:	4d21      	ldr	r5, [pc, #132]	; (400c00 <usart_serial_putchar+0xcc>)
  400b7c:	4621      	mov	r1, r4
  400b7e:	4630      	mov	r0, r6
  400b80:	47a8      	blx	r5
  400b82:	2800      	cmp	r0, #0
  400b84:	d1fa      	bne.n	400b7c <usart_serial_putchar+0x48>
		return 1;
  400b86:	2001      	movs	r0, #1
  400b88:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  400b8a:	461e      	mov	r6, r3
  400b8c:	4d1c      	ldr	r5, [pc, #112]	; (400c00 <usart_serial_putchar+0xcc>)
  400b8e:	4621      	mov	r1, r4
  400b90:	4630      	mov	r0, r6
  400b92:	47a8      	blx	r5
  400b94:	2800      	cmp	r0, #0
  400b96:	d1fa      	bne.n	400b8e <usart_serial_putchar+0x5a>
		return 1;
  400b98:	2001      	movs	r0, #1
  400b9a:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  400b9c:	461e      	mov	r6, r3
  400b9e:	4d18      	ldr	r5, [pc, #96]	; (400c00 <usart_serial_putchar+0xcc>)
  400ba0:	4621      	mov	r1, r4
  400ba2:	4630      	mov	r0, r6
  400ba4:	47a8      	blx	r5
  400ba6:	2800      	cmp	r0, #0
  400ba8:	d1fa      	bne.n	400ba0 <usart_serial_putchar+0x6c>
		return 1;
  400baa:	2001      	movs	r0, #1
  400bac:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  400bae:	461e      	mov	r6, r3
  400bb0:	4d14      	ldr	r5, [pc, #80]	; (400c04 <usart_serial_putchar+0xd0>)
  400bb2:	4621      	mov	r1, r4
  400bb4:	4630      	mov	r0, r6
  400bb6:	47a8      	blx	r5
  400bb8:	2800      	cmp	r0, #0
  400bba:	d1fa      	bne.n	400bb2 <usart_serial_putchar+0x7e>
		return 1;
  400bbc:	2001      	movs	r0, #1
  400bbe:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  400bc0:	461e      	mov	r6, r3
  400bc2:	4d10      	ldr	r5, [pc, #64]	; (400c04 <usart_serial_putchar+0xd0>)
  400bc4:	4621      	mov	r1, r4
  400bc6:	4630      	mov	r0, r6
  400bc8:	47a8      	blx	r5
  400bca:	2800      	cmp	r0, #0
  400bcc:	d1fa      	bne.n	400bc4 <usart_serial_putchar+0x90>
		return 1;
  400bce:	2001      	movs	r0, #1
  400bd0:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  400bd2:	461e      	mov	r6, r3
  400bd4:	4d0b      	ldr	r5, [pc, #44]	; (400c04 <usart_serial_putchar+0xd0>)
  400bd6:	4621      	mov	r1, r4
  400bd8:	4630      	mov	r0, r6
  400bda:	47a8      	blx	r5
  400bdc:	2800      	cmp	r0, #0
  400bde:	d1fa      	bne.n	400bd6 <usart_serial_putchar+0xa2>
		return 1;
  400be0:	2001      	movs	r0, #1
  400be2:	bd70      	pop	{r4, r5, r6, pc}
  400be4:	400e0800 	.word	0x400e0800
  400be8:	400e0a00 	.word	0x400e0a00
  400bec:	400e1a00 	.word	0x400e1a00
  400bf0:	400e1c00 	.word	0x400e1c00
  400bf4:	40024000 	.word	0x40024000
  400bf8:	40028000 	.word	0x40028000
  400bfc:	4002c000 	.word	0x4002c000
  400c00:	00400375 	.word	0x00400375
  400c04:	004002f5 	.word	0x004002f5

00400c08 <main>:
	setbuf(stdout, NULL);
#endif
}

int main(void)
{
  400c08:	b5f0      	push	{r4, r5, r6, r7, lr}
  400c0a:	b089      	sub	sp, #36	; 0x24
	sysclk_init();
  400c0c:	4b46      	ldr	r3, [pc, #280]	; (400d28 <main+0x120>)
  400c0e:	4798      	blx	r3
	board_init();
  400c10:	4b46      	ldr	r3, [pc, #280]	; (400d2c <main+0x124>)
  400c12:	4798      	blx	r3
  400c14:	200a      	movs	r0, #10
  400c16:	4d46      	ldr	r5, [pc, #280]	; (400d30 <main+0x128>)
  400c18:	47a8      	blx	r5
  400c1a:	200b      	movs	r0, #11
  400c1c:	47a8      	blx	r5
  400c1e:	200c      	movs	r0, #12
  400c20:	47a8      	blx	r5
  400c22:	2010      	movs	r0, #16
  400c24:	47a8      	blx	r5
  400c26:	2011      	movs	r0, #17
  400c28:	47a8      	blx	r5
  400c2a:	200e      	movs	r0, #14
  400c2c:	47a8      	blx	r5
 * \param opt         Options needed to set up RS232 communication (see \ref usart_options_t).
 *
 */
static inline void stdio_serial_init(volatile void *usart, const usart_serial_options_t *opt)
{
	stdio_base = (void *)usart;
  400c2e:	4f41      	ldr	r7, [pc, #260]	; (400d34 <main+0x12c>)
  400c30:	4b41      	ldr	r3, [pc, #260]	; (400d38 <main+0x130>)
  400c32:	601f      	str	r7, [r3, #0]
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
  400c34:	4a41      	ldr	r2, [pc, #260]	; (400d3c <main+0x134>)
  400c36:	4b42      	ldr	r3, [pc, #264]	; (400d40 <main+0x138>)
  400c38:	601a      	str	r2, [r3, #0]
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
  400c3a:	4a42      	ldr	r2, [pc, #264]	; (400d44 <main+0x13c>)
  400c3c:	4b42      	ldr	r3, [pc, #264]	; (400d48 <main+0x140>)
  400c3e:	601a      	str	r2, [r3, #0]
	usart_settings.baudrate = opt->baudrate;
  400c40:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
  400c44:	9301      	str	r3, [sp, #4]
	usart_settings.char_length = opt->charlength;
  400c46:	23c0      	movs	r3, #192	; 0xc0
  400c48:	9302      	str	r3, [sp, #8]
	usart_settings.parity_type = opt->paritytype;
  400c4a:	f44f 6400 	mov.w	r4, #2048	; 0x800
  400c4e:	9403      	str	r4, [sp, #12]
	usart_settings.stop_bits= opt->stopbits;
  400c50:	2600      	movs	r6, #0
  400c52:	9604      	str	r6, [sp, #16]
	usart_settings.channel_mode= US_MR_CHMODE_NORMAL;
  400c54:	9605      	str	r6, [sp, #20]
  400c56:	200e      	movs	r0, #14
  400c58:	47a8      	blx	r5
		usart_init_rs232(p_usart, &usart_settings,
  400c5a:	4a3c      	ldr	r2, [pc, #240]	; (400d4c <main+0x144>)
  400c5c:	a901      	add	r1, sp, #4
  400c5e:	4638      	mov	r0, r7
  400c60:	4b3b      	ldr	r3, [pc, #236]	; (400d50 <main+0x148>)
  400c62:	4798      	blx	r3
		usart_enable_tx(p_usart);
  400c64:	4638      	mov	r0, r7
  400c66:	4b3b      	ldr	r3, [pc, #236]	; (400d54 <main+0x14c>)
  400c68:	4798      	blx	r3
		usart_enable_rx(p_usart);
  400c6a:	4638      	mov	r0, r7
  400c6c:	4b3a      	ldr	r3, [pc, #232]	; (400d58 <main+0x150>)
  400c6e:	4798      	blx	r3
	fdevopen((int (*)(char, FILE*))(_write),(int (*)(FILE*))(_read));
#  endif
#  if UC3 || SAM
	// For AVR32 and SAM GCC
	// Specify that stdout and stdin should not be buffered.
	setbuf(stdout, NULL);
  400c70:	4f3a      	ldr	r7, [pc, #232]	; (400d5c <main+0x154>)
  400c72:	683b      	ldr	r3, [r7, #0]
  400c74:	4631      	mov	r1, r6
  400c76:	6898      	ldr	r0, [r3, #8]
  400c78:	4d39      	ldr	r5, [pc, #228]	; (400d60 <main+0x158>)
  400c7a:	47a8      	blx	r5
	setbuf(stdin, NULL);
  400c7c:	683b      	ldr	r3, [r7, #0]
  400c7e:	4631      	mov	r1, r6
  400c80:	6858      	ldr	r0, [r3, #4]
  400c82:	47a8      	blx	r5
	setbuf(stdout, NULL);
  400c84:	683b      	ldr	r3, [r7, #0]
  400c86:	4631      	mov	r1, r6
  400c88:	6898      	ldr	r0, [r3, #8]
  400c8a:	47a8      	blx	r5
	ioport_init();
	
	/* Configure debug UART */
	configure_console();
	
	puts("Starting\r\n\r\n");
  400c8c:	4835      	ldr	r0, [pc, #212]	; (400d64 <main+0x15c>)
  400c8e:	4b36      	ldr	r3, [pc, #216]	; (400d68 <main+0x160>)
  400c90:	4798      	blx	r3
	
	bool level = true;
	bool prevlevel = true;
	char status [4] = "OFF";
  400c92:	4b36      	ldr	r3, [pc, #216]	; (400d6c <main+0x164>)
  400c94:	9307      	str	r3, [sp, #28]
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  400c96:	4b36      	ldr	r3, [pc, #216]	; (400d70 <main+0x168>)
  400c98:	f44f 7280 	mov.w	r2, #256	; 0x100
  400c9c:	611a      	str	r2, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400c9e:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  400ca2:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
  400ca6:	615c      	str	r4, [r3, #20]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400ca8:	f8c3 40a0 	str.w	r4, [r3, #160]	; 0xa0
		base->PIO_PUER = mask;
  400cac:	665c      	str	r4, [r3, #100]	; 0x64
		base->PIO_PPDDR = mask;
  400cae:	f8c3 4090 	str.w	r4, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  400cb2:	655c      	str	r4, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
  400cb4:	625c      	str	r4, [r3, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  400cb6:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  400cba:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  400cbc:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
  400cc0:	671a      	str	r2, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  400cc2:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  400cc4:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
  400cc8:	675a      	str	r2, [r3, #116]	; 0x74
	bool prevlevel = true;
  400cca:	2201      	movs	r2, #1
	return arch_ioport_pin_to_base(pin)->PIO_PDSR & arch_ioport_pin_to_mask(pin);
  400ccc:	461e      	mov	r6, r3
			else
			{
				strncpy(status, "ON", 3);
			}
				
			printf("LED is %s\r\n", status);
  400cce:	4f29      	ldr	r7, [pc, #164]	; (400d74 <main+0x16c>)
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  400cd0:	4d27      	ldr	r5, [pc, #156]	; (400d70 <main+0x168>)
  400cd2:	e00f      	b.n	400cf4 <main+0xec>
				strncpy(status, "ON", 3);
  400cd4:	4b28      	ldr	r3, [pc, #160]	; (400d78 <main+0x170>)
  400cd6:	681b      	ldr	r3, [r3, #0]
  400cd8:	f8ad 301c 	strh.w	r3, [sp, #28]
  400cdc:	0c1b      	lsrs	r3, r3, #16
  400cde:	f88d 301e 	strb.w	r3, [sp, #30]
			printf("LED is %s\r\n", status);
  400ce2:	a907      	add	r1, sp, #28
  400ce4:	4638      	mov	r0, r7
  400ce6:	4b25      	ldr	r3, [pc, #148]	; (400d7c <main+0x174>)
  400ce8:	4798      	blx	r3
	if (level) {
  400cea:	b1bc      	cbz	r4, 400d1c <main+0x114>
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  400cec:	f44f 7380 	mov.w	r3, #256	; 0x100
  400cf0:	632b      	str	r3, [r5, #48]	; 0x30
  400cf2:	2201      	movs	r2, #1
	return arch_ioport_pin_to_base(pin)->PIO_PDSR & arch_ioport_pin_to_mask(pin);
  400cf4:	6bf3      	ldr	r3, [r6, #60]	; 0x3c
  400cf6:	f403 6400 	and.w	r4, r3, #2048	; 0x800
		if(level != prevlevel)
  400cfa:	f3c3 23c0 	ubfx	r3, r3, #11, #1
  400cfe:	4293      	cmp	r3, r2
  400d00:	d0f3      	beq.n	400cea <main+0xe2>
			if(level)
  400d02:	2c00      	cmp	r4, #0
  400d04:	d0e6      	beq.n	400cd4 <main+0xcc>
				strncpy(status, "OFF", 3);
  400d06:	4b1e      	ldr	r3, [pc, #120]	; (400d80 <main+0x178>)
  400d08:	681b      	ldr	r3, [r3, #0]
  400d0a:	f8ad 301c 	strh.w	r3, [sp, #28]
  400d0e:	0c1b      	lsrs	r3, r3, #16
  400d10:	f88d 301e 	strb.w	r3, [sp, #30]
				printf("Read Data\r\n");
  400d14:	481b      	ldr	r0, [pc, #108]	; (400d84 <main+0x17c>)
  400d16:	4b19      	ldr	r3, [pc, #100]	; (400d7c <main+0x174>)
  400d18:	4798      	blx	r3
  400d1a:	e7e2      	b.n	400ce2 <main+0xda>
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  400d1c:	f44f 7380 	mov.w	r3, #256	; 0x100
  400d20:	636b      	str	r3, [r5, #52]	; 0x34
  400d22:	2200      	movs	r2, #0
  400d24:	e7e6      	b.n	400cf4 <main+0xec>
  400d26:	bf00      	nop
  400d28:	0040039d 	.word	0x0040039d
  400d2c:	00400411 	.word	0x00400411
  400d30:	00400785 	.word	0x00400785
  400d34:	40028000 	.word	0x40028000
  400d38:	20400a88 	.word	0x20400a88
  400d3c:	00400b35 	.word	0x00400b35
  400d40:	20400a84 	.word	0x20400a84
  400d44:	00400a59 	.word	0x00400a59
  400d48:	20400a80 	.word	0x20400a80
  400d4c:	047868c0 	.word	0x047868c0
  400d50:	00400295 	.word	0x00400295
  400d54:	004002e9 	.word	0x004002e9
  400d58:	004002ef 	.word	0x004002ef
  400d5c:	20400008 	.word	0x20400008
  400d60:	00400f49 	.word	0x00400f49
  400d64:	00403db8 	.word	0x00403db8
  400d68:	00400f39 	.word	0x00400f39
  400d6c:	0046464f 	.word	0x0046464f
  400d70:	400e1200 	.word	0x400e1200
  400d74:	00403ddc 	.word	0x00403ddc
  400d78:	00403dd8 	.word	0x00403dd8
  400d7c:	00400dd9 	.word	0x00400dd9
  400d80:	00403dc8 	.word	0x00403dc8
  400d84:	00403dcc 	.word	0x00403dcc

00400d88 <__libc_init_array>:
  400d88:	b570      	push	{r4, r5, r6, lr}
  400d8a:	4e0f      	ldr	r6, [pc, #60]	; (400dc8 <__libc_init_array+0x40>)
  400d8c:	4d0f      	ldr	r5, [pc, #60]	; (400dcc <__libc_init_array+0x44>)
  400d8e:	1b76      	subs	r6, r6, r5
  400d90:	10b6      	asrs	r6, r6, #2
  400d92:	bf18      	it	ne
  400d94:	2400      	movne	r4, #0
  400d96:	d005      	beq.n	400da4 <__libc_init_array+0x1c>
  400d98:	3401      	adds	r4, #1
  400d9a:	f855 3b04 	ldr.w	r3, [r5], #4
  400d9e:	4798      	blx	r3
  400da0:	42a6      	cmp	r6, r4
  400da2:	d1f9      	bne.n	400d98 <__libc_init_array+0x10>
  400da4:	4e0a      	ldr	r6, [pc, #40]	; (400dd0 <__libc_init_array+0x48>)
  400da6:	4d0b      	ldr	r5, [pc, #44]	; (400dd4 <__libc_init_array+0x4c>)
  400da8:	1b76      	subs	r6, r6, r5
  400daa:	f003 f8d3 	bl	403f54 <_init>
  400dae:	10b6      	asrs	r6, r6, #2
  400db0:	bf18      	it	ne
  400db2:	2400      	movne	r4, #0
  400db4:	d006      	beq.n	400dc4 <__libc_init_array+0x3c>
  400db6:	3401      	adds	r4, #1
  400db8:	f855 3b04 	ldr.w	r3, [r5], #4
  400dbc:	4798      	blx	r3
  400dbe:	42a6      	cmp	r6, r4
  400dc0:	d1f9      	bne.n	400db6 <__libc_init_array+0x2e>
  400dc2:	bd70      	pop	{r4, r5, r6, pc}
  400dc4:	bd70      	pop	{r4, r5, r6, pc}
  400dc6:	bf00      	nop
  400dc8:	00403f60 	.word	0x00403f60
  400dcc:	00403f60 	.word	0x00403f60
  400dd0:	00403f68 	.word	0x00403f68
  400dd4:	00403f60 	.word	0x00403f60

00400dd8 <iprintf>:
  400dd8:	b40f      	push	{r0, r1, r2, r3}
  400dda:	b500      	push	{lr}
  400ddc:	4907      	ldr	r1, [pc, #28]	; (400dfc <iprintf+0x24>)
  400dde:	b083      	sub	sp, #12
  400de0:	ab04      	add	r3, sp, #16
  400de2:	6808      	ldr	r0, [r1, #0]
  400de4:	f853 2b04 	ldr.w	r2, [r3], #4
  400de8:	6881      	ldr	r1, [r0, #8]
  400dea:	9301      	str	r3, [sp, #4]
  400dec:	f000 fa36 	bl	40125c <_vfiprintf_r>
  400df0:	b003      	add	sp, #12
  400df2:	f85d eb04 	ldr.w	lr, [sp], #4
  400df6:	b004      	add	sp, #16
  400df8:	4770      	bx	lr
  400dfa:	bf00      	nop
  400dfc:	20400008 	.word	0x20400008

00400e00 <memset>:
  400e00:	b470      	push	{r4, r5, r6}
  400e02:	0786      	lsls	r6, r0, #30
  400e04:	d046      	beq.n	400e94 <memset+0x94>
  400e06:	1e54      	subs	r4, r2, #1
  400e08:	2a00      	cmp	r2, #0
  400e0a:	d041      	beq.n	400e90 <memset+0x90>
  400e0c:	b2ca      	uxtb	r2, r1
  400e0e:	4603      	mov	r3, r0
  400e10:	e002      	b.n	400e18 <memset+0x18>
  400e12:	f114 34ff 	adds.w	r4, r4, #4294967295
  400e16:	d33b      	bcc.n	400e90 <memset+0x90>
  400e18:	f803 2b01 	strb.w	r2, [r3], #1
  400e1c:	079d      	lsls	r5, r3, #30
  400e1e:	d1f8      	bne.n	400e12 <memset+0x12>
  400e20:	2c03      	cmp	r4, #3
  400e22:	d92e      	bls.n	400e82 <memset+0x82>
  400e24:	b2cd      	uxtb	r5, r1
  400e26:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  400e2a:	2c0f      	cmp	r4, #15
  400e2c:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  400e30:	d919      	bls.n	400e66 <memset+0x66>
  400e32:	f103 0210 	add.w	r2, r3, #16
  400e36:	4626      	mov	r6, r4
  400e38:	3e10      	subs	r6, #16
  400e3a:	2e0f      	cmp	r6, #15
  400e3c:	f842 5c10 	str.w	r5, [r2, #-16]
  400e40:	f842 5c0c 	str.w	r5, [r2, #-12]
  400e44:	f842 5c08 	str.w	r5, [r2, #-8]
  400e48:	f842 5c04 	str.w	r5, [r2, #-4]
  400e4c:	f102 0210 	add.w	r2, r2, #16
  400e50:	d8f2      	bhi.n	400e38 <memset+0x38>
  400e52:	f1a4 0210 	sub.w	r2, r4, #16
  400e56:	f022 020f 	bic.w	r2, r2, #15
  400e5a:	f004 040f 	and.w	r4, r4, #15
  400e5e:	3210      	adds	r2, #16
  400e60:	2c03      	cmp	r4, #3
  400e62:	4413      	add	r3, r2
  400e64:	d90d      	bls.n	400e82 <memset+0x82>
  400e66:	461e      	mov	r6, r3
  400e68:	4622      	mov	r2, r4
  400e6a:	3a04      	subs	r2, #4
  400e6c:	2a03      	cmp	r2, #3
  400e6e:	f846 5b04 	str.w	r5, [r6], #4
  400e72:	d8fa      	bhi.n	400e6a <memset+0x6a>
  400e74:	1f22      	subs	r2, r4, #4
  400e76:	f022 0203 	bic.w	r2, r2, #3
  400e7a:	3204      	adds	r2, #4
  400e7c:	4413      	add	r3, r2
  400e7e:	f004 0403 	and.w	r4, r4, #3
  400e82:	b12c      	cbz	r4, 400e90 <memset+0x90>
  400e84:	b2c9      	uxtb	r1, r1
  400e86:	441c      	add	r4, r3
  400e88:	f803 1b01 	strb.w	r1, [r3], #1
  400e8c:	429c      	cmp	r4, r3
  400e8e:	d1fb      	bne.n	400e88 <memset+0x88>
  400e90:	bc70      	pop	{r4, r5, r6}
  400e92:	4770      	bx	lr
  400e94:	4614      	mov	r4, r2
  400e96:	4603      	mov	r3, r0
  400e98:	e7c2      	b.n	400e20 <memset+0x20>
  400e9a:	bf00      	nop

00400e9c <_puts_r>:
  400e9c:	b5f0      	push	{r4, r5, r6, r7, lr}
  400e9e:	4605      	mov	r5, r0
  400ea0:	b089      	sub	sp, #36	; 0x24
  400ea2:	4608      	mov	r0, r1
  400ea4:	460c      	mov	r4, r1
  400ea6:	f000 f92b 	bl	401100 <strlen>
  400eaa:	6bab      	ldr	r3, [r5, #56]	; 0x38
  400eac:	4f21      	ldr	r7, [pc, #132]	; (400f34 <_puts_r+0x98>)
  400eae:	9404      	str	r4, [sp, #16]
  400eb0:	2601      	movs	r6, #1
  400eb2:	1c44      	adds	r4, r0, #1
  400eb4:	a904      	add	r1, sp, #16
  400eb6:	2202      	movs	r2, #2
  400eb8:	9403      	str	r4, [sp, #12]
  400eba:	9005      	str	r0, [sp, #20]
  400ebc:	68ac      	ldr	r4, [r5, #8]
  400ebe:	9706      	str	r7, [sp, #24]
  400ec0:	9607      	str	r6, [sp, #28]
  400ec2:	9101      	str	r1, [sp, #4]
  400ec4:	9202      	str	r2, [sp, #8]
  400ec6:	b353      	cbz	r3, 400f1e <_puts_r+0x82>
  400ec8:	6e63      	ldr	r3, [r4, #100]	; 0x64
  400eca:	f013 0f01 	tst.w	r3, #1
  400ece:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  400ed2:	b29a      	uxth	r2, r3
  400ed4:	d101      	bne.n	400eda <_puts_r+0x3e>
  400ed6:	0590      	lsls	r0, r2, #22
  400ed8:	d525      	bpl.n	400f26 <_puts_r+0x8a>
  400eda:	0491      	lsls	r1, r2, #18
  400edc:	d406      	bmi.n	400eec <_puts_r+0x50>
  400ede:	6e62      	ldr	r2, [r4, #100]	; 0x64
  400ee0:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  400ee4:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
  400ee8:	81a3      	strh	r3, [r4, #12]
  400eea:	6662      	str	r2, [r4, #100]	; 0x64
  400eec:	4628      	mov	r0, r5
  400eee:	aa01      	add	r2, sp, #4
  400ef0:	4621      	mov	r1, r4
  400ef2:	f001 fbb5 	bl	402660 <__sfvwrite_r>
  400ef6:	6e63      	ldr	r3, [r4, #100]	; 0x64
  400ef8:	2800      	cmp	r0, #0
  400efa:	bf0c      	ite	eq
  400efc:	250a      	moveq	r5, #10
  400efe:	f04f 35ff 	movne.w	r5, #4294967295
  400f02:	07da      	lsls	r2, r3, #31
  400f04:	d402      	bmi.n	400f0c <_puts_r+0x70>
  400f06:	89a3      	ldrh	r3, [r4, #12]
  400f08:	059b      	lsls	r3, r3, #22
  400f0a:	d502      	bpl.n	400f12 <_puts_r+0x76>
  400f0c:	4628      	mov	r0, r5
  400f0e:	b009      	add	sp, #36	; 0x24
  400f10:	bdf0      	pop	{r4, r5, r6, r7, pc}
  400f12:	6da0      	ldr	r0, [r4, #88]	; 0x58
  400f14:	f001 fd5a 	bl	4029cc <__retarget_lock_release_recursive>
  400f18:	4628      	mov	r0, r5
  400f1a:	b009      	add	sp, #36	; 0x24
  400f1c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  400f1e:	4628      	mov	r0, r5
  400f20:	f001 f992 	bl	402248 <__sinit>
  400f24:	e7d0      	b.n	400ec8 <_puts_r+0x2c>
  400f26:	6da0      	ldr	r0, [r4, #88]	; 0x58
  400f28:	f001 fd4e 	bl	4029c8 <__retarget_lock_acquire_recursive>
  400f2c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  400f30:	b29a      	uxth	r2, r3
  400f32:	e7d2      	b.n	400eda <_puts_r+0x3e>
  400f34:	00403dec 	.word	0x00403dec

00400f38 <puts>:
  400f38:	4b02      	ldr	r3, [pc, #8]	; (400f44 <puts+0xc>)
  400f3a:	4601      	mov	r1, r0
  400f3c:	6818      	ldr	r0, [r3, #0]
  400f3e:	f7ff bfad 	b.w	400e9c <_puts_r>
  400f42:	bf00      	nop
  400f44:	20400008 	.word	0x20400008

00400f48 <setbuf>:
  400f48:	2900      	cmp	r1, #0
  400f4a:	bf0c      	ite	eq
  400f4c:	2202      	moveq	r2, #2
  400f4e:	2200      	movne	r2, #0
  400f50:	f44f 6380 	mov.w	r3, #1024	; 0x400
  400f54:	f000 b800 	b.w	400f58 <setvbuf>

00400f58 <setvbuf>:
  400f58:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  400f5c:	4c61      	ldr	r4, [pc, #388]	; (4010e4 <setvbuf+0x18c>)
  400f5e:	6825      	ldr	r5, [r4, #0]
  400f60:	b083      	sub	sp, #12
  400f62:	4604      	mov	r4, r0
  400f64:	460f      	mov	r7, r1
  400f66:	4690      	mov	r8, r2
  400f68:	461e      	mov	r6, r3
  400f6a:	b115      	cbz	r5, 400f72 <setvbuf+0x1a>
  400f6c:	6bab      	ldr	r3, [r5, #56]	; 0x38
  400f6e:	2b00      	cmp	r3, #0
  400f70:	d064      	beq.n	40103c <setvbuf+0xe4>
  400f72:	f1b8 0f02 	cmp.w	r8, #2
  400f76:	d006      	beq.n	400f86 <setvbuf+0x2e>
  400f78:	f1b8 0f01 	cmp.w	r8, #1
  400f7c:	f200 809f 	bhi.w	4010be <setvbuf+0x166>
  400f80:	2e00      	cmp	r6, #0
  400f82:	f2c0 809c 	blt.w	4010be <setvbuf+0x166>
  400f86:	6e63      	ldr	r3, [r4, #100]	; 0x64
  400f88:	07d8      	lsls	r0, r3, #31
  400f8a:	d534      	bpl.n	400ff6 <setvbuf+0x9e>
  400f8c:	4621      	mov	r1, r4
  400f8e:	4628      	mov	r0, r5
  400f90:	f001 f902 	bl	402198 <_fflush_r>
  400f94:	6b21      	ldr	r1, [r4, #48]	; 0x30
  400f96:	b141      	cbz	r1, 400faa <setvbuf+0x52>
  400f98:	f104 0340 	add.w	r3, r4, #64	; 0x40
  400f9c:	4299      	cmp	r1, r3
  400f9e:	d002      	beq.n	400fa6 <setvbuf+0x4e>
  400fa0:	4628      	mov	r0, r5
  400fa2:	f001 fa77 	bl	402494 <_free_r>
  400fa6:	2300      	movs	r3, #0
  400fa8:	6323      	str	r3, [r4, #48]	; 0x30
  400faa:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  400fae:	2200      	movs	r2, #0
  400fb0:	61a2      	str	r2, [r4, #24]
  400fb2:	6062      	str	r2, [r4, #4]
  400fb4:	061a      	lsls	r2, r3, #24
  400fb6:	d43a      	bmi.n	40102e <setvbuf+0xd6>
  400fb8:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
  400fbc:	f023 0303 	bic.w	r3, r3, #3
  400fc0:	f1b8 0f02 	cmp.w	r8, #2
  400fc4:	81a3      	strh	r3, [r4, #12]
  400fc6:	d01d      	beq.n	401004 <setvbuf+0xac>
  400fc8:	ab01      	add	r3, sp, #4
  400fca:	466a      	mov	r2, sp
  400fcc:	4621      	mov	r1, r4
  400fce:	4628      	mov	r0, r5
  400fd0:	f001 fcfe 	bl	4029d0 <__swhatbuf_r>
  400fd4:	89a3      	ldrh	r3, [r4, #12]
  400fd6:	4318      	orrs	r0, r3
  400fd8:	81a0      	strh	r0, [r4, #12]
  400fda:	2e00      	cmp	r6, #0
  400fdc:	d132      	bne.n	401044 <setvbuf+0xec>
  400fde:	9e00      	ldr	r6, [sp, #0]
  400fe0:	4630      	mov	r0, r6
  400fe2:	f001 fd6d 	bl	402ac0 <malloc>
  400fe6:	4607      	mov	r7, r0
  400fe8:	2800      	cmp	r0, #0
  400fea:	d06b      	beq.n	4010c4 <setvbuf+0x16c>
  400fec:	89a3      	ldrh	r3, [r4, #12]
  400fee:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  400ff2:	81a3      	strh	r3, [r4, #12]
  400ff4:	e028      	b.n	401048 <setvbuf+0xf0>
  400ff6:	89a3      	ldrh	r3, [r4, #12]
  400ff8:	0599      	lsls	r1, r3, #22
  400ffa:	d4c7      	bmi.n	400f8c <setvbuf+0x34>
  400ffc:	6da0      	ldr	r0, [r4, #88]	; 0x58
  400ffe:	f001 fce3 	bl	4029c8 <__retarget_lock_acquire_recursive>
  401002:	e7c3      	b.n	400f8c <setvbuf+0x34>
  401004:	2500      	movs	r5, #0
  401006:	6e61      	ldr	r1, [r4, #100]	; 0x64
  401008:	2600      	movs	r6, #0
  40100a:	f104 0243 	add.w	r2, r4, #67	; 0x43
  40100e:	f043 0302 	orr.w	r3, r3, #2
  401012:	2001      	movs	r0, #1
  401014:	60a6      	str	r6, [r4, #8]
  401016:	07ce      	lsls	r6, r1, #31
  401018:	81a3      	strh	r3, [r4, #12]
  40101a:	6022      	str	r2, [r4, #0]
  40101c:	6122      	str	r2, [r4, #16]
  40101e:	6160      	str	r0, [r4, #20]
  401020:	d401      	bmi.n	401026 <setvbuf+0xce>
  401022:	0598      	lsls	r0, r3, #22
  401024:	d53e      	bpl.n	4010a4 <setvbuf+0x14c>
  401026:	4628      	mov	r0, r5
  401028:	b003      	add	sp, #12
  40102a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  40102e:	6921      	ldr	r1, [r4, #16]
  401030:	4628      	mov	r0, r5
  401032:	f001 fa2f 	bl	402494 <_free_r>
  401036:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40103a:	e7bd      	b.n	400fb8 <setvbuf+0x60>
  40103c:	4628      	mov	r0, r5
  40103e:	f001 f903 	bl	402248 <__sinit>
  401042:	e796      	b.n	400f72 <setvbuf+0x1a>
  401044:	2f00      	cmp	r7, #0
  401046:	d0cb      	beq.n	400fe0 <setvbuf+0x88>
  401048:	6bab      	ldr	r3, [r5, #56]	; 0x38
  40104a:	2b00      	cmp	r3, #0
  40104c:	d033      	beq.n	4010b6 <setvbuf+0x15e>
  40104e:	9b00      	ldr	r3, [sp, #0]
  401050:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  401054:	6027      	str	r7, [r4, #0]
  401056:	429e      	cmp	r6, r3
  401058:	bf1c      	itt	ne
  40105a:	f442 6200 	orrne.w	r2, r2, #2048	; 0x800
  40105e:	81a2      	strhne	r2, [r4, #12]
  401060:	f1b8 0f01 	cmp.w	r8, #1
  401064:	bf04      	itt	eq
  401066:	f042 0201 	orreq.w	r2, r2, #1
  40106a:	81a2      	strheq	r2, [r4, #12]
  40106c:	b292      	uxth	r2, r2
  40106e:	f012 0308 	ands.w	r3, r2, #8
  401072:	6127      	str	r7, [r4, #16]
  401074:	6166      	str	r6, [r4, #20]
  401076:	d00e      	beq.n	401096 <setvbuf+0x13e>
  401078:	07d1      	lsls	r1, r2, #31
  40107a:	d51a      	bpl.n	4010b2 <setvbuf+0x15a>
  40107c:	6e65      	ldr	r5, [r4, #100]	; 0x64
  40107e:	4276      	negs	r6, r6
  401080:	2300      	movs	r3, #0
  401082:	f015 0501 	ands.w	r5, r5, #1
  401086:	61a6      	str	r6, [r4, #24]
  401088:	60a3      	str	r3, [r4, #8]
  40108a:	d009      	beq.n	4010a0 <setvbuf+0x148>
  40108c:	2500      	movs	r5, #0
  40108e:	4628      	mov	r0, r5
  401090:	b003      	add	sp, #12
  401092:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  401096:	60a3      	str	r3, [r4, #8]
  401098:	6e65      	ldr	r5, [r4, #100]	; 0x64
  40109a:	f015 0501 	ands.w	r5, r5, #1
  40109e:	d1f5      	bne.n	40108c <setvbuf+0x134>
  4010a0:	0593      	lsls	r3, r2, #22
  4010a2:	d4c0      	bmi.n	401026 <setvbuf+0xce>
  4010a4:	6da0      	ldr	r0, [r4, #88]	; 0x58
  4010a6:	f001 fc91 	bl	4029cc <__retarget_lock_release_recursive>
  4010aa:	4628      	mov	r0, r5
  4010ac:	b003      	add	sp, #12
  4010ae:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  4010b2:	60a6      	str	r6, [r4, #8]
  4010b4:	e7f0      	b.n	401098 <setvbuf+0x140>
  4010b6:	4628      	mov	r0, r5
  4010b8:	f001 f8c6 	bl	402248 <__sinit>
  4010bc:	e7c7      	b.n	40104e <setvbuf+0xf6>
  4010be:	f04f 35ff 	mov.w	r5, #4294967295
  4010c2:	e7b0      	b.n	401026 <setvbuf+0xce>
  4010c4:	f8dd 9000 	ldr.w	r9, [sp]
  4010c8:	45b1      	cmp	r9, r6
  4010ca:	d004      	beq.n	4010d6 <setvbuf+0x17e>
  4010cc:	4648      	mov	r0, r9
  4010ce:	f001 fcf7 	bl	402ac0 <malloc>
  4010d2:	4607      	mov	r7, r0
  4010d4:	b920      	cbnz	r0, 4010e0 <setvbuf+0x188>
  4010d6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4010da:	f04f 35ff 	mov.w	r5, #4294967295
  4010de:	e792      	b.n	401006 <setvbuf+0xae>
  4010e0:	464e      	mov	r6, r9
  4010e2:	e783      	b.n	400fec <setvbuf+0x94>
  4010e4:	20400008 	.word	0x20400008
	...

00401100 <strlen>:
  401100:	f890 f000 	pld	[r0]
  401104:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  401108:	f020 0107 	bic.w	r1, r0, #7
  40110c:	f06f 0c00 	mvn.w	ip, #0
  401110:	f010 0407 	ands.w	r4, r0, #7
  401114:	f891 f020 	pld	[r1, #32]
  401118:	f040 8049 	bne.w	4011ae <strlen+0xae>
  40111c:	f04f 0400 	mov.w	r4, #0
  401120:	f06f 0007 	mvn.w	r0, #7
  401124:	e9d1 2300 	ldrd	r2, r3, [r1]
  401128:	f891 f040 	pld	[r1, #64]	; 0x40
  40112c:	f100 0008 	add.w	r0, r0, #8
  401130:	fa82 f24c 	uadd8	r2, r2, ip
  401134:	faa4 f28c 	sel	r2, r4, ip
  401138:	fa83 f34c 	uadd8	r3, r3, ip
  40113c:	faa2 f38c 	sel	r3, r2, ip
  401140:	bb4b      	cbnz	r3, 401196 <strlen+0x96>
  401142:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  401146:	fa82 f24c 	uadd8	r2, r2, ip
  40114a:	f100 0008 	add.w	r0, r0, #8
  40114e:	faa4 f28c 	sel	r2, r4, ip
  401152:	fa83 f34c 	uadd8	r3, r3, ip
  401156:	faa2 f38c 	sel	r3, r2, ip
  40115a:	b9e3      	cbnz	r3, 401196 <strlen+0x96>
  40115c:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  401160:	fa82 f24c 	uadd8	r2, r2, ip
  401164:	f100 0008 	add.w	r0, r0, #8
  401168:	faa4 f28c 	sel	r2, r4, ip
  40116c:	fa83 f34c 	uadd8	r3, r3, ip
  401170:	faa2 f38c 	sel	r3, r2, ip
  401174:	b97b      	cbnz	r3, 401196 <strlen+0x96>
  401176:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  40117a:	f101 0120 	add.w	r1, r1, #32
  40117e:	fa82 f24c 	uadd8	r2, r2, ip
  401182:	f100 0008 	add.w	r0, r0, #8
  401186:	faa4 f28c 	sel	r2, r4, ip
  40118a:	fa83 f34c 	uadd8	r3, r3, ip
  40118e:	faa2 f38c 	sel	r3, r2, ip
  401192:	2b00      	cmp	r3, #0
  401194:	d0c6      	beq.n	401124 <strlen+0x24>
  401196:	2a00      	cmp	r2, #0
  401198:	bf04      	itt	eq
  40119a:	3004      	addeq	r0, #4
  40119c:	461a      	moveq	r2, r3
  40119e:	ba12      	rev	r2, r2
  4011a0:	fab2 f282 	clz	r2, r2
  4011a4:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  4011a8:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  4011ac:	4770      	bx	lr
  4011ae:	e9d1 2300 	ldrd	r2, r3, [r1]
  4011b2:	f004 0503 	and.w	r5, r4, #3
  4011b6:	f1c4 0000 	rsb	r0, r4, #0
  4011ba:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  4011be:	f014 0f04 	tst.w	r4, #4
  4011c2:	f891 f040 	pld	[r1, #64]	; 0x40
  4011c6:	fa0c f505 	lsl.w	r5, ip, r5
  4011ca:	ea62 0205 	orn	r2, r2, r5
  4011ce:	bf1c      	itt	ne
  4011d0:	ea63 0305 	ornne	r3, r3, r5
  4011d4:	4662      	movne	r2, ip
  4011d6:	f04f 0400 	mov.w	r4, #0
  4011da:	e7a9      	b.n	401130 <strlen+0x30>

004011dc <__sprint_r.part.0>:
  4011dc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4011e0:	6e4b      	ldr	r3, [r1, #100]	; 0x64
  4011e2:	049c      	lsls	r4, r3, #18
  4011e4:	4693      	mov	fp, r2
  4011e6:	d52f      	bpl.n	401248 <__sprint_r.part.0+0x6c>
  4011e8:	6893      	ldr	r3, [r2, #8]
  4011ea:	6812      	ldr	r2, [r2, #0]
  4011ec:	b353      	cbz	r3, 401244 <__sprint_r.part.0+0x68>
  4011ee:	460e      	mov	r6, r1
  4011f0:	4607      	mov	r7, r0
  4011f2:	f102 0908 	add.w	r9, r2, #8
  4011f6:	e919 0420 	ldmdb	r9, {r5, sl}
  4011fa:	ea5f 089a 	movs.w	r8, sl, lsr #2
  4011fe:	d017      	beq.n	401230 <__sprint_r.part.0+0x54>
  401200:	3d04      	subs	r5, #4
  401202:	2400      	movs	r4, #0
  401204:	e001      	b.n	40120a <__sprint_r.part.0+0x2e>
  401206:	45a0      	cmp	r8, r4
  401208:	d010      	beq.n	40122c <__sprint_r.part.0+0x50>
  40120a:	4632      	mov	r2, r6
  40120c:	f855 1f04 	ldr.w	r1, [r5, #4]!
  401210:	4638      	mov	r0, r7
  401212:	f001 f8bb 	bl	40238c <_fputwc_r>
  401216:	1c43      	adds	r3, r0, #1
  401218:	f104 0401 	add.w	r4, r4, #1
  40121c:	d1f3      	bne.n	401206 <__sprint_r.part.0+0x2a>
  40121e:	2300      	movs	r3, #0
  401220:	f8cb 3008 	str.w	r3, [fp, #8]
  401224:	f8cb 3004 	str.w	r3, [fp, #4]
  401228:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40122c:	f8db 3008 	ldr.w	r3, [fp, #8]
  401230:	f02a 0a03 	bic.w	sl, sl, #3
  401234:	eba3 030a 	sub.w	r3, r3, sl
  401238:	f8cb 3008 	str.w	r3, [fp, #8]
  40123c:	f109 0908 	add.w	r9, r9, #8
  401240:	2b00      	cmp	r3, #0
  401242:	d1d8      	bne.n	4011f6 <__sprint_r.part.0+0x1a>
  401244:	2000      	movs	r0, #0
  401246:	e7ea      	b.n	40121e <__sprint_r.part.0+0x42>
  401248:	f001 fa0a 	bl	402660 <__sfvwrite_r>
  40124c:	2300      	movs	r3, #0
  40124e:	f8cb 3008 	str.w	r3, [fp, #8]
  401252:	f8cb 3004 	str.w	r3, [fp, #4]
  401256:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40125a:	bf00      	nop

0040125c <_vfiprintf_r>:
  40125c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401260:	b0ad      	sub	sp, #180	; 0xb4
  401262:	461d      	mov	r5, r3
  401264:	468b      	mov	fp, r1
  401266:	4690      	mov	r8, r2
  401268:	9307      	str	r3, [sp, #28]
  40126a:	9006      	str	r0, [sp, #24]
  40126c:	b118      	cbz	r0, 401276 <_vfiprintf_r+0x1a>
  40126e:	6b83      	ldr	r3, [r0, #56]	; 0x38
  401270:	2b00      	cmp	r3, #0
  401272:	f000 80f3 	beq.w	40145c <_vfiprintf_r+0x200>
  401276:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  40127a:	f9bb 000c 	ldrsh.w	r0, [fp, #12]
  40127e:	07df      	lsls	r7, r3, #31
  401280:	b281      	uxth	r1, r0
  401282:	d402      	bmi.n	40128a <_vfiprintf_r+0x2e>
  401284:	058e      	lsls	r6, r1, #22
  401286:	f140 80fc 	bpl.w	401482 <_vfiprintf_r+0x226>
  40128a:	048c      	lsls	r4, r1, #18
  40128c:	d40a      	bmi.n	4012a4 <_vfiprintf_r+0x48>
  40128e:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  401292:	f440 5100 	orr.w	r1, r0, #8192	; 0x2000
  401296:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
  40129a:	f8ab 100c 	strh.w	r1, [fp, #12]
  40129e:	f8cb 3064 	str.w	r3, [fp, #100]	; 0x64
  4012a2:	b289      	uxth	r1, r1
  4012a4:	0708      	lsls	r0, r1, #28
  4012a6:	f140 80b3 	bpl.w	401410 <_vfiprintf_r+0x1b4>
  4012aa:	f8db 3010 	ldr.w	r3, [fp, #16]
  4012ae:	2b00      	cmp	r3, #0
  4012b0:	f000 80ae 	beq.w	401410 <_vfiprintf_r+0x1b4>
  4012b4:	f001 031a 	and.w	r3, r1, #26
  4012b8:	2b0a      	cmp	r3, #10
  4012ba:	f000 80b5 	beq.w	401428 <_vfiprintf_r+0x1cc>
  4012be:	2300      	movs	r3, #0
  4012c0:	f10d 0970 	add.w	r9, sp, #112	; 0x70
  4012c4:	930b      	str	r3, [sp, #44]	; 0x2c
  4012c6:	9311      	str	r3, [sp, #68]	; 0x44
  4012c8:	9310      	str	r3, [sp, #64]	; 0x40
  4012ca:	9303      	str	r3, [sp, #12]
  4012cc:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
  4012d0:	46ca      	mov	sl, r9
  4012d2:	f8cd b010 	str.w	fp, [sp, #16]
  4012d6:	f898 3000 	ldrb.w	r3, [r8]
  4012da:	4644      	mov	r4, r8
  4012dc:	b1fb      	cbz	r3, 40131e <_vfiprintf_r+0xc2>
  4012de:	2b25      	cmp	r3, #37	; 0x25
  4012e0:	d102      	bne.n	4012e8 <_vfiprintf_r+0x8c>
  4012e2:	e01c      	b.n	40131e <_vfiprintf_r+0xc2>
  4012e4:	2b25      	cmp	r3, #37	; 0x25
  4012e6:	d003      	beq.n	4012f0 <_vfiprintf_r+0x94>
  4012e8:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  4012ec:	2b00      	cmp	r3, #0
  4012ee:	d1f9      	bne.n	4012e4 <_vfiprintf_r+0x88>
  4012f0:	eba4 0508 	sub.w	r5, r4, r8
  4012f4:	b19d      	cbz	r5, 40131e <_vfiprintf_r+0xc2>
  4012f6:	9b10      	ldr	r3, [sp, #64]	; 0x40
  4012f8:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4012fa:	f8ca 8000 	str.w	r8, [sl]
  4012fe:	3301      	adds	r3, #1
  401300:	442a      	add	r2, r5
  401302:	2b07      	cmp	r3, #7
  401304:	f8ca 5004 	str.w	r5, [sl, #4]
  401308:	9211      	str	r2, [sp, #68]	; 0x44
  40130a:	9310      	str	r3, [sp, #64]	; 0x40
  40130c:	dd7a      	ble.n	401404 <_vfiprintf_r+0x1a8>
  40130e:	2a00      	cmp	r2, #0
  401310:	f040 84b0 	bne.w	401c74 <_vfiprintf_r+0xa18>
  401314:	9b03      	ldr	r3, [sp, #12]
  401316:	9210      	str	r2, [sp, #64]	; 0x40
  401318:	442b      	add	r3, r5
  40131a:	46ca      	mov	sl, r9
  40131c:	9303      	str	r3, [sp, #12]
  40131e:	7823      	ldrb	r3, [r4, #0]
  401320:	2b00      	cmp	r3, #0
  401322:	f000 83e0 	beq.w	401ae6 <_vfiprintf_r+0x88a>
  401326:	2000      	movs	r0, #0
  401328:	f04f 0300 	mov.w	r3, #0
  40132c:	f88d 3037 	strb.w	r3, [sp, #55]	; 0x37
  401330:	f104 0801 	add.w	r8, r4, #1
  401334:	7862      	ldrb	r2, [r4, #1]
  401336:	4605      	mov	r5, r0
  401338:	4606      	mov	r6, r0
  40133a:	4603      	mov	r3, r0
  40133c:	f04f 34ff 	mov.w	r4, #4294967295
  401340:	f108 0801 	add.w	r8, r8, #1
  401344:	f1a2 0120 	sub.w	r1, r2, #32
  401348:	2958      	cmp	r1, #88	; 0x58
  40134a:	f200 82de 	bhi.w	40190a <_vfiprintf_r+0x6ae>
  40134e:	e8df f011 	tbh	[pc, r1, lsl #1]
  401352:	0221      	.short	0x0221
  401354:	02dc02dc 	.word	0x02dc02dc
  401358:	02dc0229 	.word	0x02dc0229
  40135c:	02dc02dc 	.word	0x02dc02dc
  401360:	02dc02dc 	.word	0x02dc02dc
  401364:	028902dc 	.word	0x028902dc
  401368:	02dc0295 	.word	0x02dc0295
  40136c:	02bd00a2 	.word	0x02bd00a2
  401370:	019f02dc 	.word	0x019f02dc
  401374:	01a401a4 	.word	0x01a401a4
  401378:	01a401a4 	.word	0x01a401a4
  40137c:	01a401a4 	.word	0x01a401a4
  401380:	01a401a4 	.word	0x01a401a4
  401384:	02dc01a4 	.word	0x02dc01a4
  401388:	02dc02dc 	.word	0x02dc02dc
  40138c:	02dc02dc 	.word	0x02dc02dc
  401390:	02dc02dc 	.word	0x02dc02dc
  401394:	02dc02dc 	.word	0x02dc02dc
  401398:	01b202dc 	.word	0x01b202dc
  40139c:	02dc02dc 	.word	0x02dc02dc
  4013a0:	02dc02dc 	.word	0x02dc02dc
  4013a4:	02dc02dc 	.word	0x02dc02dc
  4013a8:	02dc02dc 	.word	0x02dc02dc
  4013ac:	02dc02dc 	.word	0x02dc02dc
  4013b0:	02dc0197 	.word	0x02dc0197
  4013b4:	02dc02dc 	.word	0x02dc02dc
  4013b8:	02dc02dc 	.word	0x02dc02dc
  4013bc:	02dc019b 	.word	0x02dc019b
  4013c0:	025302dc 	.word	0x025302dc
  4013c4:	02dc02dc 	.word	0x02dc02dc
  4013c8:	02dc02dc 	.word	0x02dc02dc
  4013cc:	02dc02dc 	.word	0x02dc02dc
  4013d0:	02dc02dc 	.word	0x02dc02dc
  4013d4:	02dc02dc 	.word	0x02dc02dc
  4013d8:	021b025a 	.word	0x021b025a
  4013dc:	02dc02dc 	.word	0x02dc02dc
  4013e0:	026e02dc 	.word	0x026e02dc
  4013e4:	02dc021b 	.word	0x02dc021b
  4013e8:	027302dc 	.word	0x027302dc
  4013ec:	01f502dc 	.word	0x01f502dc
  4013f0:	02090182 	.word	0x02090182
  4013f4:	02dc02d7 	.word	0x02dc02d7
  4013f8:	02dc029a 	.word	0x02dc029a
  4013fc:	02dc00a7 	.word	0x02dc00a7
  401400:	022e02dc 	.word	0x022e02dc
  401404:	f10a 0a08 	add.w	sl, sl, #8
  401408:	9b03      	ldr	r3, [sp, #12]
  40140a:	442b      	add	r3, r5
  40140c:	9303      	str	r3, [sp, #12]
  40140e:	e786      	b.n	40131e <_vfiprintf_r+0xc2>
  401410:	4659      	mov	r1, fp
  401412:	9806      	ldr	r0, [sp, #24]
  401414:	f000 fdac 	bl	401f70 <__swsetup_r>
  401418:	bb18      	cbnz	r0, 401462 <_vfiprintf_r+0x206>
  40141a:	f8bb 100c 	ldrh.w	r1, [fp, #12]
  40141e:	f001 031a 	and.w	r3, r1, #26
  401422:	2b0a      	cmp	r3, #10
  401424:	f47f af4b 	bne.w	4012be <_vfiprintf_r+0x62>
  401428:	f9bb 300e 	ldrsh.w	r3, [fp, #14]
  40142c:	2b00      	cmp	r3, #0
  40142e:	f6ff af46 	blt.w	4012be <_vfiprintf_r+0x62>
  401432:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  401436:	07db      	lsls	r3, r3, #31
  401438:	d405      	bmi.n	401446 <_vfiprintf_r+0x1ea>
  40143a:	058f      	lsls	r7, r1, #22
  40143c:	d403      	bmi.n	401446 <_vfiprintf_r+0x1ea>
  40143e:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  401442:	f001 fac3 	bl	4029cc <__retarget_lock_release_recursive>
  401446:	462b      	mov	r3, r5
  401448:	4642      	mov	r2, r8
  40144a:	4659      	mov	r1, fp
  40144c:	9806      	ldr	r0, [sp, #24]
  40144e:	f000 fd4d 	bl	401eec <__sbprintf>
  401452:	9003      	str	r0, [sp, #12]
  401454:	9803      	ldr	r0, [sp, #12]
  401456:	b02d      	add	sp, #180	; 0xb4
  401458:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40145c:	f000 fef4 	bl	402248 <__sinit>
  401460:	e709      	b.n	401276 <_vfiprintf_r+0x1a>
  401462:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  401466:	07d9      	lsls	r1, r3, #31
  401468:	d404      	bmi.n	401474 <_vfiprintf_r+0x218>
  40146a:	f8bb 300c 	ldrh.w	r3, [fp, #12]
  40146e:	059a      	lsls	r2, r3, #22
  401470:	f140 84aa 	bpl.w	401dc8 <_vfiprintf_r+0xb6c>
  401474:	f04f 33ff 	mov.w	r3, #4294967295
  401478:	9303      	str	r3, [sp, #12]
  40147a:	9803      	ldr	r0, [sp, #12]
  40147c:	b02d      	add	sp, #180	; 0xb4
  40147e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401482:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  401486:	f001 fa9f 	bl	4029c8 <__retarget_lock_acquire_recursive>
  40148a:	f9bb 000c 	ldrsh.w	r0, [fp, #12]
  40148e:	b281      	uxth	r1, r0
  401490:	e6fb      	b.n	40128a <_vfiprintf_r+0x2e>
  401492:	4276      	negs	r6, r6
  401494:	9207      	str	r2, [sp, #28]
  401496:	f043 0304 	orr.w	r3, r3, #4
  40149a:	f898 2000 	ldrb.w	r2, [r8]
  40149e:	e74f      	b.n	401340 <_vfiprintf_r+0xe4>
  4014a0:	9608      	str	r6, [sp, #32]
  4014a2:	069e      	lsls	r6, r3, #26
  4014a4:	f100 8450 	bmi.w	401d48 <_vfiprintf_r+0xaec>
  4014a8:	9907      	ldr	r1, [sp, #28]
  4014aa:	06dd      	lsls	r5, r3, #27
  4014ac:	460a      	mov	r2, r1
  4014ae:	f100 83ef 	bmi.w	401c90 <_vfiprintf_r+0xa34>
  4014b2:	0658      	lsls	r0, r3, #25
  4014b4:	f140 83ec 	bpl.w	401c90 <_vfiprintf_r+0xa34>
  4014b8:	880e      	ldrh	r6, [r1, #0]
  4014ba:	3104      	adds	r1, #4
  4014bc:	2700      	movs	r7, #0
  4014be:	2201      	movs	r2, #1
  4014c0:	9107      	str	r1, [sp, #28]
  4014c2:	f04f 0100 	mov.w	r1, #0
  4014c6:	f88d 1037 	strb.w	r1, [sp, #55]	; 0x37
  4014ca:	2500      	movs	r5, #0
  4014cc:	1c61      	adds	r1, r4, #1
  4014ce:	f000 8116 	beq.w	4016fe <_vfiprintf_r+0x4a2>
  4014d2:	f023 0180 	bic.w	r1, r3, #128	; 0x80
  4014d6:	9102      	str	r1, [sp, #8]
  4014d8:	ea56 0107 	orrs.w	r1, r6, r7
  4014dc:	f040 8114 	bne.w	401708 <_vfiprintf_r+0x4ac>
  4014e0:	2c00      	cmp	r4, #0
  4014e2:	f040 835c 	bne.w	401b9e <_vfiprintf_r+0x942>
  4014e6:	2a00      	cmp	r2, #0
  4014e8:	f040 83b7 	bne.w	401c5a <_vfiprintf_r+0x9fe>
  4014ec:	f013 0301 	ands.w	r3, r3, #1
  4014f0:	9305      	str	r3, [sp, #20]
  4014f2:	f000 8457 	beq.w	401da4 <_vfiprintf_r+0xb48>
  4014f6:	f10d 0bb0 	add.w	fp, sp, #176	; 0xb0
  4014fa:	2330      	movs	r3, #48	; 0x30
  4014fc:	f80b 3d41 	strb.w	r3, [fp, #-65]!
  401500:	9b05      	ldr	r3, [sp, #20]
  401502:	42a3      	cmp	r3, r4
  401504:	bfb8      	it	lt
  401506:	4623      	movlt	r3, r4
  401508:	9301      	str	r3, [sp, #4]
  40150a:	b10d      	cbz	r5, 401510 <_vfiprintf_r+0x2b4>
  40150c:	3301      	adds	r3, #1
  40150e:	9301      	str	r3, [sp, #4]
  401510:	9b02      	ldr	r3, [sp, #8]
  401512:	f013 0302 	ands.w	r3, r3, #2
  401516:	9309      	str	r3, [sp, #36]	; 0x24
  401518:	d002      	beq.n	401520 <_vfiprintf_r+0x2c4>
  40151a:	9b01      	ldr	r3, [sp, #4]
  40151c:	3302      	adds	r3, #2
  40151e:	9301      	str	r3, [sp, #4]
  401520:	9b02      	ldr	r3, [sp, #8]
  401522:	f013 0384 	ands.w	r3, r3, #132	; 0x84
  401526:	930a      	str	r3, [sp, #40]	; 0x28
  401528:	f040 8217 	bne.w	40195a <_vfiprintf_r+0x6fe>
  40152c:	9b08      	ldr	r3, [sp, #32]
  40152e:	9a01      	ldr	r2, [sp, #4]
  401530:	1a9d      	subs	r5, r3, r2
  401532:	2d00      	cmp	r5, #0
  401534:	f340 8211 	ble.w	40195a <_vfiprintf_r+0x6fe>
  401538:	2d10      	cmp	r5, #16
  40153a:	f340 8490 	ble.w	401e5e <_vfiprintf_r+0xc02>
  40153e:	9b10      	ldr	r3, [sp, #64]	; 0x40
  401540:	9a11      	ldr	r2, [sp, #68]	; 0x44
  401542:	4ec4      	ldr	r6, [pc, #784]	; (401854 <_vfiprintf_r+0x5f8>)
  401544:	46d6      	mov	lr, sl
  401546:	2710      	movs	r7, #16
  401548:	46a2      	mov	sl, r4
  40154a:	4619      	mov	r1, r3
  40154c:	9c06      	ldr	r4, [sp, #24]
  40154e:	e007      	b.n	401560 <_vfiprintf_r+0x304>
  401550:	f101 0c02 	add.w	ip, r1, #2
  401554:	f10e 0e08 	add.w	lr, lr, #8
  401558:	4601      	mov	r1, r0
  40155a:	3d10      	subs	r5, #16
  40155c:	2d10      	cmp	r5, #16
  40155e:	dd11      	ble.n	401584 <_vfiprintf_r+0x328>
  401560:	1c48      	adds	r0, r1, #1
  401562:	3210      	adds	r2, #16
  401564:	2807      	cmp	r0, #7
  401566:	9211      	str	r2, [sp, #68]	; 0x44
  401568:	e88e 00c0 	stmia.w	lr, {r6, r7}
  40156c:	9010      	str	r0, [sp, #64]	; 0x40
  40156e:	ddef      	ble.n	401550 <_vfiprintf_r+0x2f4>
  401570:	2a00      	cmp	r2, #0
  401572:	f040 81e4 	bne.w	40193e <_vfiprintf_r+0x6e2>
  401576:	3d10      	subs	r5, #16
  401578:	2d10      	cmp	r5, #16
  40157a:	4611      	mov	r1, r2
  40157c:	f04f 0c01 	mov.w	ip, #1
  401580:	46ce      	mov	lr, r9
  401582:	dced      	bgt.n	401560 <_vfiprintf_r+0x304>
  401584:	4654      	mov	r4, sl
  401586:	4661      	mov	r1, ip
  401588:	46f2      	mov	sl, lr
  40158a:	442a      	add	r2, r5
  40158c:	2907      	cmp	r1, #7
  40158e:	9211      	str	r2, [sp, #68]	; 0x44
  401590:	f8ca 6000 	str.w	r6, [sl]
  401594:	f8ca 5004 	str.w	r5, [sl, #4]
  401598:	9110      	str	r1, [sp, #64]	; 0x40
  40159a:	f300 82ec 	bgt.w	401b76 <_vfiprintf_r+0x91a>
  40159e:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  4015a2:	f10a 0a08 	add.w	sl, sl, #8
  4015a6:	1c48      	adds	r0, r1, #1
  4015a8:	2d00      	cmp	r5, #0
  4015aa:	f040 81de 	bne.w	40196a <_vfiprintf_r+0x70e>
  4015ae:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4015b0:	2b00      	cmp	r3, #0
  4015b2:	f000 81f8 	beq.w	4019a6 <_vfiprintf_r+0x74a>
  4015b6:	3202      	adds	r2, #2
  4015b8:	a90e      	add	r1, sp, #56	; 0x38
  4015ba:	2302      	movs	r3, #2
  4015bc:	2807      	cmp	r0, #7
  4015be:	9211      	str	r2, [sp, #68]	; 0x44
  4015c0:	9010      	str	r0, [sp, #64]	; 0x40
  4015c2:	e88a 000a 	stmia.w	sl, {r1, r3}
  4015c6:	f340 81ea 	ble.w	40199e <_vfiprintf_r+0x742>
  4015ca:	2a00      	cmp	r2, #0
  4015cc:	f040 838c 	bne.w	401ce8 <_vfiprintf_r+0xa8c>
  4015d0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4015d2:	2b80      	cmp	r3, #128	; 0x80
  4015d4:	f04f 0001 	mov.w	r0, #1
  4015d8:	4611      	mov	r1, r2
  4015da:	46ca      	mov	sl, r9
  4015dc:	f040 81e7 	bne.w	4019ae <_vfiprintf_r+0x752>
  4015e0:	9b08      	ldr	r3, [sp, #32]
  4015e2:	9d01      	ldr	r5, [sp, #4]
  4015e4:	1b5e      	subs	r6, r3, r5
  4015e6:	2e00      	cmp	r6, #0
  4015e8:	f340 81e1 	ble.w	4019ae <_vfiprintf_r+0x752>
  4015ec:	2e10      	cmp	r6, #16
  4015ee:	4d9a      	ldr	r5, [pc, #616]	; (401858 <_vfiprintf_r+0x5fc>)
  4015f0:	f340 8450 	ble.w	401e94 <_vfiprintf_r+0xc38>
  4015f4:	46d4      	mov	ip, sl
  4015f6:	2710      	movs	r7, #16
  4015f8:	46a2      	mov	sl, r4
  4015fa:	9c06      	ldr	r4, [sp, #24]
  4015fc:	e007      	b.n	40160e <_vfiprintf_r+0x3b2>
  4015fe:	f101 0e02 	add.w	lr, r1, #2
  401602:	f10c 0c08 	add.w	ip, ip, #8
  401606:	4601      	mov	r1, r0
  401608:	3e10      	subs	r6, #16
  40160a:	2e10      	cmp	r6, #16
  40160c:	dd11      	ble.n	401632 <_vfiprintf_r+0x3d6>
  40160e:	1c48      	adds	r0, r1, #1
  401610:	3210      	adds	r2, #16
  401612:	2807      	cmp	r0, #7
  401614:	9211      	str	r2, [sp, #68]	; 0x44
  401616:	e88c 00a0 	stmia.w	ip, {r5, r7}
  40161a:	9010      	str	r0, [sp, #64]	; 0x40
  40161c:	ddef      	ble.n	4015fe <_vfiprintf_r+0x3a2>
  40161e:	2a00      	cmp	r2, #0
  401620:	f040 829d 	bne.w	401b5e <_vfiprintf_r+0x902>
  401624:	3e10      	subs	r6, #16
  401626:	2e10      	cmp	r6, #16
  401628:	f04f 0e01 	mov.w	lr, #1
  40162c:	4611      	mov	r1, r2
  40162e:	46cc      	mov	ip, r9
  401630:	dced      	bgt.n	40160e <_vfiprintf_r+0x3b2>
  401632:	4654      	mov	r4, sl
  401634:	46e2      	mov	sl, ip
  401636:	4432      	add	r2, r6
  401638:	f1be 0f07 	cmp.w	lr, #7
  40163c:	9211      	str	r2, [sp, #68]	; 0x44
  40163e:	e88a 0060 	stmia.w	sl, {r5, r6}
  401642:	f8cd e040 	str.w	lr, [sp, #64]	; 0x40
  401646:	f300 8369 	bgt.w	401d1c <_vfiprintf_r+0xac0>
  40164a:	f10a 0a08 	add.w	sl, sl, #8
  40164e:	f10e 0001 	add.w	r0, lr, #1
  401652:	4671      	mov	r1, lr
  401654:	e1ab      	b.n	4019ae <_vfiprintf_r+0x752>
  401656:	9608      	str	r6, [sp, #32]
  401658:	f013 0220 	ands.w	r2, r3, #32
  40165c:	f040 838c 	bne.w	401d78 <_vfiprintf_r+0xb1c>
  401660:	f013 0110 	ands.w	r1, r3, #16
  401664:	f040 831a 	bne.w	401c9c <_vfiprintf_r+0xa40>
  401668:	f013 0240 	ands.w	r2, r3, #64	; 0x40
  40166c:	f000 8316 	beq.w	401c9c <_vfiprintf_r+0xa40>
  401670:	9807      	ldr	r0, [sp, #28]
  401672:	460a      	mov	r2, r1
  401674:	4601      	mov	r1, r0
  401676:	3104      	adds	r1, #4
  401678:	8806      	ldrh	r6, [r0, #0]
  40167a:	9107      	str	r1, [sp, #28]
  40167c:	2700      	movs	r7, #0
  40167e:	e720      	b.n	4014c2 <_vfiprintf_r+0x266>
  401680:	9608      	str	r6, [sp, #32]
  401682:	f043 0310 	orr.w	r3, r3, #16
  401686:	e7e7      	b.n	401658 <_vfiprintf_r+0x3fc>
  401688:	9608      	str	r6, [sp, #32]
  40168a:	f043 0310 	orr.w	r3, r3, #16
  40168e:	e708      	b.n	4014a2 <_vfiprintf_r+0x246>
  401690:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  401694:	f898 2000 	ldrb.w	r2, [r8]
  401698:	e652      	b.n	401340 <_vfiprintf_r+0xe4>
  40169a:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  40169e:	2600      	movs	r6, #0
  4016a0:	f818 2b01 	ldrb.w	r2, [r8], #1
  4016a4:	eb06 0686 	add.w	r6, r6, r6, lsl #2
  4016a8:	eb01 0646 	add.w	r6, r1, r6, lsl #1
  4016ac:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  4016b0:	2909      	cmp	r1, #9
  4016b2:	d9f5      	bls.n	4016a0 <_vfiprintf_r+0x444>
  4016b4:	e646      	b.n	401344 <_vfiprintf_r+0xe8>
  4016b6:	9608      	str	r6, [sp, #32]
  4016b8:	2800      	cmp	r0, #0
  4016ba:	f040 8408 	bne.w	401ece <_vfiprintf_r+0xc72>
  4016be:	f043 0310 	orr.w	r3, r3, #16
  4016c2:	069e      	lsls	r6, r3, #26
  4016c4:	f100 834c 	bmi.w	401d60 <_vfiprintf_r+0xb04>
  4016c8:	06dd      	lsls	r5, r3, #27
  4016ca:	f100 82f3 	bmi.w	401cb4 <_vfiprintf_r+0xa58>
  4016ce:	0658      	lsls	r0, r3, #25
  4016d0:	f140 82f0 	bpl.w	401cb4 <_vfiprintf_r+0xa58>
  4016d4:	9d07      	ldr	r5, [sp, #28]
  4016d6:	f9b5 6000 	ldrsh.w	r6, [r5]
  4016da:	462a      	mov	r2, r5
  4016dc:	17f7      	asrs	r7, r6, #31
  4016de:	3204      	adds	r2, #4
  4016e0:	4630      	mov	r0, r6
  4016e2:	4639      	mov	r1, r7
  4016e4:	9207      	str	r2, [sp, #28]
  4016e6:	2800      	cmp	r0, #0
  4016e8:	f171 0200 	sbcs.w	r2, r1, #0
  4016ec:	f2c0 835d 	blt.w	401daa <_vfiprintf_r+0xb4e>
  4016f0:	1c61      	adds	r1, r4, #1
  4016f2:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  4016f6:	f04f 0201 	mov.w	r2, #1
  4016fa:	f47f aeea 	bne.w	4014d2 <_vfiprintf_r+0x276>
  4016fe:	ea56 0107 	orrs.w	r1, r6, r7
  401702:	f000 824d 	beq.w	401ba0 <_vfiprintf_r+0x944>
  401706:	9302      	str	r3, [sp, #8]
  401708:	2a01      	cmp	r2, #1
  40170a:	f000 828c 	beq.w	401c26 <_vfiprintf_r+0x9ca>
  40170e:	2a02      	cmp	r2, #2
  401710:	f040 825c 	bne.w	401bcc <_vfiprintf_r+0x970>
  401714:	980b      	ldr	r0, [sp, #44]	; 0x2c
  401716:	46cb      	mov	fp, r9
  401718:	0933      	lsrs	r3, r6, #4
  40171a:	f006 010f 	and.w	r1, r6, #15
  40171e:	ea43 7307 	orr.w	r3, r3, r7, lsl #28
  401722:	093a      	lsrs	r2, r7, #4
  401724:	461e      	mov	r6, r3
  401726:	4617      	mov	r7, r2
  401728:	5c43      	ldrb	r3, [r0, r1]
  40172a:	f80b 3d01 	strb.w	r3, [fp, #-1]!
  40172e:	ea56 0307 	orrs.w	r3, r6, r7
  401732:	d1f1      	bne.n	401718 <_vfiprintf_r+0x4bc>
  401734:	eba9 030b 	sub.w	r3, r9, fp
  401738:	9305      	str	r3, [sp, #20]
  40173a:	e6e1      	b.n	401500 <_vfiprintf_r+0x2a4>
  40173c:	2800      	cmp	r0, #0
  40173e:	f040 83c0 	bne.w	401ec2 <_vfiprintf_r+0xc66>
  401742:	0699      	lsls	r1, r3, #26
  401744:	f100 8367 	bmi.w	401e16 <_vfiprintf_r+0xbba>
  401748:	06da      	lsls	r2, r3, #27
  40174a:	f100 80f1 	bmi.w	401930 <_vfiprintf_r+0x6d4>
  40174e:	065b      	lsls	r3, r3, #25
  401750:	f140 80ee 	bpl.w	401930 <_vfiprintf_r+0x6d4>
  401754:	9a07      	ldr	r2, [sp, #28]
  401756:	6813      	ldr	r3, [r2, #0]
  401758:	3204      	adds	r2, #4
  40175a:	9207      	str	r2, [sp, #28]
  40175c:	f8bd 200c 	ldrh.w	r2, [sp, #12]
  401760:	801a      	strh	r2, [r3, #0]
  401762:	e5b8      	b.n	4012d6 <_vfiprintf_r+0x7a>
  401764:	9807      	ldr	r0, [sp, #28]
  401766:	4a3d      	ldr	r2, [pc, #244]	; (40185c <_vfiprintf_r+0x600>)
  401768:	9608      	str	r6, [sp, #32]
  40176a:	920b      	str	r2, [sp, #44]	; 0x2c
  40176c:	6806      	ldr	r6, [r0, #0]
  40176e:	2278      	movs	r2, #120	; 0x78
  401770:	2130      	movs	r1, #48	; 0x30
  401772:	3004      	adds	r0, #4
  401774:	f88d 2039 	strb.w	r2, [sp, #57]	; 0x39
  401778:	f043 0302 	orr.w	r3, r3, #2
  40177c:	9007      	str	r0, [sp, #28]
  40177e:	2700      	movs	r7, #0
  401780:	f88d 1038 	strb.w	r1, [sp, #56]	; 0x38
  401784:	2202      	movs	r2, #2
  401786:	e69c      	b.n	4014c2 <_vfiprintf_r+0x266>
  401788:	9608      	str	r6, [sp, #32]
  40178a:	2800      	cmp	r0, #0
  40178c:	d099      	beq.n	4016c2 <_vfiprintf_r+0x466>
  40178e:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  401792:	e796      	b.n	4016c2 <_vfiprintf_r+0x466>
  401794:	f898 2000 	ldrb.w	r2, [r8]
  401798:	2d00      	cmp	r5, #0
  40179a:	f47f add1 	bne.w	401340 <_vfiprintf_r+0xe4>
  40179e:	2001      	movs	r0, #1
  4017a0:	2520      	movs	r5, #32
  4017a2:	e5cd      	b.n	401340 <_vfiprintf_r+0xe4>
  4017a4:	f043 0301 	orr.w	r3, r3, #1
  4017a8:	f898 2000 	ldrb.w	r2, [r8]
  4017ac:	e5c8      	b.n	401340 <_vfiprintf_r+0xe4>
  4017ae:	9608      	str	r6, [sp, #32]
  4017b0:	2800      	cmp	r0, #0
  4017b2:	f040 8393 	bne.w	401edc <_vfiprintf_r+0xc80>
  4017b6:	4929      	ldr	r1, [pc, #164]	; (40185c <_vfiprintf_r+0x600>)
  4017b8:	910b      	str	r1, [sp, #44]	; 0x2c
  4017ba:	069f      	lsls	r7, r3, #26
  4017bc:	f100 82e8 	bmi.w	401d90 <_vfiprintf_r+0xb34>
  4017c0:	9807      	ldr	r0, [sp, #28]
  4017c2:	06de      	lsls	r6, r3, #27
  4017c4:	4601      	mov	r1, r0
  4017c6:	f100 8270 	bmi.w	401caa <_vfiprintf_r+0xa4e>
  4017ca:	065d      	lsls	r5, r3, #25
  4017cc:	f140 826d 	bpl.w	401caa <_vfiprintf_r+0xa4e>
  4017d0:	3104      	adds	r1, #4
  4017d2:	8806      	ldrh	r6, [r0, #0]
  4017d4:	9107      	str	r1, [sp, #28]
  4017d6:	2700      	movs	r7, #0
  4017d8:	07d8      	lsls	r0, r3, #31
  4017da:	f140 8222 	bpl.w	401c22 <_vfiprintf_r+0x9c6>
  4017de:	ea56 0107 	orrs.w	r1, r6, r7
  4017e2:	f000 821e 	beq.w	401c22 <_vfiprintf_r+0x9c6>
  4017e6:	2130      	movs	r1, #48	; 0x30
  4017e8:	f88d 2039 	strb.w	r2, [sp, #57]	; 0x39
  4017ec:	f043 0302 	orr.w	r3, r3, #2
  4017f0:	f88d 1038 	strb.w	r1, [sp, #56]	; 0x38
  4017f4:	2202      	movs	r2, #2
  4017f6:	e664      	b.n	4014c2 <_vfiprintf_r+0x266>
  4017f8:	9608      	str	r6, [sp, #32]
  4017fa:	2800      	cmp	r0, #0
  4017fc:	f040 836b 	bne.w	401ed6 <_vfiprintf_r+0xc7a>
  401800:	4917      	ldr	r1, [pc, #92]	; (401860 <_vfiprintf_r+0x604>)
  401802:	910b      	str	r1, [sp, #44]	; 0x2c
  401804:	e7d9      	b.n	4017ba <_vfiprintf_r+0x55e>
  401806:	9907      	ldr	r1, [sp, #28]
  401808:	9608      	str	r6, [sp, #32]
  40180a:	680a      	ldr	r2, [r1, #0]
  40180c:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
  401810:	f04f 0000 	mov.w	r0, #0
  401814:	460a      	mov	r2, r1
  401816:	f88d 0037 	strb.w	r0, [sp, #55]	; 0x37
  40181a:	3204      	adds	r2, #4
  40181c:	2001      	movs	r0, #1
  40181e:	9001      	str	r0, [sp, #4]
  401820:	9207      	str	r2, [sp, #28]
  401822:	9005      	str	r0, [sp, #20]
  401824:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
  401828:	9302      	str	r3, [sp, #8]
  40182a:	2400      	movs	r4, #0
  40182c:	e670      	b.n	401510 <_vfiprintf_r+0x2b4>
  40182e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  401832:	f898 2000 	ldrb.w	r2, [r8]
  401836:	e583      	b.n	401340 <_vfiprintf_r+0xe4>
  401838:	f898 2000 	ldrb.w	r2, [r8]
  40183c:	2a6c      	cmp	r2, #108	; 0x6c
  40183e:	bf03      	ittte	eq
  401840:	f898 2001 	ldrbeq.w	r2, [r8, #1]
  401844:	f043 0320 	orreq.w	r3, r3, #32
  401848:	f108 0801 	addeq.w	r8, r8, #1
  40184c:	f043 0310 	orrne.w	r3, r3, #16
  401850:	e576      	b.n	401340 <_vfiprintf_r+0xe4>
  401852:	bf00      	nop
  401854:	00403e20 	.word	0x00403e20
  401858:	00403e30 	.word	0x00403e30
  40185c:	00403e04 	.word	0x00403e04
  401860:	00403df0 	.word	0x00403df0
  401864:	9907      	ldr	r1, [sp, #28]
  401866:	680e      	ldr	r6, [r1, #0]
  401868:	460a      	mov	r2, r1
  40186a:	2e00      	cmp	r6, #0
  40186c:	f102 0204 	add.w	r2, r2, #4
  401870:	f6ff ae0f 	blt.w	401492 <_vfiprintf_r+0x236>
  401874:	9207      	str	r2, [sp, #28]
  401876:	f898 2000 	ldrb.w	r2, [r8]
  40187a:	e561      	b.n	401340 <_vfiprintf_r+0xe4>
  40187c:	f898 2000 	ldrb.w	r2, [r8]
  401880:	2001      	movs	r0, #1
  401882:	252b      	movs	r5, #43	; 0x2b
  401884:	e55c      	b.n	401340 <_vfiprintf_r+0xe4>
  401886:	9907      	ldr	r1, [sp, #28]
  401888:	9608      	str	r6, [sp, #32]
  40188a:	f8d1 b000 	ldr.w	fp, [r1]
  40188e:	f04f 0200 	mov.w	r2, #0
  401892:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
  401896:	1d0e      	adds	r6, r1, #4
  401898:	f1bb 0f00 	cmp.w	fp, #0
  40189c:	f000 82e5 	beq.w	401e6a <_vfiprintf_r+0xc0e>
  4018a0:	1c67      	adds	r7, r4, #1
  4018a2:	f000 82c4 	beq.w	401e2e <_vfiprintf_r+0xbd2>
  4018a6:	4622      	mov	r2, r4
  4018a8:	2100      	movs	r1, #0
  4018aa:	4658      	mov	r0, fp
  4018ac:	9301      	str	r3, [sp, #4]
  4018ae:	f001 fbd7 	bl	403060 <memchr>
  4018b2:	9b01      	ldr	r3, [sp, #4]
  4018b4:	2800      	cmp	r0, #0
  4018b6:	f000 82e5 	beq.w	401e84 <_vfiprintf_r+0xc28>
  4018ba:	eba0 020b 	sub.w	r2, r0, fp
  4018be:	9205      	str	r2, [sp, #20]
  4018c0:	9607      	str	r6, [sp, #28]
  4018c2:	9302      	str	r3, [sp, #8]
  4018c4:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  4018c8:	2400      	movs	r4, #0
  4018ca:	e619      	b.n	401500 <_vfiprintf_r+0x2a4>
  4018cc:	f898 2000 	ldrb.w	r2, [r8]
  4018d0:	2a2a      	cmp	r2, #42	; 0x2a
  4018d2:	f108 0701 	add.w	r7, r8, #1
  4018d6:	f000 82e9 	beq.w	401eac <_vfiprintf_r+0xc50>
  4018da:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  4018de:	2909      	cmp	r1, #9
  4018e0:	46b8      	mov	r8, r7
  4018e2:	f04f 0400 	mov.w	r4, #0
  4018e6:	f63f ad2d 	bhi.w	401344 <_vfiprintf_r+0xe8>
  4018ea:	f818 2b01 	ldrb.w	r2, [r8], #1
  4018ee:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  4018f2:	eb01 0444 	add.w	r4, r1, r4, lsl #1
  4018f6:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  4018fa:	2909      	cmp	r1, #9
  4018fc:	d9f5      	bls.n	4018ea <_vfiprintf_r+0x68e>
  4018fe:	e521      	b.n	401344 <_vfiprintf_r+0xe8>
  401900:	f043 0320 	orr.w	r3, r3, #32
  401904:	f898 2000 	ldrb.w	r2, [r8]
  401908:	e51a      	b.n	401340 <_vfiprintf_r+0xe4>
  40190a:	9608      	str	r6, [sp, #32]
  40190c:	2800      	cmp	r0, #0
  40190e:	f040 82db 	bne.w	401ec8 <_vfiprintf_r+0xc6c>
  401912:	2a00      	cmp	r2, #0
  401914:	f000 80e7 	beq.w	401ae6 <_vfiprintf_r+0x88a>
  401918:	2101      	movs	r1, #1
  40191a:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
  40191e:	f04f 0200 	mov.w	r2, #0
  401922:	9101      	str	r1, [sp, #4]
  401924:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
  401928:	9105      	str	r1, [sp, #20]
  40192a:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
  40192e:	e77b      	b.n	401828 <_vfiprintf_r+0x5cc>
  401930:	9a07      	ldr	r2, [sp, #28]
  401932:	6813      	ldr	r3, [r2, #0]
  401934:	3204      	adds	r2, #4
  401936:	9207      	str	r2, [sp, #28]
  401938:	9a03      	ldr	r2, [sp, #12]
  40193a:	601a      	str	r2, [r3, #0]
  40193c:	e4cb      	b.n	4012d6 <_vfiprintf_r+0x7a>
  40193e:	aa0f      	add	r2, sp, #60	; 0x3c
  401940:	9904      	ldr	r1, [sp, #16]
  401942:	4620      	mov	r0, r4
  401944:	f7ff fc4a 	bl	4011dc <__sprint_r.part.0>
  401948:	2800      	cmp	r0, #0
  40194a:	f040 8139 	bne.w	401bc0 <_vfiprintf_r+0x964>
  40194e:	9910      	ldr	r1, [sp, #64]	; 0x40
  401950:	9a11      	ldr	r2, [sp, #68]	; 0x44
  401952:	f101 0c01 	add.w	ip, r1, #1
  401956:	46ce      	mov	lr, r9
  401958:	e5ff      	b.n	40155a <_vfiprintf_r+0x2fe>
  40195a:	9910      	ldr	r1, [sp, #64]	; 0x40
  40195c:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40195e:	1c48      	adds	r0, r1, #1
  401960:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  401964:	2d00      	cmp	r5, #0
  401966:	f43f ae22 	beq.w	4015ae <_vfiprintf_r+0x352>
  40196a:	3201      	adds	r2, #1
  40196c:	f10d 0537 	add.w	r5, sp, #55	; 0x37
  401970:	2101      	movs	r1, #1
  401972:	2807      	cmp	r0, #7
  401974:	9211      	str	r2, [sp, #68]	; 0x44
  401976:	9010      	str	r0, [sp, #64]	; 0x40
  401978:	f8ca 5000 	str.w	r5, [sl]
  40197c:	f8ca 1004 	str.w	r1, [sl, #4]
  401980:	f340 8108 	ble.w	401b94 <_vfiprintf_r+0x938>
  401984:	2a00      	cmp	r2, #0
  401986:	f040 81bc 	bne.w	401d02 <_vfiprintf_r+0xaa6>
  40198a:	9b09      	ldr	r3, [sp, #36]	; 0x24
  40198c:	2b00      	cmp	r3, #0
  40198e:	f43f ae1f 	beq.w	4015d0 <_vfiprintf_r+0x374>
  401992:	ab0e      	add	r3, sp, #56	; 0x38
  401994:	2202      	movs	r2, #2
  401996:	4608      	mov	r0, r1
  401998:	931c      	str	r3, [sp, #112]	; 0x70
  40199a:	921d      	str	r2, [sp, #116]	; 0x74
  40199c:	46ca      	mov	sl, r9
  40199e:	4601      	mov	r1, r0
  4019a0:	f10a 0a08 	add.w	sl, sl, #8
  4019a4:	3001      	adds	r0, #1
  4019a6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4019a8:	2b80      	cmp	r3, #128	; 0x80
  4019aa:	f43f ae19 	beq.w	4015e0 <_vfiprintf_r+0x384>
  4019ae:	9b05      	ldr	r3, [sp, #20]
  4019b0:	1ae4      	subs	r4, r4, r3
  4019b2:	2c00      	cmp	r4, #0
  4019b4:	dd2e      	ble.n	401a14 <_vfiprintf_r+0x7b8>
  4019b6:	2c10      	cmp	r4, #16
  4019b8:	4db3      	ldr	r5, [pc, #716]	; (401c88 <_vfiprintf_r+0xa2c>)
  4019ba:	dd1e      	ble.n	4019fa <_vfiprintf_r+0x79e>
  4019bc:	46d6      	mov	lr, sl
  4019be:	2610      	movs	r6, #16
  4019c0:	9f06      	ldr	r7, [sp, #24]
  4019c2:	f8dd a010 	ldr.w	sl, [sp, #16]
  4019c6:	e006      	b.n	4019d6 <_vfiprintf_r+0x77a>
  4019c8:	1c88      	adds	r0, r1, #2
  4019ca:	f10e 0e08 	add.w	lr, lr, #8
  4019ce:	4619      	mov	r1, r3
  4019d0:	3c10      	subs	r4, #16
  4019d2:	2c10      	cmp	r4, #16
  4019d4:	dd10      	ble.n	4019f8 <_vfiprintf_r+0x79c>
  4019d6:	1c4b      	adds	r3, r1, #1
  4019d8:	3210      	adds	r2, #16
  4019da:	2b07      	cmp	r3, #7
  4019dc:	9211      	str	r2, [sp, #68]	; 0x44
  4019de:	e88e 0060 	stmia.w	lr, {r5, r6}
  4019e2:	9310      	str	r3, [sp, #64]	; 0x40
  4019e4:	ddf0      	ble.n	4019c8 <_vfiprintf_r+0x76c>
  4019e6:	2a00      	cmp	r2, #0
  4019e8:	d165      	bne.n	401ab6 <_vfiprintf_r+0x85a>
  4019ea:	3c10      	subs	r4, #16
  4019ec:	2c10      	cmp	r4, #16
  4019ee:	f04f 0001 	mov.w	r0, #1
  4019f2:	4611      	mov	r1, r2
  4019f4:	46ce      	mov	lr, r9
  4019f6:	dcee      	bgt.n	4019d6 <_vfiprintf_r+0x77a>
  4019f8:	46f2      	mov	sl, lr
  4019fa:	4422      	add	r2, r4
  4019fc:	2807      	cmp	r0, #7
  4019fe:	9211      	str	r2, [sp, #68]	; 0x44
  401a00:	f8ca 5000 	str.w	r5, [sl]
  401a04:	f8ca 4004 	str.w	r4, [sl, #4]
  401a08:	9010      	str	r0, [sp, #64]	; 0x40
  401a0a:	f300 8085 	bgt.w	401b18 <_vfiprintf_r+0x8bc>
  401a0e:	f10a 0a08 	add.w	sl, sl, #8
  401a12:	3001      	adds	r0, #1
  401a14:	9905      	ldr	r1, [sp, #20]
  401a16:	f8ca b000 	str.w	fp, [sl]
  401a1a:	440a      	add	r2, r1
  401a1c:	2807      	cmp	r0, #7
  401a1e:	9211      	str	r2, [sp, #68]	; 0x44
  401a20:	f8ca 1004 	str.w	r1, [sl, #4]
  401a24:	9010      	str	r0, [sp, #64]	; 0x40
  401a26:	f340 8082 	ble.w	401b2e <_vfiprintf_r+0x8d2>
  401a2a:	2a00      	cmp	r2, #0
  401a2c:	f040 8118 	bne.w	401c60 <_vfiprintf_r+0xa04>
  401a30:	9b02      	ldr	r3, [sp, #8]
  401a32:	9210      	str	r2, [sp, #64]	; 0x40
  401a34:	0758      	lsls	r0, r3, #29
  401a36:	d535      	bpl.n	401aa4 <_vfiprintf_r+0x848>
  401a38:	9b08      	ldr	r3, [sp, #32]
  401a3a:	9901      	ldr	r1, [sp, #4]
  401a3c:	1a5c      	subs	r4, r3, r1
  401a3e:	2c00      	cmp	r4, #0
  401a40:	f340 80e7 	ble.w	401c12 <_vfiprintf_r+0x9b6>
  401a44:	46ca      	mov	sl, r9
  401a46:	2c10      	cmp	r4, #16
  401a48:	f340 8218 	ble.w	401e7c <_vfiprintf_r+0xc20>
  401a4c:	9910      	ldr	r1, [sp, #64]	; 0x40
  401a4e:	4e8f      	ldr	r6, [pc, #572]	; (401c8c <_vfiprintf_r+0xa30>)
  401a50:	9f06      	ldr	r7, [sp, #24]
  401a52:	f8dd b010 	ldr.w	fp, [sp, #16]
  401a56:	2510      	movs	r5, #16
  401a58:	e006      	b.n	401a68 <_vfiprintf_r+0x80c>
  401a5a:	1c88      	adds	r0, r1, #2
  401a5c:	f10a 0a08 	add.w	sl, sl, #8
  401a60:	4619      	mov	r1, r3
  401a62:	3c10      	subs	r4, #16
  401a64:	2c10      	cmp	r4, #16
  401a66:	dd11      	ble.n	401a8c <_vfiprintf_r+0x830>
  401a68:	1c4b      	adds	r3, r1, #1
  401a6a:	3210      	adds	r2, #16
  401a6c:	2b07      	cmp	r3, #7
  401a6e:	9211      	str	r2, [sp, #68]	; 0x44
  401a70:	f8ca 6000 	str.w	r6, [sl]
  401a74:	f8ca 5004 	str.w	r5, [sl, #4]
  401a78:	9310      	str	r3, [sp, #64]	; 0x40
  401a7a:	ddee      	ble.n	401a5a <_vfiprintf_r+0x7fe>
  401a7c:	bb42      	cbnz	r2, 401ad0 <_vfiprintf_r+0x874>
  401a7e:	3c10      	subs	r4, #16
  401a80:	2c10      	cmp	r4, #16
  401a82:	f04f 0001 	mov.w	r0, #1
  401a86:	4611      	mov	r1, r2
  401a88:	46ca      	mov	sl, r9
  401a8a:	dced      	bgt.n	401a68 <_vfiprintf_r+0x80c>
  401a8c:	4422      	add	r2, r4
  401a8e:	2807      	cmp	r0, #7
  401a90:	9211      	str	r2, [sp, #68]	; 0x44
  401a92:	f8ca 6000 	str.w	r6, [sl]
  401a96:	f8ca 4004 	str.w	r4, [sl, #4]
  401a9a:	9010      	str	r0, [sp, #64]	; 0x40
  401a9c:	dd51      	ble.n	401b42 <_vfiprintf_r+0x8e6>
  401a9e:	2a00      	cmp	r2, #0
  401aa0:	f040 819b 	bne.w	401dda <_vfiprintf_r+0xb7e>
  401aa4:	9b03      	ldr	r3, [sp, #12]
  401aa6:	9a08      	ldr	r2, [sp, #32]
  401aa8:	9901      	ldr	r1, [sp, #4]
  401aaa:	428a      	cmp	r2, r1
  401aac:	bfac      	ite	ge
  401aae:	189b      	addge	r3, r3, r2
  401ab0:	185b      	addlt	r3, r3, r1
  401ab2:	9303      	str	r3, [sp, #12]
  401ab4:	e04e      	b.n	401b54 <_vfiprintf_r+0x8f8>
  401ab6:	aa0f      	add	r2, sp, #60	; 0x3c
  401ab8:	4651      	mov	r1, sl
  401aba:	4638      	mov	r0, r7
  401abc:	f7ff fb8e 	bl	4011dc <__sprint_r.part.0>
  401ac0:	2800      	cmp	r0, #0
  401ac2:	f040 813f 	bne.w	401d44 <_vfiprintf_r+0xae8>
  401ac6:	9910      	ldr	r1, [sp, #64]	; 0x40
  401ac8:	9a11      	ldr	r2, [sp, #68]	; 0x44
  401aca:	1c48      	adds	r0, r1, #1
  401acc:	46ce      	mov	lr, r9
  401ace:	e77f      	b.n	4019d0 <_vfiprintf_r+0x774>
  401ad0:	aa0f      	add	r2, sp, #60	; 0x3c
  401ad2:	4659      	mov	r1, fp
  401ad4:	4638      	mov	r0, r7
  401ad6:	f7ff fb81 	bl	4011dc <__sprint_r.part.0>
  401ada:	b960      	cbnz	r0, 401af6 <_vfiprintf_r+0x89a>
  401adc:	9910      	ldr	r1, [sp, #64]	; 0x40
  401ade:	9a11      	ldr	r2, [sp, #68]	; 0x44
  401ae0:	1c48      	adds	r0, r1, #1
  401ae2:	46ca      	mov	sl, r9
  401ae4:	e7bd      	b.n	401a62 <_vfiprintf_r+0x806>
  401ae6:	9b11      	ldr	r3, [sp, #68]	; 0x44
  401ae8:	f8dd b010 	ldr.w	fp, [sp, #16]
  401aec:	2b00      	cmp	r3, #0
  401aee:	f040 81d4 	bne.w	401e9a <_vfiprintf_r+0xc3e>
  401af2:	2300      	movs	r3, #0
  401af4:	9310      	str	r3, [sp, #64]	; 0x40
  401af6:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  401afa:	f013 0f01 	tst.w	r3, #1
  401afe:	f8bb 300c 	ldrh.w	r3, [fp, #12]
  401b02:	d102      	bne.n	401b0a <_vfiprintf_r+0x8ae>
  401b04:	059a      	lsls	r2, r3, #22
  401b06:	f140 80de 	bpl.w	401cc6 <_vfiprintf_r+0xa6a>
  401b0a:	065b      	lsls	r3, r3, #25
  401b0c:	f53f acb2 	bmi.w	401474 <_vfiprintf_r+0x218>
  401b10:	9803      	ldr	r0, [sp, #12]
  401b12:	b02d      	add	sp, #180	; 0xb4
  401b14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401b18:	2a00      	cmp	r2, #0
  401b1a:	f040 8106 	bne.w	401d2a <_vfiprintf_r+0xace>
  401b1e:	9a05      	ldr	r2, [sp, #20]
  401b20:	921d      	str	r2, [sp, #116]	; 0x74
  401b22:	2301      	movs	r3, #1
  401b24:	9211      	str	r2, [sp, #68]	; 0x44
  401b26:	f8cd b070 	str.w	fp, [sp, #112]	; 0x70
  401b2a:	9310      	str	r3, [sp, #64]	; 0x40
  401b2c:	46ca      	mov	sl, r9
  401b2e:	f10a 0a08 	add.w	sl, sl, #8
  401b32:	9b02      	ldr	r3, [sp, #8]
  401b34:	0759      	lsls	r1, r3, #29
  401b36:	d504      	bpl.n	401b42 <_vfiprintf_r+0x8e6>
  401b38:	9b08      	ldr	r3, [sp, #32]
  401b3a:	9901      	ldr	r1, [sp, #4]
  401b3c:	1a5c      	subs	r4, r3, r1
  401b3e:	2c00      	cmp	r4, #0
  401b40:	dc81      	bgt.n	401a46 <_vfiprintf_r+0x7ea>
  401b42:	9b03      	ldr	r3, [sp, #12]
  401b44:	9908      	ldr	r1, [sp, #32]
  401b46:	9801      	ldr	r0, [sp, #4]
  401b48:	4281      	cmp	r1, r0
  401b4a:	bfac      	ite	ge
  401b4c:	185b      	addge	r3, r3, r1
  401b4e:	181b      	addlt	r3, r3, r0
  401b50:	9303      	str	r3, [sp, #12]
  401b52:	bb72      	cbnz	r2, 401bb2 <_vfiprintf_r+0x956>
  401b54:	2300      	movs	r3, #0
  401b56:	9310      	str	r3, [sp, #64]	; 0x40
  401b58:	46ca      	mov	sl, r9
  401b5a:	f7ff bbbc 	b.w	4012d6 <_vfiprintf_r+0x7a>
  401b5e:	aa0f      	add	r2, sp, #60	; 0x3c
  401b60:	9904      	ldr	r1, [sp, #16]
  401b62:	4620      	mov	r0, r4
  401b64:	f7ff fb3a 	bl	4011dc <__sprint_r.part.0>
  401b68:	bb50      	cbnz	r0, 401bc0 <_vfiprintf_r+0x964>
  401b6a:	9910      	ldr	r1, [sp, #64]	; 0x40
  401b6c:	9a11      	ldr	r2, [sp, #68]	; 0x44
  401b6e:	f101 0e01 	add.w	lr, r1, #1
  401b72:	46cc      	mov	ip, r9
  401b74:	e548      	b.n	401608 <_vfiprintf_r+0x3ac>
  401b76:	2a00      	cmp	r2, #0
  401b78:	f040 8140 	bne.w	401dfc <_vfiprintf_r+0xba0>
  401b7c:	f89d 1037 	ldrb.w	r1, [sp, #55]	; 0x37
  401b80:	2900      	cmp	r1, #0
  401b82:	f000 811b 	beq.w	401dbc <_vfiprintf_r+0xb60>
  401b86:	2201      	movs	r2, #1
  401b88:	f10d 0137 	add.w	r1, sp, #55	; 0x37
  401b8c:	4610      	mov	r0, r2
  401b8e:	921d      	str	r2, [sp, #116]	; 0x74
  401b90:	911c      	str	r1, [sp, #112]	; 0x70
  401b92:	46ca      	mov	sl, r9
  401b94:	4601      	mov	r1, r0
  401b96:	f10a 0a08 	add.w	sl, sl, #8
  401b9a:	3001      	adds	r0, #1
  401b9c:	e507      	b.n	4015ae <_vfiprintf_r+0x352>
  401b9e:	9b02      	ldr	r3, [sp, #8]
  401ba0:	2a01      	cmp	r2, #1
  401ba2:	f000 8098 	beq.w	401cd6 <_vfiprintf_r+0xa7a>
  401ba6:	2a02      	cmp	r2, #2
  401ba8:	d10d      	bne.n	401bc6 <_vfiprintf_r+0x96a>
  401baa:	9302      	str	r3, [sp, #8]
  401bac:	2600      	movs	r6, #0
  401bae:	2700      	movs	r7, #0
  401bb0:	e5b0      	b.n	401714 <_vfiprintf_r+0x4b8>
  401bb2:	aa0f      	add	r2, sp, #60	; 0x3c
  401bb4:	9904      	ldr	r1, [sp, #16]
  401bb6:	9806      	ldr	r0, [sp, #24]
  401bb8:	f7ff fb10 	bl	4011dc <__sprint_r.part.0>
  401bbc:	2800      	cmp	r0, #0
  401bbe:	d0c9      	beq.n	401b54 <_vfiprintf_r+0x8f8>
  401bc0:	f8dd b010 	ldr.w	fp, [sp, #16]
  401bc4:	e797      	b.n	401af6 <_vfiprintf_r+0x89a>
  401bc6:	9302      	str	r3, [sp, #8]
  401bc8:	2600      	movs	r6, #0
  401bca:	2700      	movs	r7, #0
  401bcc:	4649      	mov	r1, r9
  401bce:	e000      	b.n	401bd2 <_vfiprintf_r+0x976>
  401bd0:	4659      	mov	r1, fp
  401bd2:	08f2      	lsrs	r2, r6, #3
  401bd4:	ea42 7247 	orr.w	r2, r2, r7, lsl #29
  401bd8:	08f8      	lsrs	r0, r7, #3
  401bda:	f006 0307 	and.w	r3, r6, #7
  401bde:	4607      	mov	r7, r0
  401be0:	4616      	mov	r6, r2
  401be2:	3330      	adds	r3, #48	; 0x30
  401be4:	ea56 0207 	orrs.w	r2, r6, r7
  401be8:	f801 3c01 	strb.w	r3, [r1, #-1]
  401bec:	f101 3bff 	add.w	fp, r1, #4294967295
  401bf0:	d1ee      	bne.n	401bd0 <_vfiprintf_r+0x974>
  401bf2:	9a02      	ldr	r2, [sp, #8]
  401bf4:	07d6      	lsls	r6, r2, #31
  401bf6:	f57f ad9d 	bpl.w	401734 <_vfiprintf_r+0x4d8>
  401bfa:	2b30      	cmp	r3, #48	; 0x30
  401bfc:	f43f ad9a 	beq.w	401734 <_vfiprintf_r+0x4d8>
  401c00:	3902      	subs	r1, #2
  401c02:	2330      	movs	r3, #48	; 0x30
  401c04:	f80b 3c01 	strb.w	r3, [fp, #-1]
  401c08:	eba9 0301 	sub.w	r3, r9, r1
  401c0c:	9305      	str	r3, [sp, #20]
  401c0e:	468b      	mov	fp, r1
  401c10:	e476      	b.n	401500 <_vfiprintf_r+0x2a4>
  401c12:	9b03      	ldr	r3, [sp, #12]
  401c14:	9a08      	ldr	r2, [sp, #32]
  401c16:	428a      	cmp	r2, r1
  401c18:	bfac      	ite	ge
  401c1a:	189b      	addge	r3, r3, r2
  401c1c:	185b      	addlt	r3, r3, r1
  401c1e:	9303      	str	r3, [sp, #12]
  401c20:	e798      	b.n	401b54 <_vfiprintf_r+0x8f8>
  401c22:	2202      	movs	r2, #2
  401c24:	e44d      	b.n	4014c2 <_vfiprintf_r+0x266>
  401c26:	2f00      	cmp	r7, #0
  401c28:	bf08      	it	eq
  401c2a:	2e0a      	cmpeq	r6, #10
  401c2c:	d352      	bcc.n	401cd4 <_vfiprintf_r+0xa78>
  401c2e:	46cb      	mov	fp, r9
  401c30:	4630      	mov	r0, r6
  401c32:	4639      	mov	r1, r7
  401c34:	220a      	movs	r2, #10
  401c36:	2300      	movs	r3, #0
  401c38:	f001 ff36 	bl	403aa8 <__aeabi_uldivmod>
  401c3c:	3230      	adds	r2, #48	; 0x30
  401c3e:	f80b 2d01 	strb.w	r2, [fp, #-1]!
  401c42:	4630      	mov	r0, r6
  401c44:	4639      	mov	r1, r7
  401c46:	2300      	movs	r3, #0
  401c48:	220a      	movs	r2, #10
  401c4a:	f001 ff2d 	bl	403aa8 <__aeabi_uldivmod>
  401c4e:	4606      	mov	r6, r0
  401c50:	460f      	mov	r7, r1
  401c52:	ea56 0307 	orrs.w	r3, r6, r7
  401c56:	d1eb      	bne.n	401c30 <_vfiprintf_r+0x9d4>
  401c58:	e56c      	b.n	401734 <_vfiprintf_r+0x4d8>
  401c5a:	9405      	str	r4, [sp, #20]
  401c5c:	46cb      	mov	fp, r9
  401c5e:	e44f      	b.n	401500 <_vfiprintf_r+0x2a4>
  401c60:	aa0f      	add	r2, sp, #60	; 0x3c
  401c62:	9904      	ldr	r1, [sp, #16]
  401c64:	9806      	ldr	r0, [sp, #24]
  401c66:	f7ff fab9 	bl	4011dc <__sprint_r.part.0>
  401c6a:	2800      	cmp	r0, #0
  401c6c:	d1a8      	bne.n	401bc0 <_vfiprintf_r+0x964>
  401c6e:	9a11      	ldr	r2, [sp, #68]	; 0x44
  401c70:	46ca      	mov	sl, r9
  401c72:	e75e      	b.n	401b32 <_vfiprintf_r+0x8d6>
  401c74:	aa0f      	add	r2, sp, #60	; 0x3c
  401c76:	9904      	ldr	r1, [sp, #16]
  401c78:	9806      	ldr	r0, [sp, #24]
  401c7a:	f7ff faaf 	bl	4011dc <__sprint_r.part.0>
  401c7e:	2800      	cmp	r0, #0
  401c80:	d19e      	bne.n	401bc0 <_vfiprintf_r+0x964>
  401c82:	46ca      	mov	sl, r9
  401c84:	f7ff bbc0 	b.w	401408 <_vfiprintf_r+0x1ac>
  401c88:	00403e30 	.word	0x00403e30
  401c8c:	00403e20 	.word	0x00403e20
  401c90:	3104      	adds	r1, #4
  401c92:	6816      	ldr	r6, [r2, #0]
  401c94:	9107      	str	r1, [sp, #28]
  401c96:	2201      	movs	r2, #1
  401c98:	2700      	movs	r7, #0
  401c9a:	e412      	b.n	4014c2 <_vfiprintf_r+0x266>
  401c9c:	9807      	ldr	r0, [sp, #28]
  401c9e:	4601      	mov	r1, r0
  401ca0:	3104      	adds	r1, #4
  401ca2:	6806      	ldr	r6, [r0, #0]
  401ca4:	9107      	str	r1, [sp, #28]
  401ca6:	2700      	movs	r7, #0
  401ca8:	e40b      	b.n	4014c2 <_vfiprintf_r+0x266>
  401caa:	680e      	ldr	r6, [r1, #0]
  401cac:	3104      	adds	r1, #4
  401cae:	9107      	str	r1, [sp, #28]
  401cb0:	2700      	movs	r7, #0
  401cb2:	e591      	b.n	4017d8 <_vfiprintf_r+0x57c>
  401cb4:	9907      	ldr	r1, [sp, #28]
  401cb6:	680e      	ldr	r6, [r1, #0]
  401cb8:	460a      	mov	r2, r1
  401cba:	17f7      	asrs	r7, r6, #31
  401cbc:	3204      	adds	r2, #4
  401cbe:	9207      	str	r2, [sp, #28]
  401cc0:	4630      	mov	r0, r6
  401cc2:	4639      	mov	r1, r7
  401cc4:	e50f      	b.n	4016e6 <_vfiprintf_r+0x48a>
  401cc6:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  401cca:	f000 fe7f 	bl	4029cc <__retarget_lock_release_recursive>
  401cce:	f8bb 300c 	ldrh.w	r3, [fp, #12]
  401cd2:	e71a      	b.n	401b0a <_vfiprintf_r+0x8ae>
  401cd4:	9b02      	ldr	r3, [sp, #8]
  401cd6:	9302      	str	r3, [sp, #8]
  401cd8:	f10d 0bb0 	add.w	fp, sp, #176	; 0xb0
  401cdc:	3630      	adds	r6, #48	; 0x30
  401cde:	2301      	movs	r3, #1
  401ce0:	f80b 6d41 	strb.w	r6, [fp, #-65]!
  401ce4:	9305      	str	r3, [sp, #20]
  401ce6:	e40b      	b.n	401500 <_vfiprintf_r+0x2a4>
  401ce8:	aa0f      	add	r2, sp, #60	; 0x3c
  401cea:	9904      	ldr	r1, [sp, #16]
  401cec:	9806      	ldr	r0, [sp, #24]
  401cee:	f7ff fa75 	bl	4011dc <__sprint_r.part.0>
  401cf2:	2800      	cmp	r0, #0
  401cf4:	f47f af64 	bne.w	401bc0 <_vfiprintf_r+0x964>
  401cf8:	9910      	ldr	r1, [sp, #64]	; 0x40
  401cfa:	9a11      	ldr	r2, [sp, #68]	; 0x44
  401cfc:	1c48      	adds	r0, r1, #1
  401cfe:	46ca      	mov	sl, r9
  401d00:	e651      	b.n	4019a6 <_vfiprintf_r+0x74a>
  401d02:	aa0f      	add	r2, sp, #60	; 0x3c
  401d04:	9904      	ldr	r1, [sp, #16]
  401d06:	9806      	ldr	r0, [sp, #24]
  401d08:	f7ff fa68 	bl	4011dc <__sprint_r.part.0>
  401d0c:	2800      	cmp	r0, #0
  401d0e:	f47f af57 	bne.w	401bc0 <_vfiprintf_r+0x964>
  401d12:	9910      	ldr	r1, [sp, #64]	; 0x40
  401d14:	9a11      	ldr	r2, [sp, #68]	; 0x44
  401d16:	1c48      	adds	r0, r1, #1
  401d18:	46ca      	mov	sl, r9
  401d1a:	e448      	b.n	4015ae <_vfiprintf_r+0x352>
  401d1c:	2a00      	cmp	r2, #0
  401d1e:	f040 8091 	bne.w	401e44 <_vfiprintf_r+0xbe8>
  401d22:	2001      	movs	r0, #1
  401d24:	4611      	mov	r1, r2
  401d26:	46ca      	mov	sl, r9
  401d28:	e641      	b.n	4019ae <_vfiprintf_r+0x752>
  401d2a:	aa0f      	add	r2, sp, #60	; 0x3c
  401d2c:	9904      	ldr	r1, [sp, #16]
  401d2e:	9806      	ldr	r0, [sp, #24]
  401d30:	f7ff fa54 	bl	4011dc <__sprint_r.part.0>
  401d34:	2800      	cmp	r0, #0
  401d36:	f47f af43 	bne.w	401bc0 <_vfiprintf_r+0x964>
  401d3a:	9810      	ldr	r0, [sp, #64]	; 0x40
  401d3c:	9a11      	ldr	r2, [sp, #68]	; 0x44
  401d3e:	3001      	adds	r0, #1
  401d40:	46ca      	mov	sl, r9
  401d42:	e667      	b.n	401a14 <_vfiprintf_r+0x7b8>
  401d44:	46d3      	mov	fp, sl
  401d46:	e6d6      	b.n	401af6 <_vfiprintf_r+0x89a>
  401d48:	9e07      	ldr	r6, [sp, #28]
  401d4a:	3607      	adds	r6, #7
  401d4c:	f026 0207 	bic.w	r2, r6, #7
  401d50:	f102 0108 	add.w	r1, r2, #8
  401d54:	e9d2 6700 	ldrd	r6, r7, [r2]
  401d58:	9107      	str	r1, [sp, #28]
  401d5a:	2201      	movs	r2, #1
  401d5c:	f7ff bbb1 	b.w	4014c2 <_vfiprintf_r+0x266>
  401d60:	9e07      	ldr	r6, [sp, #28]
  401d62:	3607      	adds	r6, #7
  401d64:	f026 0607 	bic.w	r6, r6, #7
  401d68:	e9d6 0100 	ldrd	r0, r1, [r6]
  401d6c:	f106 0208 	add.w	r2, r6, #8
  401d70:	9207      	str	r2, [sp, #28]
  401d72:	4606      	mov	r6, r0
  401d74:	460f      	mov	r7, r1
  401d76:	e4b6      	b.n	4016e6 <_vfiprintf_r+0x48a>
  401d78:	9e07      	ldr	r6, [sp, #28]
  401d7a:	3607      	adds	r6, #7
  401d7c:	f026 0207 	bic.w	r2, r6, #7
  401d80:	f102 0108 	add.w	r1, r2, #8
  401d84:	e9d2 6700 	ldrd	r6, r7, [r2]
  401d88:	9107      	str	r1, [sp, #28]
  401d8a:	2200      	movs	r2, #0
  401d8c:	f7ff bb99 	b.w	4014c2 <_vfiprintf_r+0x266>
  401d90:	9e07      	ldr	r6, [sp, #28]
  401d92:	3607      	adds	r6, #7
  401d94:	f026 0107 	bic.w	r1, r6, #7
  401d98:	f101 0008 	add.w	r0, r1, #8
  401d9c:	9007      	str	r0, [sp, #28]
  401d9e:	e9d1 6700 	ldrd	r6, r7, [r1]
  401da2:	e519      	b.n	4017d8 <_vfiprintf_r+0x57c>
  401da4:	46cb      	mov	fp, r9
  401da6:	f7ff bbab 	b.w	401500 <_vfiprintf_r+0x2a4>
  401daa:	252d      	movs	r5, #45	; 0x2d
  401dac:	4276      	negs	r6, r6
  401dae:	eb67 0747 	sbc.w	r7, r7, r7, lsl #1
  401db2:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  401db6:	2201      	movs	r2, #1
  401db8:	f7ff bb88 	b.w	4014cc <_vfiprintf_r+0x270>
  401dbc:	9b09      	ldr	r3, [sp, #36]	; 0x24
  401dbe:	b9b3      	cbnz	r3, 401dee <_vfiprintf_r+0xb92>
  401dc0:	4611      	mov	r1, r2
  401dc2:	2001      	movs	r0, #1
  401dc4:	46ca      	mov	sl, r9
  401dc6:	e5f2      	b.n	4019ae <_vfiprintf_r+0x752>
  401dc8:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  401dcc:	f000 fdfe 	bl	4029cc <__retarget_lock_release_recursive>
  401dd0:	f04f 33ff 	mov.w	r3, #4294967295
  401dd4:	9303      	str	r3, [sp, #12]
  401dd6:	f7ff bb50 	b.w	40147a <_vfiprintf_r+0x21e>
  401dda:	aa0f      	add	r2, sp, #60	; 0x3c
  401ddc:	9904      	ldr	r1, [sp, #16]
  401dde:	9806      	ldr	r0, [sp, #24]
  401de0:	f7ff f9fc 	bl	4011dc <__sprint_r.part.0>
  401de4:	2800      	cmp	r0, #0
  401de6:	f47f aeeb 	bne.w	401bc0 <_vfiprintf_r+0x964>
  401dea:	9a11      	ldr	r2, [sp, #68]	; 0x44
  401dec:	e6a9      	b.n	401b42 <_vfiprintf_r+0x8e6>
  401dee:	ab0e      	add	r3, sp, #56	; 0x38
  401df0:	2202      	movs	r2, #2
  401df2:	931c      	str	r3, [sp, #112]	; 0x70
  401df4:	921d      	str	r2, [sp, #116]	; 0x74
  401df6:	2001      	movs	r0, #1
  401df8:	46ca      	mov	sl, r9
  401dfa:	e5d0      	b.n	40199e <_vfiprintf_r+0x742>
  401dfc:	aa0f      	add	r2, sp, #60	; 0x3c
  401dfe:	9904      	ldr	r1, [sp, #16]
  401e00:	9806      	ldr	r0, [sp, #24]
  401e02:	f7ff f9eb 	bl	4011dc <__sprint_r.part.0>
  401e06:	2800      	cmp	r0, #0
  401e08:	f47f aeda 	bne.w	401bc0 <_vfiprintf_r+0x964>
  401e0c:	9910      	ldr	r1, [sp, #64]	; 0x40
  401e0e:	9a11      	ldr	r2, [sp, #68]	; 0x44
  401e10:	1c48      	adds	r0, r1, #1
  401e12:	46ca      	mov	sl, r9
  401e14:	e5a4      	b.n	401960 <_vfiprintf_r+0x704>
  401e16:	9a07      	ldr	r2, [sp, #28]
  401e18:	9903      	ldr	r1, [sp, #12]
  401e1a:	6813      	ldr	r3, [r2, #0]
  401e1c:	17cd      	asrs	r5, r1, #31
  401e1e:	4608      	mov	r0, r1
  401e20:	3204      	adds	r2, #4
  401e22:	4629      	mov	r1, r5
  401e24:	9207      	str	r2, [sp, #28]
  401e26:	e9c3 0100 	strd	r0, r1, [r3]
  401e2a:	f7ff ba54 	b.w	4012d6 <_vfiprintf_r+0x7a>
  401e2e:	4658      	mov	r0, fp
  401e30:	9607      	str	r6, [sp, #28]
  401e32:	9302      	str	r3, [sp, #8]
  401e34:	f7ff f964 	bl	401100 <strlen>
  401e38:	2400      	movs	r4, #0
  401e3a:	9005      	str	r0, [sp, #20]
  401e3c:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  401e40:	f7ff bb5e 	b.w	401500 <_vfiprintf_r+0x2a4>
  401e44:	aa0f      	add	r2, sp, #60	; 0x3c
  401e46:	9904      	ldr	r1, [sp, #16]
  401e48:	9806      	ldr	r0, [sp, #24]
  401e4a:	f7ff f9c7 	bl	4011dc <__sprint_r.part.0>
  401e4e:	2800      	cmp	r0, #0
  401e50:	f47f aeb6 	bne.w	401bc0 <_vfiprintf_r+0x964>
  401e54:	9910      	ldr	r1, [sp, #64]	; 0x40
  401e56:	9a11      	ldr	r2, [sp, #68]	; 0x44
  401e58:	1c48      	adds	r0, r1, #1
  401e5a:	46ca      	mov	sl, r9
  401e5c:	e5a7      	b.n	4019ae <_vfiprintf_r+0x752>
  401e5e:	9910      	ldr	r1, [sp, #64]	; 0x40
  401e60:	9a11      	ldr	r2, [sp, #68]	; 0x44
  401e62:	4e20      	ldr	r6, [pc, #128]	; (401ee4 <_vfiprintf_r+0xc88>)
  401e64:	3101      	adds	r1, #1
  401e66:	f7ff bb90 	b.w	40158a <_vfiprintf_r+0x32e>
  401e6a:	2c06      	cmp	r4, #6
  401e6c:	bf28      	it	cs
  401e6e:	2406      	movcs	r4, #6
  401e70:	9405      	str	r4, [sp, #20]
  401e72:	9607      	str	r6, [sp, #28]
  401e74:	9401      	str	r4, [sp, #4]
  401e76:	f8df b070 	ldr.w	fp, [pc, #112]	; 401ee8 <_vfiprintf_r+0xc8c>
  401e7a:	e4d5      	b.n	401828 <_vfiprintf_r+0x5cc>
  401e7c:	9810      	ldr	r0, [sp, #64]	; 0x40
  401e7e:	4e19      	ldr	r6, [pc, #100]	; (401ee4 <_vfiprintf_r+0xc88>)
  401e80:	3001      	adds	r0, #1
  401e82:	e603      	b.n	401a8c <_vfiprintf_r+0x830>
  401e84:	9405      	str	r4, [sp, #20]
  401e86:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  401e8a:	9607      	str	r6, [sp, #28]
  401e8c:	9302      	str	r3, [sp, #8]
  401e8e:	4604      	mov	r4, r0
  401e90:	f7ff bb36 	b.w	401500 <_vfiprintf_r+0x2a4>
  401e94:	4686      	mov	lr, r0
  401e96:	f7ff bbce 	b.w	401636 <_vfiprintf_r+0x3da>
  401e9a:	9806      	ldr	r0, [sp, #24]
  401e9c:	aa0f      	add	r2, sp, #60	; 0x3c
  401e9e:	4659      	mov	r1, fp
  401ea0:	f7ff f99c 	bl	4011dc <__sprint_r.part.0>
  401ea4:	2800      	cmp	r0, #0
  401ea6:	f43f ae24 	beq.w	401af2 <_vfiprintf_r+0x896>
  401eaa:	e624      	b.n	401af6 <_vfiprintf_r+0x89a>
  401eac:	9907      	ldr	r1, [sp, #28]
  401eae:	f898 2001 	ldrb.w	r2, [r8, #1]
  401eb2:	680c      	ldr	r4, [r1, #0]
  401eb4:	3104      	adds	r1, #4
  401eb6:	ea44 74e4 	orr.w	r4, r4, r4, asr #31
  401eba:	46b8      	mov	r8, r7
  401ebc:	9107      	str	r1, [sp, #28]
  401ebe:	f7ff ba3f 	b.w	401340 <_vfiprintf_r+0xe4>
  401ec2:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  401ec6:	e43c      	b.n	401742 <_vfiprintf_r+0x4e6>
  401ec8:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  401ecc:	e521      	b.n	401912 <_vfiprintf_r+0x6b6>
  401ece:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  401ed2:	f7ff bbf4 	b.w	4016be <_vfiprintf_r+0x462>
  401ed6:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  401eda:	e491      	b.n	401800 <_vfiprintf_r+0x5a4>
  401edc:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  401ee0:	e469      	b.n	4017b6 <_vfiprintf_r+0x55a>
  401ee2:	bf00      	nop
  401ee4:	00403e20 	.word	0x00403e20
  401ee8:	00403e18 	.word	0x00403e18

00401eec <__sbprintf>:
  401eec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  401ef0:	460c      	mov	r4, r1
  401ef2:	f5ad 6d8d 	sub.w	sp, sp, #1128	; 0x468
  401ef6:	8989      	ldrh	r1, [r1, #12]
  401ef8:	6e66      	ldr	r6, [r4, #100]	; 0x64
  401efa:	89e5      	ldrh	r5, [r4, #14]
  401efc:	9619      	str	r6, [sp, #100]	; 0x64
  401efe:	f021 0102 	bic.w	r1, r1, #2
  401f02:	4606      	mov	r6, r0
  401f04:	69e0      	ldr	r0, [r4, #28]
  401f06:	f8ad 100c 	strh.w	r1, [sp, #12]
  401f0a:	4617      	mov	r7, r2
  401f0c:	f44f 6180 	mov.w	r1, #1024	; 0x400
  401f10:	6a62      	ldr	r2, [r4, #36]	; 0x24
  401f12:	f8ad 500e 	strh.w	r5, [sp, #14]
  401f16:	4698      	mov	r8, r3
  401f18:	ad1a      	add	r5, sp, #104	; 0x68
  401f1a:	2300      	movs	r3, #0
  401f1c:	9007      	str	r0, [sp, #28]
  401f1e:	a816      	add	r0, sp, #88	; 0x58
  401f20:	9209      	str	r2, [sp, #36]	; 0x24
  401f22:	9306      	str	r3, [sp, #24]
  401f24:	9500      	str	r5, [sp, #0]
  401f26:	9504      	str	r5, [sp, #16]
  401f28:	9102      	str	r1, [sp, #8]
  401f2a:	9105      	str	r1, [sp, #20]
  401f2c:	f000 fd48 	bl	4029c0 <__retarget_lock_init_recursive>
  401f30:	4643      	mov	r3, r8
  401f32:	463a      	mov	r2, r7
  401f34:	4669      	mov	r1, sp
  401f36:	4630      	mov	r0, r6
  401f38:	f7ff f990 	bl	40125c <_vfiprintf_r>
  401f3c:	1e05      	subs	r5, r0, #0
  401f3e:	db07      	blt.n	401f50 <__sbprintf+0x64>
  401f40:	4630      	mov	r0, r6
  401f42:	4669      	mov	r1, sp
  401f44:	f000 f928 	bl	402198 <_fflush_r>
  401f48:	2800      	cmp	r0, #0
  401f4a:	bf18      	it	ne
  401f4c:	f04f 35ff 	movne.w	r5, #4294967295
  401f50:	f8bd 300c 	ldrh.w	r3, [sp, #12]
  401f54:	065b      	lsls	r3, r3, #25
  401f56:	d503      	bpl.n	401f60 <__sbprintf+0x74>
  401f58:	89a3      	ldrh	r3, [r4, #12]
  401f5a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  401f5e:	81a3      	strh	r3, [r4, #12]
  401f60:	9816      	ldr	r0, [sp, #88]	; 0x58
  401f62:	f000 fd2f 	bl	4029c4 <__retarget_lock_close_recursive>
  401f66:	4628      	mov	r0, r5
  401f68:	f50d 6d8d 	add.w	sp, sp, #1128	; 0x468
  401f6c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00401f70 <__swsetup_r>:
  401f70:	b538      	push	{r3, r4, r5, lr}
  401f72:	4b30      	ldr	r3, [pc, #192]	; (402034 <__swsetup_r+0xc4>)
  401f74:	681b      	ldr	r3, [r3, #0]
  401f76:	4605      	mov	r5, r0
  401f78:	460c      	mov	r4, r1
  401f7a:	b113      	cbz	r3, 401f82 <__swsetup_r+0x12>
  401f7c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  401f7e:	2a00      	cmp	r2, #0
  401f80:	d038      	beq.n	401ff4 <__swsetup_r+0x84>
  401f82:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  401f86:	b293      	uxth	r3, r2
  401f88:	0718      	lsls	r0, r3, #28
  401f8a:	d50c      	bpl.n	401fa6 <__swsetup_r+0x36>
  401f8c:	6920      	ldr	r0, [r4, #16]
  401f8e:	b1a8      	cbz	r0, 401fbc <__swsetup_r+0x4c>
  401f90:	f013 0201 	ands.w	r2, r3, #1
  401f94:	d01e      	beq.n	401fd4 <__swsetup_r+0x64>
  401f96:	6963      	ldr	r3, [r4, #20]
  401f98:	2200      	movs	r2, #0
  401f9a:	425b      	negs	r3, r3
  401f9c:	61a3      	str	r3, [r4, #24]
  401f9e:	60a2      	str	r2, [r4, #8]
  401fa0:	b1f0      	cbz	r0, 401fe0 <__swsetup_r+0x70>
  401fa2:	2000      	movs	r0, #0
  401fa4:	bd38      	pop	{r3, r4, r5, pc}
  401fa6:	06d9      	lsls	r1, r3, #27
  401fa8:	d53c      	bpl.n	402024 <__swsetup_r+0xb4>
  401faa:	0758      	lsls	r0, r3, #29
  401fac:	d426      	bmi.n	401ffc <__swsetup_r+0x8c>
  401fae:	6920      	ldr	r0, [r4, #16]
  401fb0:	f042 0308 	orr.w	r3, r2, #8
  401fb4:	81a3      	strh	r3, [r4, #12]
  401fb6:	b29b      	uxth	r3, r3
  401fb8:	2800      	cmp	r0, #0
  401fba:	d1e9      	bne.n	401f90 <__swsetup_r+0x20>
  401fbc:	f403 7220 	and.w	r2, r3, #640	; 0x280
  401fc0:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
  401fc4:	d0e4      	beq.n	401f90 <__swsetup_r+0x20>
  401fc6:	4628      	mov	r0, r5
  401fc8:	4621      	mov	r1, r4
  401fca:	f000 fd2f 	bl	402a2c <__smakebuf_r>
  401fce:	89a3      	ldrh	r3, [r4, #12]
  401fd0:	6920      	ldr	r0, [r4, #16]
  401fd2:	e7dd      	b.n	401f90 <__swsetup_r+0x20>
  401fd4:	0799      	lsls	r1, r3, #30
  401fd6:	bf58      	it	pl
  401fd8:	6962      	ldrpl	r2, [r4, #20]
  401fda:	60a2      	str	r2, [r4, #8]
  401fdc:	2800      	cmp	r0, #0
  401fde:	d1e0      	bne.n	401fa2 <__swsetup_r+0x32>
  401fe0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  401fe4:	061a      	lsls	r2, r3, #24
  401fe6:	d5dd      	bpl.n	401fa4 <__swsetup_r+0x34>
  401fe8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  401fec:	81a3      	strh	r3, [r4, #12]
  401fee:	f04f 30ff 	mov.w	r0, #4294967295
  401ff2:	bd38      	pop	{r3, r4, r5, pc}
  401ff4:	4618      	mov	r0, r3
  401ff6:	f000 f927 	bl	402248 <__sinit>
  401ffa:	e7c2      	b.n	401f82 <__swsetup_r+0x12>
  401ffc:	6b21      	ldr	r1, [r4, #48]	; 0x30
  401ffe:	b151      	cbz	r1, 402016 <__swsetup_r+0xa6>
  402000:	f104 0340 	add.w	r3, r4, #64	; 0x40
  402004:	4299      	cmp	r1, r3
  402006:	d004      	beq.n	402012 <__swsetup_r+0xa2>
  402008:	4628      	mov	r0, r5
  40200a:	f000 fa43 	bl	402494 <_free_r>
  40200e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  402012:	2300      	movs	r3, #0
  402014:	6323      	str	r3, [r4, #48]	; 0x30
  402016:	2300      	movs	r3, #0
  402018:	6920      	ldr	r0, [r4, #16]
  40201a:	6063      	str	r3, [r4, #4]
  40201c:	f022 0224 	bic.w	r2, r2, #36	; 0x24
  402020:	6020      	str	r0, [r4, #0]
  402022:	e7c5      	b.n	401fb0 <__swsetup_r+0x40>
  402024:	f042 0240 	orr.w	r2, r2, #64	; 0x40
  402028:	2309      	movs	r3, #9
  40202a:	602b      	str	r3, [r5, #0]
  40202c:	f04f 30ff 	mov.w	r0, #4294967295
  402030:	81a2      	strh	r2, [r4, #12]
  402032:	bd38      	pop	{r3, r4, r5, pc}
  402034:	20400008 	.word	0x20400008

00402038 <register_fini>:
  402038:	4b02      	ldr	r3, [pc, #8]	; (402044 <register_fini+0xc>)
  40203a:	b113      	cbz	r3, 402042 <register_fini+0xa>
  40203c:	4802      	ldr	r0, [pc, #8]	; (402048 <register_fini+0x10>)
  40203e:	f000 b805 	b.w	40204c <atexit>
  402042:	4770      	bx	lr
  402044:	00000000 	.word	0x00000000
  402048:	004022b9 	.word	0x004022b9

0040204c <atexit>:
  40204c:	2300      	movs	r3, #0
  40204e:	4601      	mov	r1, r0
  402050:	461a      	mov	r2, r3
  402052:	4618      	mov	r0, r3
  402054:	f001 bc00 	b.w	403858 <__register_exitproc>

00402058 <__sflush_r>:
  402058:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
  40205c:	b29a      	uxth	r2, r3
  40205e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  402062:	460d      	mov	r5, r1
  402064:	0711      	lsls	r1, r2, #28
  402066:	4680      	mov	r8, r0
  402068:	d43a      	bmi.n	4020e0 <__sflush_r+0x88>
  40206a:	686a      	ldr	r2, [r5, #4]
  40206c:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
  402070:	2a00      	cmp	r2, #0
  402072:	81ab      	strh	r3, [r5, #12]
  402074:	dd6f      	ble.n	402156 <__sflush_r+0xfe>
  402076:	6aac      	ldr	r4, [r5, #40]	; 0x28
  402078:	2c00      	cmp	r4, #0
  40207a:	d049      	beq.n	402110 <__sflush_r+0xb8>
  40207c:	2200      	movs	r2, #0
  40207e:	b29b      	uxth	r3, r3
  402080:	f8d8 6000 	ldr.w	r6, [r8]
  402084:	f8c8 2000 	str.w	r2, [r8]
  402088:	f413 5280 	ands.w	r2, r3, #4096	; 0x1000
  40208c:	d067      	beq.n	40215e <__sflush_r+0x106>
  40208e:	6d2a      	ldr	r2, [r5, #80]	; 0x50
  402090:	075f      	lsls	r7, r3, #29
  402092:	d505      	bpl.n	4020a0 <__sflush_r+0x48>
  402094:	6869      	ldr	r1, [r5, #4]
  402096:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  402098:	1a52      	subs	r2, r2, r1
  40209a:	b10b      	cbz	r3, 4020a0 <__sflush_r+0x48>
  40209c:	6beb      	ldr	r3, [r5, #60]	; 0x3c
  40209e:	1ad2      	subs	r2, r2, r3
  4020a0:	2300      	movs	r3, #0
  4020a2:	69e9      	ldr	r1, [r5, #28]
  4020a4:	4640      	mov	r0, r8
  4020a6:	47a0      	blx	r4
  4020a8:	1c44      	adds	r4, r0, #1
  4020aa:	d03c      	beq.n	402126 <__sflush_r+0xce>
  4020ac:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
  4020b0:	692a      	ldr	r2, [r5, #16]
  4020b2:	602a      	str	r2, [r5, #0]
  4020b4:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  4020b8:	2200      	movs	r2, #0
  4020ba:	81ab      	strh	r3, [r5, #12]
  4020bc:	04db      	lsls	r3, r3, #19
  4020be:	606a      	str	r2, [r5, #4]
  4020c0:	d447      	bmi.n	402152 <__sflush_r+0xfa>
  4020c2:	6b29      	ldr	r1, [r5, #48]	; 0x30
  4020c4:	f8c8 6000 	str.w	r6, [r8]
  4020c8:	b311      	cbz	r1, 402110 <__sflush_r+0xb8>
  4020ca:	f105 0340 	add.w	r3, r5, #64	; 0x40
  4020ce:	4299      	cmp	r1, r3
  4020d0:	d002      	beq.n	4020d8 <__sflush_r+0x80>
  4020d2:	4640      	mov	r0, r8
  4020d4:	f000 f9de 	bl	402494 <_free_r>
  4020d8:	2000      	movs	r0, #0
  4020da:	6328      	str	r0, [r5, #48]	; 0x30
  4020dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4020e0:	692e      	ldr	r6, [r5, #16]
  4020e2:	b1ae      	cbz	r6, 402110 <__sflush_r+0xb8>
  4020e4:	682c      	ldr	r4, [r5, #0]
  4020e6:	602e      	str	r6, [r5, #0]
  4020e8:	0791      	lsls	r1, r2, #30
  4020ea:	bf0c      	ite	eq
  4020ec:	696b      	ldreq	r3, [r5, #20]
  4020ee:	2300      	movne	r3, #0
  4020f0:	1ba4      	subs	r4, r4, r6
  4020f2:	60ab      	str	r3, [r5, #8]
  4020f4:	e00a      	b.n	40210c <__sflush_r+0xb4>
  4020f6:	4623      	mov	r3, r4
  4020f8:	4632      	mov	r2, r6
  4020fa:	6a6f      	ldr	r7, [r5, #36]	; 0x24
  4020fc:	69e9      	ldr	r1, [r5, #28]
  4020fe:	4640      	mov	r0, r8
  402100:	47b8      	blx	r7
  402102:	2800      	cmp	r0, #0
  402104:	eba4 0400 	sub.w	r4, r4, r0
  402108:	4406      	add	r6, r0
  40210a:	dd04      	ble.n	402116 <__sflush_r+0xbe>
  40210c:	2c00      	cmp	r4, #0
  40210e:	dcf2      	bgt.n	4020f6 <__sflush_r+0x9e>
  402110:	2000      	movs	r0, #0
  402112:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  402116:	89ab      	ldrh	r3, [r5, #12]
  402118:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  40211c:	81ab      	strh	r3, [r5, #12]
  40211e:	f04f 30ff 	mov.w	r0, #4294967295
  402122:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  402126:	f8d8 4000 	ldr.w	r4, [r8]
  40212a:	2c1d      	cmp	r4, #29
  40212c:	d8f3      	bhi.n	402116 <__sflush_r+0xbe>
  40212e:	4b19      	ldr	r3, [pc, #100]	; (402194 <__sflush_r+0x13c>)
  402130:	40e3      	lsrs	r3, r4
  402132:	43db      	mvns	r3, r3
  402134:	f013 0301 	ands.w	r3, r3, #1
  402138:	d1ed      	bne.n	402116 <__sflush_r+0xbe>
  40213a:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
  40213e:	606b      	str	r3, [r5, #4]
  402140:	f422 6300 	bic.w	r3, r2, #2048	; 0x800
  402144:	6929      	ldr	r1, [r5, #16]
  402146:	81ab      	strh	r3, [r5, #12]
  402148:	04da      	lsls	r2, r3, #19
  40214a:	6029      	str	r1, [r5, #0]
  40214c:	d5b9      	bpl.n	4020c2 <__sflush_r+0x6a>
  40214e:	2c00      	cmp	r4, #0
  402150:	d1b7      	bne.n	4020c2 <__sflush_r+0x6a>
  402152:	6528      	str	r0, [r5, #80]	; 0x50
  402154:	e7b5      	b.n	4020c2 <__sflush_r+0x6a>
  402156:	6bea      	ldr	r2, [r5, #60]	; 0x3c
  402158:	2a00      	cmp	r2, #0
  40215a:	dc8c      	bgt.n	402076 <__sflush_r+0x1e>
  40215c:	e7d8      	b.n	402110 <__sflush_r+0xb8>
  40215e:	2301      	movs	r3, #1
  402160:	69e9      	ldr	r1, [r5, #28]
  402162:	4640      	mov	r0, r8
  402164:	47a0      	blx	r4
  402166:	1c43      	adds	r3, r0, #1
  402168:	4602      	mov	r2, r0
  40216a:	d002      	beq.n	402172 <__sflush_r+0x11a>
  40216c:	89ab      	ldrh	r3, [r5, #12]
  40216e:	6aac      	ldr	r4, [r5, #40]	; 0x28
  402170:	e78e      	b.n	402090 <__sflush_r+0x38>
  402172:	f8d8 3000 	ldr.w	r3, [r8]
  402176:	2b00      	cmp	r3, #0
  402178:	d0f8      	beq.n	40216c <__sflush_r+0x114>
  40217a:	2b1d      	cmp	r3, #29
  40217c:	d001      	beq.n	402182 <__sflush_r+0x12a>
  40217e:	2b16      	cmp	r3, #22
  402180:	d102      	bne.n	402188 <__sflush_r+0x130>
  402182:	f8c8 6000 	str.w	r6, [r8]
  402186:	e7c3      	b.n	402110 <__sflush_r+0xb8>
  402188:	89ab      	ldrh	r3, [r5, #12]
  40218a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  40218e:	81ab      	strh	r3, [r5, #12]
  402190:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  402194:	20400001 	.word	0x20400001

00402198 <_fflush_r>:
  402198:	b538      	push	{r3, r4, r5, lr}
  40219a:	460d      	mov	r5, r1
  40219c:	4604      	mov	r4, r0
  40219e:	b108      	cbz	r0, 4021a4 <_fflush_r+0xc>
  4021a0:	6b83      	ldr	r3, [r0, #56]	; 0x38
  4021a2:	b1bb      	cbz	r3, 4021d4 <_fflush_r+0x3c>
  4021a4:	f9b5 000c 	ldrsh.w	r0, [r5, #12]
  4021a8:	b188      	cbz	r0, 4021ce <_fflush_r+0x36>
  4021aa:	6e6b      	ldr	r3, [r5, #100]	; 0x64
  4021ac:	07db      	lsls	r3, r3, #31
  4021ae:	d401      	bmi.n	4021b4 <_fflush_r+0x1c>
  4021b0:	0581      	lsls	r1, r0, #22
  4021b2:	d517      	bpl.n	4021e4 <_fflush_r+0x4c>
  4021b4:	4620      	mov	r0, r4
  4021b6:	4629      	mov	r1, r5
  4021b8:	f7ff ff4e 	bl	402058 <__sflush_r>
  4021bc:	6e6b      	ldr	r3, [r5, #100]	; 0x64
  4021be:	07da      	lsls	r2, r3, #31
  4021c0:	4604      	mov	r4, r0
  4021c2:	d402      	bmi.n	4021ca <_fflush_r+0x32>
  4021c4:	89ab      	ldrh	r3, [r5, #12]
  4021c6:	059b      	lsls	r3, r3, #22
  4021c8:	d507      	bpl.n	4021da <_fflush_r+0x42>
  4021ca:	4620      	mov	r0, r4
  4021cc:	bd38      	pop	{r3, r4, r5, pc}
  4021ce:	4604      	mov	r4, r0
  4021d0:	4620      	mov	r0, r4
  4021d2:	bd38      	pop	{r3, r4, r5, pc}
  4021d4:	f000 f838 	bl	402248 <__sinit>
  4021d8:	e7e4      	b.n	4021a4 <_fflush_r+0xc>
  4021da:	6da8      	ldr	r0, [r5, #88]	; 0x58
  4021dc:	f000 fbf6 	bl	4029cc <__retarget_lock_release_recursive>
  4021e0:	4620      	mov	r0, r4
  4021e2:	bd38      	pop	{r3, r4, r5, pc}
  4021e4:	6da8      	ldr	r0, [r5, #88]	; 0x58
  4021e6:	f000 fbef 	bl	4029c8 <__retarget_lock_acquire_recursive>
  4021ea:	e7e3      	b.n	4021b4 <_fflush_r+0x1c>

004021ec <_cleanup_r>:
  4021ec:	4901      	ldr	r1, [pc, #4]	; (4021f4 <_cleanup_r+0x8>)
  4021ee:	f000 bbaf 	b.w	402950 <_fwalk_reent>
  4021f2:	bf00      	nop
  4021f4:	00403941 	.word	0x00403941

004021f8 <std.isra.0>:
  4021f8:	b510      	push	{r4, lr}
  4021fa:	2300      	movs	r3, #0
  4021fc:	4604      	mov	r4, r0
  4021fe:	8181      	strh	r1, [r0, #12]
  402200:	81c2      	strh	r2, [r0, #14]
  402202:	6003      	str	r3, [r0, #0]
  402204:	6043      	str	r3, [r0, #4]
  402206:	6083      	str	r3, [r0, #8]
  402208:	6643      	str	r3, [r0, #100]	; 0x64
  40220a:	6103      	str	r3, [r0, #16]
  40220c:	6143      	str	r3, [r0, #20]
  40220e:	6183      	str	r3, [r0, #24]
  402210:	4619      	mov	r1, r3
  402212:	2208      	movs	r2, #8
  402214:	305c      	adds	r0, #92	; 0x5c
  402216:	f7fe fdf3 	bl	400e00 <memset>
  40221a:	4807      	ldr	r0, [pc, #28]	; (402238 <std.isra.0+0x40>)
  40221c:	4907      	ldr	r1, [pc, #28]	; (40223c <std.isra.0+0x44>)
  40221e:	4a08      	ldr	r2, [pc, #32]	; (402240 <std.isra.0+0x48>)
  402220:	4b08      	ldr	r3, [pc, #32]	; (402244 <std.isra.0+0x4c>)
  402222:	6220      	str	r0, [r4, #32]
  402224:	61e4      	str	r4, [r4, #28]
  402226:	6261      	str	r1, [r4, #36]	; 0x24
  402228:	62a2      	str	r2, [r4, #40]	; 0x28
  40222a:	62e3      	str	r3, [r4, #44]	; 0x2c
  40222c:	f104 0058 	add.w	r0, r4, #88	; 0x58
  402230:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  402234:	f000 bbc4 	b.w	4029c0 <__retarget_lock_init_recursive>
  402238:	00403685 	.word	0x00403685
  40223c:	004036a9 	.word	0x004036a9
  402240:	004036e5 	.word	0x004036e5
  402244:	00403705 	.word	0x00403705

00402248 <__sinit>:
  402248:	b510      	push	{r4, lr}
  40224a:	4604      	mov	r4, r0
  40224c:	4812      	ldr	r0, [pc, #72]	; (402298 <__sinit+0x50>)
  40224e:	f000 fbbb 	bl	4029c8 <__retarget_lock_acquire_recursive>
  402252:	6ba2      	ldr	r2, [r4, #56]	; 0x38
  402254:	b9d2      	cbnz	r2, 40228c <__sinit+0x44>
  402256:	f504 733b 	add.w	r3, r4, #748	; 0x2ec
  40225a:	4810      	ldr	r0, [pc, #64]	; (40229c <__sinit+0x54>)
  40225c:	f8c4 32e8 	str.w	r3, [r4, #744]	; 0x2e8
  402260:	2103      	movs	r1, #3
  402262:	f8c4 22e0 	str.w	r2, [r4, #736]	; 0x2e0
  402266:	63e0      	str	r0, [r4, #60]	; 0x3c
  402268:	f8c4 12e4 	str.w	r1, [r4, #740]	; 0x2e4
  40226c:	6860      	ldr	r0, [r4, #4]
  40226e:	2104      	movs	r1, #4
  402270:	f7ff ffc2 	bl	4021f8 <std.isra.0>
  402274:	2201      	movs	r2, #1
  402276:	2109      	movs	r1, #9
  402278:	68a0      	ldr	r0, [r4, #8]
  40227a:	f7ff ffbd 	bl	4021f8 <std.isra.0>
  40227e:	2202      	movs	r2, #2
  402280:	2112      	movs	r1, #18
  402282:	68e0      	ldr	r0, [r4, #12]
  402284:	f7ff ffb8 	bl	4021f8 <std.isra.0>
  402288:	2301      	movs	r3, #1
  40228a:	63a3      	str	r3, [r4, #56]	; 0x38
  40228c:	4802      	ldr	r0, [pc, #8]	; (402298 <__sinit+0x50>)
  40228e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  402292:	f000 bb9b 	b.w	4029cc <__retarget_lock_release_recursive>
  402296:	bf00      	nop
  402298:	20400a98 	.word	0x20400a98
  40229c:	004021ed 	.word	0x004021ed

004022a0 <__sfp_lock_acquire>:
  4022a0:	4801      	ldr	r0, [pc, #4]	; (4022a8 <__sfp_lock_acquire+0x8>)
  4022a2:	f000 bb91 	b.w	4029c8 <__retarget_lock_acquire_recursive>
  4022a6:	bf00      	nop
  4022a8:	20400aac 	.word	0x20400aac

004022ac <__sfp_lock_release>:
  4022ac:	4801      	ldr	r0, [pc, #4]	; (4022b4 <__sfp_lock_release+0x8>)
  4022ae:	f000 bb8d 	b.w	4029cc <__retarget_lock_release_recursive>
  4022b2:	bf00      	nop
  4022b4:	20400aac 	.word	0x20400aac

004022b8 <__libc_fini_array>:
  4022b8:	b538      	push	{r3, r4, r5, lr}
  4022ba:	4c0a      	ldr	r4, [pc, #40]	; (4022e4 <__libc_fini_array+0x2c>)
  4022bc:	4d0a      	ldr	r5, [pc, #40]	; (4022e8 <__libc_fini_array+0x30>)
  4022be:	1b64      	subs	r4, r4, r5
  4022c0:	10a4      	asrs	r4, r4, #2
  4022c2:	d00a      	beq.n	4022da <__libc_fini_array+0x22>
  4022c4:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  4022c8:	3b01      	subs	r3, #1
  4022ca:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  4022ce:	3c01      	subs	r4, #1
  4022d0:	f855 3904 	ldr.w	r3, [r5], #-4
  4022d4:	4798      	blx	r3
  4022d6:	2c00      	cmp	r4, #0
  4022d8:	d1f9      	bne.n	4022ce <__libc_fini_array+0x16>
  4022da:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  4022de:	f001 be43 	b.w	403f68 <_fini>
  4022e2:	bf00      	nop
  4022e4:	00403f78 	.word	0x00403f78
  4022e8:	00403f74 	.word	0x00403f74

004022ec <__fputwc>:
  4022ec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  4022f0:	b082      	sub	sp, #8
  4022f2:	4680      	mov	r8, r0
  4022f4:	4689      	mov	r9, r1
  4022f6:	4614      	mov	r4, r2
  4022f8:	f000 fb54 	bl	4029a4 <__locale_mb_cur_max>
  4022fc:	2801      	cmp	r0, #1
  4022fe:	d036      	beq.n	40236e <__fputwc+0x82>
  402300:	464a      	mov	r2, r9
  402302:	f104 035c 	add.w	r3, r4, #92	; 0x5c
  402306:	a901      	add	r1, sp, #4
  402308:	4640      	mov	r0, r8
  40230a:	f001 fa57 	bl	4037bc <_wcrtomb_r>
  40230e:	1c42      	adds	r2, r0, #1
  402310:	4606      	mov	r6, r0
  402312:	d025      	beq.n	402360 <__fputwc+0x74>
  402314:	b3a8      	cbz	r0, 402382 <__fputwc+0x96>
  402316:	f89d e004 	ldrb.w	lr, [sp, #4]
  40231a:	2500      	movs	r5, #0
  40231c:	f10d 0a04 	add.w	sl, sp, #4
  402320:	e009      	b.n	402336 <__fputwc+0x4a>
  402322:	6823      	ldr	r3, [r4, #0]
  402324:	1c5a      	adds	r2, r3, #1
  402326:	6022      	str	r2, [r4, #0]
  402328:	f883 e000 	strb.w	lr, [r3]
  40232c:	3501      	adds	r5, #1
  40232e:	42b5      	cmp	r5, r6
  402330:	d227      	bcs.n	402382 <__fputwc+0x96>
  402332:	f815 e00a 	ldrb.w	lr, [r5, sl]
  402336:	68a3      	ldr	r3, [r4, #8]
  402338:	3b01      	subs	r3, #1
  40233a:	2b00      	cmp	r3, #0
  40233c:	60a3      	str	r3, [r4, #8]
  40233e:	daf0      	bge.n	402322 <__fputwc+0x36>
  402340:	69a7      	ldr	r7, [r4, #24]
  402342:	42bb      	cmp	r3, r7
  402344:	4671      	mov	r1, lr
  402346:	4622      	mov	r2, r4
  402348:	4640      	mov	r0, r8
  40234a:	db02      	blt.n	402352 <__fputwc+0x66>
  40234c:	f1be 0f0a 	cmp.w	lr, #10
  402350:	d1e7      	bne.n	402322 <__fputwc+0x36>
  402352:	f001 f9db 	bl	40370c <__swbuf_r>
  402356:	1c43      	adds	r3, r0, #1
  402358:	d1e8      	bne.n	40232c <__fputwc+0x40>
  40235a:	b002      	add	sp, #8
  40235c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  402360:	89a3      	ldrh	r3, [r4, #12]
  402362:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  402366:	81a3      	strh	r3, [r4, #12]
  402368:	b002      	add	sp, #8
  40236a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40236e:	f109 33ff 	add.w	r3, r9, #4294967295
  402372:	2bfe      	cmp	r3, #254	; 0xfe
  402374:	d8c4      	bhi.n	402300 <__fputwc+0x14>
  402376:	fa5f fe89 	uxtb.w	lr, r9
  40237a:	4606      	mov	r6, r0
  40237c:	f88d e004 	strb.w	lr, [sp, #4]
  402380:	e7cb      	b.n	40231a <__fputwc+0x2e>
  402382:	4648      	mov	r0, r9
  402384:	b002      	add	sp, #8
  402386:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40238a:	bf00      	nop

0040238c <_fputwc_r>:
  40238c:	b530      	push	{r4, r5, lr}
  40238e:	6e53      	ldr	r3, [r2, #100]	; 0x64
  402390:	f013 0f01 	tst.w	r3, #1
  402394:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
  402398:	4614      	mov	r4, r2
  40239a:	b083      	sub	sp, #12
  40239c:	4605      	mov	r5, r0
  40239e:	b29a      	uxth	r2, r3
  4023a0:	d101      	bne.n	4023a6 <_fputwc_r+0x1a>
  4023a2:	0590      	lsls	r0, r2, #22
  4023a4:	d51c      	bpl.n	4023e0 <_fputwc_r+0x54>
  4023a6:	0490      	lsls	r0, r2, #18
  4023a8:	d406      	bmi.n	4023b8 <_fputwc_r+0x2c>
  4023aa:	6e62      	ldr	r2, [r4, #100]	; 0x64
  4023ac:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  4023b0:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  4023b4:	81a3      	strh	r3, [r4, #12]
  4023b6:	6662      	str	r2, [r4, #100]	; 0x64
  4023b8:	4628      	mov	r0, r5
  4023ba:	4622      	mov	r2, r4
  4023bc:	f7ff ff96 	bl	4022ec <__fputwc>
  4023c0:	6e63      	ldr	r3, [r4, #100]	; 0x64
  4023c2:	07da      	lsls	r2, r3, #31
  4023c4:	4605      	mov	r5, r0
  4023c6:	d402      	bmi.n	4023ce <_fputwc_r+0x42>
  4023c8:	89a3      	ldrh	r3, [r4, #12]
  4023ca:	059b      	lsls	r3, r3, #22
  4023cc:	d502      	bpl.n	4023d4 <_fputwc_r+0x48>
  4023ce:	4628      	mov	r0, r5
  4023d0:	b003      	add	sp, #12
  4023d2:	bd30      	pop	{r4, r5, pc}
  4023d4:	6da0      	ldr	r0, [r4, #88]	; 0x58
  4023d6:	f000 faf9 	bl	4029cc <__retarget_lock_release_recursive>
  4023da:	4628      	mov	r0, r5
  4023dc:	b003      	add	sp, #12
  4023de:	bd30      	pop	{r4, r5, pc}
  4023e0:	6da0      	ldr	r0, [r4, #88]	; 0x58
  4023e2:	9101      	str	r1, [sp, #4]
  4023e4:	f000 faf0 	bl	4029c8 <__retarget_lock_acquire_recursive>
  4023e8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4023ec:	9901      	ldr	r1, [sp, #4]
  4023ee:	b29a      	uxth	r2, r3
  4023f0:	e7d9      	b.n	4023a6 <_fputwc_r+0x1a>
  4023f2:	bf00      	nop

004023f4 <_malloc_trim_r>:
  4023f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4023f6:	4f24      	ldr	r7, [pc, #144]	; (402488 <_malloc_trim_r+0x94>)
  4023f8:	460c      	mov	r4, r1
  4023fa:	4606      	mov	r6, r0
  4023fc:	f000 ff7e 	bl	4032fc <__malloc_lock>
  402400:	68bb      	ldr	r3, [r7, #8]
  402402:	685d      	ldr	r5, [r3, #4]
  402404:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  402408:	310f      	adds	r1, #15
  40240a:	f025 0503 	bic.w	r5, r5, #3
  40240e:	4429      	add	r1, r5
  402410:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  402414:	f021 010f 	bic.w	r1, r1, #15
  402418:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  40241c:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  402420:	db07      	blt.n	402432 <_malloc_trim_r+0x3e>
  402422:	2100      	movs	r1, #0
  402424:	4630      	mov	r0, r6
  402426:	f001 f91b 	bl	403660 <_sbrk_r>
  40242a:	68bb      	ldr	r3, [r7, #8]
  40242c:	442b      	add	r3, r5
  40242e:	4298      	cmp	r0, r3
  402430:	d004      	beq.n	40243c <_malloc_trim_r+0x48>
  402432:	4630      	mov	r0, r6
  402434:	f000 ff68 	bl	403308 <__malloc_unlock>
  402438:	2000      	movs	r0, #0
  40243a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40243c:	4261      	negs	r1, r4
  40243e:	4630      	mov	r0, r6
  402440:	f001 f90e 	bl	403660 <_sbrk_r>
  402444:	3001      	adds	r0, #1
  402446:	d00d      	beq.n	402464 <_malloc_trim_r+0x70>
  402448:	4b10      	ldr	r3, [pc, #64]	; (40248c <_malloc_trim_r+0x98>)
  40244a:	68ba      	ldr	r2, [r7, #8]
  40244c:	6819      	ldr	r1, [r3, #0]
  40244e:	1b2d      	subs	r5, r5, r4
  402450:	f045 0501 	orr.w	r5, r5, #1
  402454:	4630      	mov	r0, r6
  402456:	1b09      	subs	r1, r1, r4
  402458:	6055      	str	r5, [r2, #4]
  40245a:	6019      	str	r1, [r3, #0]
  40245c:	f000 ff54 	bl	403308 <__malloc_unlock>
  402460:	2001      	movs	r0, #1
  402462:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  402464:	2100      	movs	r1, #0
  402466:	4630      	mov	r0, r6
  402468:	f001 f8fa 	bl	403660 <_sbrk_r>
  40246c:	68ba      	ldr	r2, [r7, #8]
  40246e:	1a83      	subs	r3, r0, r2
  402470:	2b0f      	cmp	r3, #15
  402472:	ddde      	ble.n	402432 <_malloc_trim_r+0x3e>
  402474:	4c06      	ldr	r4, [pc, #24]	; (402490 <_malloc_trim_r+0x9c>)
  402476:	4905      	ldr	r1, [pc, #20]	; (40248c <_malloc_trim_r+0x98>)
  402478:	6824      	ldr	r4, [r4, #0]
  40247a:	f043 0301 	orr.w	r3, r3, #1
  40247e:	1b00      	subs	r0, r0, r4
  402480:	6053      	str	r3, [r2, #4]
  402482:	6008      	str	r0, [r1, #0]
  402484:	e7d5      	b.n	402432 <_malloc_trim_r+0x3e>
  402486:	bf00      	nop
  402488:	204005a8 	.word	0x204005a8
  40248c:	20400a4c 	.word	0x20400a4c
  402490:	204009b0 	.word	0x204009b0

00402494 <_free_r>:
  402494:	2900      	cmp	r1, #0
  402496:	d044      	beq.n	402522 <_free_r+0x8e>
  402498:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40249c:	460d      	mov	r5, r1
  40249e:	4680      	mov	r8, r0
  4024a0:	f000 ff2c 	bl	4032fc <__malloc_lock>
  4024a4:	f855 7c04 	ldr.w	r7, [r5, #-4]
  4024a8:	4969      	ldr	r1, [pc, #420]	; (402650 <_free_r+0x1bc>)
  4024aa:	f027 0301 	bic.w	r3, r7, #1
  4024ae:	f1a5 0408 	sub.w	r4, r5, #8
  4024b2:	18e2      	adds	r2, r4, r3
  4024b4:	688e      	ldr	r6, [r1, #8]
  4024b6:	6850      	ldr	r0, [r2, #4]
  4024b8:	42b2      	cmp	r2, r6
  4024ba:	f020 0003 	bic.w	r0, r0, #3
  4024be:	d05e      	beq.n	40257e <_free_r+0xea>
  4024c0:	07fe      	lsls	r6, r7, #31
  4024c2:	6050      	str	r0, [r2, #4]
  4024c4:	d40b      	bmi.n	4024de <_free_r+0x4a>
  4024c6:	f855 7c08 	ldr.w	r7, [r5, #-8]
  4024ca:	1be4      	subs	r4, r4, r7
  4024cc:	f101 0e08 	add.w	lr, r1, #8
  4024d0:	68a5      	ldr	r5, [r4, #8]
  4024d2:	4575      	cmp	r5, lr
  4024d4:	443b      	add	r3, r7
  4024d6:	d06d      	beq.n	4025b4 <_free_r+0x120>
  4024d8:	68e7      	ldr	r7, [r4, #12]
  4024da:	60ef      	str	r7, [r5, #12]
  4024dc:	60bd      	str	r5, [r7, #8]
  4024de:	1815      	adds	r5, r2, r0
  4024e0:	686d      	ldr	r5, [r5, #4]
  4024e2:	07ed      	lsls	r5, r5, #31
  4024e4:	d53e      	bpl.n	402564 <_free_r+0xd0>
  4024e6:	f043 0201 	orr.w	r2, r3, #1
  4024ea:	6062      	str	r2, [r4, #4]
  4024ec:	50e3      	str	r3, [r4, r3]
  4024ee:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  4024f2:	d217      	bcs.n	402524 <_free_r+0x90>
  4024f4:	08db      	lsrs	r3, r3, #3
  4024f6:	1c58      	adds	r0, r3, #1
  4024f8:	109a      	asrs	r2, r3, #2
  4024fa:	684d      	ldr	r5, [r1, #4]
  4024fc:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  402500:	60a7      	str	r7, [r4, #8]
  402502:	2301      	movs	r3, #1
  402504:	4093      	lsls	r3, r2
  402506:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
  40250a:	432b      	orrs	r3, r5
  40250c:	3a08      	subs	r2, #8
  40250e:	60e2      	str	r2, [r4, #12]
  402510:	604b      	str	r3, [r1, #4]
  402512:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  402516:	60fc      	str	r4, [r7, #12]
  402518:	4640      	mov	r0, r8
  40251a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  40251e:	f000 bef3 	b.w	403308 <__malloc_unlock>
  402522:	4770      	bx	lr
  402524:	0a5a      	lsrs	r2, r3, #9
  402526:	2a04      	cmp	r2, #4
  402528:	d852      	bhi.n	4025d0 <_free_r+0x13c>
  40252a:	099a      	lsrs	r2, r3, #6
  40252c:	f102 0739 	add.w	r7, r2, #57	; 0x39
  402530:	00ff      	lsls	r7, r7, #3
  402532:	f102 0538 	add.w	r5, r2, #56	; 0x38
  402536:	19c8      	adds	r0, r1, r7
  402538:	59ca      	ldr	r2, [r1, r7]
  40253a:	3808      	subs	r0, #8
  40253c:	4290      	cmp	r0, r2
  40253e:	d04f      	beq.n	4025e0 <_free_r+0x14c>
  402540:	6851      	ldr	r1, [r2, #4]
  402542:	f021 0103 	bic.w	r1, r1, #3
  402546:	428b      	cmp	r3, r1
  402548:	d232      	bcs.n	4025b0 <_free_r+0x11c>
  40254a:	6892      	ldr	r2, [r2, #8]
  40254c:	4290      	cmp	r0, r2
  40254e:	d1f7      	bne.n	402540 <_free_r+0xac>
  402550:	68c3      	ldr	r3, [r0, #12]
  402552:	60a0      	str	r0, [r4, #8]
  402554:	60e3      	str	r3, [r4, #12]
  402556:	609c      	str	r4, [r3, #8]
  402558:	60c4      	str	r4, [r0, #12]
  40255a:	4640      	mov	r0, r8
  40255c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  402560:	f000 bed2 	b.w	403308 <__malloc_unlock>
  402564:	6895      	ldr	r5, [r2, #8]
  402566:	4f3b      	ldr	r7, [pc, #236]	; (402654 <_free_r+0x1c0>)
  402568:	42bd      	cmp	r5, r7
  40256a:	4403      	add	r3, r0
  40256c:	d040      	beq.n	4025f0 <_free_r+0x15c>
  40256e:	68d0      	ldr	r0, [r2, #12]
  402570:	60e8      	str	r0, [r5, #12]
  402572:	f043 0201 	orr.w	r2, r3, #1
  402576:	6085      	str	r5, [r0, #8]
  402578:	6062      	str	r2, [r4, #4]
  40257a:	50e3      	str	r3, [r4, r3]
  40257c:	e7b7      	b.n	4024ee <_free_r+0x5a>
  40257e:	07ff      	lsls	r7, r7, #31
  402580:	4403      	add	r3, r0
  402582:	d407      	bmi.n	402594 <_free_r+0x100>
  402584:	f855 2c08 	ldr.w	r2, [r5, #-8]
  402588:	1aa4      	subs	r4, r4, r2
  40258a:	4413      	add	r3, r2
  40258c:	68a0      	ldr	r0, [r4, #8]
  40258e:	68e2      	ldr	r2, [r4, #12]
  402590:	60c2      	str	r2, [r0, #12]
  402592:	6090      	str	r0, [r2, #8]
  402594:	4a30      	ldr	r2, [pc, #192]	; (402658 <_free_r+0x1c4>)
  402596:	6812      	ldr	r2, [r2, #0]
  402598:	f043 0001 	orr.w	r0, r3, #1
  40259c:	4293      	cmp	r3, r2
  40259e:	6060      	str	r0, [r4, #4]
  4025a0:	608c      	str	r4, [r1, #8]
  4025a2:	d3b9      	bcc.n	402518 <_free_r+0x84>
  4025a4:	4b2d      	ldr	r3, [pc, #180]	; (40265c <_free_r+0x1c8>)
  4025a6:	4640      	mov	r0, r8
  4025a8:	6819      	ldr	r1, [r3, #0]
  4025aa:	f7ff ff23 	bl	4023f4 <_malloc_trim_r>
  4025ae:	e7b3      	b.n	402518 <_free_r+0x84>
  4025b0:	4610      	mov	r0, r2
  4025b2:	e7cd      	b.n	402550 <_free_r+0xbc>
  4025b4:	1811      	adds	r1, r2, r0
  4025b6:	6849      	ldr	r1, [r1, #4]
  4025b8:	07c9      	lsls	r1, r1, #31
  4025ba:	d444      	bmi.n	402646 <_free_r+0x1b2>
  4025bc:	6891      	ldr	r1, [r2, #8]
  4025be:	68d2      	ldr	r2, [r2, #12]
  4025c0:	60ca      	str	r2, [r1, #12]
  4025c2:	4403      	add	r3, r0
  4025c4:	f043 0001 	orr.w	r0, r3, #1
  4025c8:	6091      	str	r1, [r2, #8]
  4025ca:	6060      	str	r0, [r4, #4]
  4025cc:	50e3      	str	r3, [r4, r3]
  4025ce:	e7a3      	b.n	402518 <_free_r+0x84>
  4025d0:	2a14      	cmp	r2, #20
  4025d2:	d816      	bhi.n	402602 <_free_r+0x16e>
  4025d4:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  4025d8:	00ff      	lsls	r7, r7, #3
  4025da:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  4025de:	e7aa      	b.n	402536 <_free_r+0xa2>
  4025e0:	10aa      	asrs	r2, r5, #2
  4025e2:	2301      	movs	r3, #1
  4025e4:	684d      	ldr	r5, [r1, #4]
  4025e6:	4093      	lsls	r3, r2
  4025e8:	432b      	orrs	r3, r5
  4025ea:	604b      	str	r3, [r1, #4]
  4025ec:	4603      	mov	r3, r0
  4025ee:	e7b0      	b.n	402552 <_free_r+0xbe>
  4025f0:	f043 0201 	orr.w	r2, r3, #1
  4025f4:	614c      	str	r4, [r1, #20]
  4025f6:	610c      	str	r4, [r1, #16]
  4025f8:	60e5      	str	r5, [r4, #12]
  4025fa:	60a5      	str	r5, [r4, #8]
  4025fc:	6062      	str	r2, [r4, #4]
  4025fe:	50e3      	str	r3, [r4, r3]
  402600:	e78a      	b.n	402518 <_free_r+0x84>
  402602:	2a54      	cmp	r2, #84	; 0x54
  402604:	d806      	bhi.n	402614 <_free_r+0x180>
  402606:	0b1a      	lsrs	r2, r3, #12
  402608:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  40260c:	00ff      	lsls	r7, r7, #3
  40260e:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  402612:	e790      	b.n	402536 <_free_r+0xa2>
  402614:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  402618:	d806      	bhi.n	402628 <_free_r+0x194>
  40261a:	0bda      	lsrs	r2, r3, #15
  40261c:	f102 0778 	add.w	r7, r2, #120	; 0x78
  402620:	00ff      	lsls	r7, r7, #3
  402622:	f102 0577 	add.w	r5, r2, #119	; 0x77
  402626:	e786      	b.n	402536 <_free_r+0xa2>
  402628:	f240 5054 	movw	r0, #1364	; 0x554
  40262c:	4282      	cmp	r2, r0
  40262e:	d806      	bhi.n	40263e <_free_r+0x1aa>
  402630:	0c9a      	lsrs	r2, r3, #18
  402632:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  402636:	00ff      	lsls	r7, r7, #3
  402638:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  40263c:	e77b      	b.n	402536 <_free_r+0xa2>
  40263e:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  402642:	257e      	movs	r5, #126	; 0x7e
  402644:	e777      	b.n	402536 <_free_r+0xa2>
  402646:	f043 0101 	orr.w	r1, r3, #1
  40264a:	6061      	str	r1, [r4, #4]
  40264c:	6013      	str	r3, [r2, #0]
  40264e:	e763      	b.n	402518 <_free_r+0x84>
  402650:	204005a8 	.word	0x204005a8
  402654:	204005b0 	.word	0x204005b0
  402658:	204009b4 	.word	0x204009b4
  40265c:	20400a7c 	.word	0x20400a7c

00402660 <__sfvwrite_r>:
  402660:	6893      	ldr	r3, [r2, #8]
  402662:	2b00      	cmp	r3, #0
  402664:	d073      	beq.n	40274e <__sfvwrite_r+0xee>
  402666:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40266a:	898b      	ldrh	r3, [r1, #12]
  40266c:	b083      	sub	sp, #12
  40266e:	460c      	mov	r4, r1
  402670:	0719      	lsls	r1, r3, #28
  402672:	9000      	str	r0, [sp, #0]
  402674:	4616      	mov	r6, r2
  402676:	d526      	bpl.n	4026c6 <__sfvwrite_r+0x66>
  402678:	6922      	ldr	r2, [r4, #16]
  40267a:	b322      	cbz	r2, 4026c6 <__sfvwrite_r+0x66>
  40267c:	f013 0002 	ands.w	r0, r3, #2
  402680:	6835      	ldr	r5, [r6, #0]
  402682:	d02c      	beq.n	4026de <__sfvwrite_r+0x7e>
  402684:	f04f 0900 	mov.w	r9, #0
  402688:	4fb0      	ldr	r7, [pc, #704]	; (40294c <__sfvwrite_r+0x2ec>)
  40268a:	46c8      	mov	r8, r9
  40268c:	46b2      	mov	sl, r6
  40268e:	45b8      	cmp	r8, r7
  402690:	4643      	mov	r3, r8
  402692:	464a      	mov	r2, r9
  402694:	bf28      	it	cs
  402696:	463b      	movcs	r3, r7
  402698:	9800      	ldr	r0, [sp, #0]
  40269a:	f1b8 0f00 	cmp.w	r8, #0
  40269e:	d050      	beq.n	402742 <__sfvwrite_r+0xe2>
  4026a0:	69e1      	ldr	r1, [r4, #28]
  4026a2:	6a66      	ldr	r6, [r4, #36]	; 0x24
  4026a4:	47b0      	blx	r6
  4026a6:	2800      	cmp	r0, #0
  4026a8:	dd58      	ble.n	40275c <__sfvwrite_r+0xfc>
  4026aa:	f8da 3008 	ldr.w	r3, [sl, #8]
  4026ae:	1a1b      	subs	r3, r3, r0
  4026b0:	4481      	add	r9, r0
  4026b2:	eba8 0800 	sub.w	r8, r8, r0
  4026b6:	f8ca 3008 	str.w	r3, [sl, #8]
  4026ba:	2b00      	cmp	r3, #0
  4026bc:	d1e7      	bne.n	40268e <__sfvwrite_r+0x2e>
  4026be:	2000      	movs	r0, #0
  4026c0:	b003      	add	sp, #12
  4026c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4026c6:	4621      	mov	r1, r4
  4026c8:	9800      	ldr	r0, [sp, #0]
  4026ca:	f7ff fc51 	bl	401f70 <__swsetup_r>
  4026ce:	2800      	cmp	r0, #0
  4026d0:	f040 8133 	bne.w	40293a <__sfvwrite_r+0x2da>
  4026d4:	89a3      	ldrh	r3, [r4, #12]
  4026d6:	6835      	ldr	r5, [r6, #0]
  4026d8:	f013 0002 	ands.w	r0, r3, #2
  4026dc:	d1d2      	bne.n	402684 <__sfvwrite_r+0x24>
  4026de:	f013 0901 	ands.w	r9, r3, #1
  4026e2:	d145      	bne.n	402770 <__sfvwrite_r+0x110>
  4026e4:	464f      	mov	r7, r9
  4026e6:	9601      	str	r6, [sp, #4]
  4026e8:	b337      	cbz	r7, 402738 <__sfvwrite_r+0xd8>
  4026ea:	059a      	lsls	r2, r3, #22
  4026ec:	f8d4 8008 	ldr.w	r8, [r4, #8]
  4026f0:	f140 8083 	bpl.w	4027fa <__sfvwrite_r+0x19a>
  4026f4:	4547      	cmp	r7, r8
  4026f6:	46c3      	mov	fp, r8
  4026f8:	f0c0 80ab 	bcc.w	402852 <__sfvwrite_r+0x1f2>
  4026fc:	f413 6f90 	tst.w	r3, #1152	; 0x480
  402700:	f040 80ac 	bne.w	40285c <__sfvwrite_r+0x1fc>
  402704:	6820      	ldr	r0, [r4, #0]
  402706:	46ba      	mov	sl, r7
  402708:	465a      	mov	r2, fp
  40270a:	4649      	mov	r1, r9
  40270c:	f000 fd92 	bl	403234 <memmove>
  402710:	68a2      	ldr	r2, [r4, #8]
  402712:	6823      	ldr	r3, [r4, #0]
  402714:	eba2 0208 	sub.w	r2, r2, r8
  402718:	445b      	add	r3, fp
  40271a:	60a2      	str	r2, [r4, #8]
  40271c:	6023      	str	r3, [r4, #0]
  40271e:	9a01      	ldr	r2, [sp, #4]
  402720:	6893      	ldr	r3, [r2, #8]
  402722:	eba3 030a 	sub.w	r3, r3, sl
  402726:	44d1      	add	r9, sl
  402728:	eba7 070a 	sub.w	r7, r7, sl
  40272c:	6093      	str	r3, [r2, #8]
  40272e:	2b00      	cmp	r3, #0
  402730:	d0c5      	beq.n	4026be <__sfvwrite_r+0x5e>
  402732:	89a3      	ldrh	r3, [r4, #12]
  402734:	2f00      	cmp	r7, #0
  402736:	d1d8      	bne.n	4026ea <__sfvwrite_r+0x8a>
  402738:	f8d5 9000 	ldr.w	r9, [r5]
  40273c:	686f      	ldr	r7, [r5, #4]
  40273e:	3508      	adds	r5, #8
  402740:	e7d2      	b.n	4026e8 <__sfvwrite_r+0x88>
  402742:	f8d5 9000 	ldr.w	r9, [r5]
  402746:	f8d5 8004 	ldr.w	r8, [r5, #4]
  40274a:	3508      	adds	r5, #8
  40274c:	e79f      	b.n	40268e <__sfvwrite_r+0x2e>
  40274e:	2000      	movs	r0, #0
  402750:	4770      	bx	lr
  402752:	4621      	mov	r1, r4
  402754:	9800      	ldr	r0, [sp, #0]
  402756:	f7ff fd1f 	bl	402198 <_fflush_r>
  40275a:	b370      	cbz	r0, 4027ba <__sfvwrite_r+0x15a>
  40275c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402760:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  402764:	f04f 30ff 	mov.w	r0, #4294967295
  402768:	81a3      	strh	r3, [r4, #12]
  40276a:	b003      	add	sp, #12
  40276c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402770:	4681      	mov	r9, r0
  402772:	4633      	mov	r3, r6
  402774:	464e      	mov	r6, r9
  402776:	46a8      	mov	r8, r5
  402778:	469a      	mov	sl, r3
  40277a:	464d      	mov	r5, r9
  40277c:	b34e      	cbz	r6, 4027d2 <__sfvwrite_r+0x172>
  40277e:	b380      	cbz	r0, 4027e2 <__sfvwrite_r+0x182>
  402780:	6820      	ldr	r0, [r4, #0]
  402782:	6923      	ldr	r3, [r4, #16]
  402784:	6962      	ldr	r2, [r4, #20]
  402786:	45b1      	cmp	r9, r6
  402788:	46cb      	mov	fp, r9
  40278a:	bf28      	it	cs
  40278c:	46b3      	movcs	fp, r6
  40278e:	4298      	cmp	r0, r3
  402790:	465f      	mov	r7, fp
  402792:	d904      	bls.n	40279e <__sfvwrite_r+0x13e>
  402794:	68a3      	ldr	r3, [r4, #8]
  402796:	4413      	add	r3, r2
  402798:	459b      	cmp	fp, r3
  40279a:	f300 80a6 	bgt.w	4028ea <__sfvwrite_r+0x28a>
  40279e:	4593      	cmp	fp, r2
  4027a0:	db4b      	blt.n	40283a <__sfvwrite_r+0x1da>
  4027a2:	4613      	mov	r3, r2
  4027a4:	6a67      	ldr	r7, [r4, #36]	; 0x24
  4027a6:	69e1      	ldr	r1, [r4, #28]
  4027a8:	9800      	ldr	r0, [sp, #0]
  4027aa:	462a      	mov	r2, r5
  4027ac:	47b8      	blx	r7
  4027ae:	1e07      	subs	r7, r0, #0
  4027b0:	ddd4      	ble.n	40275c <__sfvwrite_r+0xfc>
  4027b2:	ebb9 0907 	subs.w	r9, r9, r7
  4027b6:	d0cc      	beq.n	402752 <__sfvwrite_r+0xf2>
  4027b8:	2001      	movs	r0, #1
  4027ba:	f8da 3008 	ldr.w	r3, [sl, #8]
  4027be:	1bdb      	subs	r3, r3, r7
  4027c0:	443d      	add	r5, r7
  4027c2:	1bf6      	subs	r6, r6, r7
  4027c4:	f8ca 3008 	str.w	r3, [sl, #8]
  4027c8:	2b00      	cmp	r3, #0
  4027ca:	f43f af78 	beq.w	4026be <__sfvwrite_r+0x5e>
  4027ce:	2e00      	cmp	r6, #0
  4027d0:	d1d5      	bne.n	40277e <__sfvwrite_r+0x11e>
  4027d2:	f108 0308 	add.w	r3, r8, #8
  4027d6:	e913 0060 	ldmdb	r3, {r5, r6}
  4027da:	4698      	mov	r8, r3
  4027dc:	3308      	adds	r3, #8
  4027de:	2e00      	cmp	r6, #0
  4027e0:	d0f9      	beq.n	4027d6 <__sfvwrite_r+0x176>
  4027e2:	4632      	mov	r2, r6
  4027e4:	210a      	movs	r1, #10
  4027e6:	4628      	mov	r0, r5
  4027e8:	f000 fc3a 	bl	403060 <memchr>
  4027ec:	2800      	cmp	r0, #0
  4027ee:	f000 80a1 	beq.w	402934 <__sfvwrite_r+0x2d4>
  4027f2:	3001      	adds	r0, #1
  4027f4:	eba0 0905 	sub.w	r9, r0, r5
  4027f8:	e7c2      	b.n	402780 <__sfvwrite_r+0x120>
  4027fa:	6820      	ldr	r0, [r4, #0]
  4027fc:	6923      	ldr	r3, [r4, #16]
  4027fe:	4298      	cmp	r0, r3
  402800:	d802      	bhi.n	402808 <__sfvwrite_r+0x1a8>
  402802:	6963      	ldr	r3, [r4, #20]
  402804:	429f      	cmp	r7, r3
  402806:	d25d      	bcs.n	4028c4 <__sfvwrite_r+0x264>
  402808:	45b8      	cmp	r8, r7
  40280a:	bf28      	it	cs
  40280c:	46b8      	movcs	r8, r7
  40280e:	4642      	mov	r2, r8
  402810:	4649      	mov	r1, r9
  402812:	f000 fd0f 	bl	403234 <memmove>
  402816:	68a3      	ldr	r3, [r4, #8]
  402818:	6822      	ldr	r2, [r4, #0]
  40281a:	eba3 0308 	sub.w	r3, r3, r8
  40281e:	4442      	add	r2, r8
  402820:	60a3      	str	r3, [r4, #8]
  402822:	6022      	str	r2, [r4, #0]
  402824:	b10b      	cbz	r3, 40282a <__sfvwrite_r+0x1ca>
  402826:	46c2      	mov	sl, r8
  402828:	e779      	b.n	40271e <__sfvwrite_r+0xbe>
  40282a:	4621      	mov	r1, r4
  40282c:	9800      	ldr	r0, [sp, #0]
  40282e:	f7ff fcb3 	bl	402198 <_fflush_r>
  402832:	2800      	cmp	r0, #0
  402834:	d192      	bne.n	40275c <__sfvwrite_r+0xfc>
  402836:	46c2      	mov	sl, r8
  402838:	e771      	b.n	40271e <__sfvwrite_r+0xbe>
  40283a:	465a      	mov	r2, fp
  40283c:	4629      	mov	r1, r5
  40283e:	f000 fcf9 	bl	403234 <memmove>
  402842:	68a2      	ldr	r2, [r4, #8]
  402844:	6823      	ldr	r3, [r4, #0]
  402846:	eba2 020b 	sub.w	r2, r2, fp
  40284a:	445b      	add	r3, fp
  40284c:	60a2      	str	r2, [r4, #8]
  40284e:	6023      	str	r3, [r4, #0]
  402850:	e7af      	b.n	4027b2 <__sfvwrite_r+0x152>
  402852:	6820      	ldr	r0, [r4, #0]
  402854:	46b8      	mov	r8, r7
  402856:	46ba      	mov	sl, r7
  402858:	46bb      	mov	fp, r7
  40285a:	e755      	b.n	402708 <__sfvwrite_r+0xa8>
  40285c:	6962      	ldr	r2, [r4, #20]
  40285e:	6820      	ldr	r0, [r4, #0]
  402860:	6921      	ldr	r1, [r4, #16]
  402862:	eb02 0842 	add.w	r8, r2, r2, lsl #1
  402866:	eba0 0a01 	sub.w	sl, r0, r1
  40286a:	eb08 78d8 	add.w	r8, r8, r8, lsr #31
  40286e:	f10a 0001 	add.w	r0, sl, #1
  402872:	ea4f 0868 	mov.w	r8, r8, asr #1
  402876:	4438      	add	r0, r7
  402878:	4540      	cmp	r0, r8
  40287a:	4642      	mov	r2, r8
  40287c:	bf84      	itt	hi
  40287e:	4680      	movhi	r8, r0
  402880:	4642      	movhi	r2, r8
  402882:	055b      	lsls	r3, r3, #21
  402884:	d544      	bpl.n	402910 <__sfvwrite_r+0x2b0>
  402886:	4611      	mov	r1, r2
  402888:	9800      	ldr	r0, [sp, #0]
  40288a:	f000 f921 	bl	402ad0 <_malloc_r>
  40288e:	4683      	mov	fp, r0
  402890:	2800      	cmp	r0, #0
  402892:	d055      	beq.n	402940 <__sfvwrite_r+0x2e0>
  402894:	4652      	mov	r2, sl
  402896:	6921      	ldr	r1, [r4, #16]
  402898:	f000 fc32 	bl	403100 <memcpy>
  40289c:	89a3      	ldrh	r3, [r4, #12]
  40289e:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
  4028a2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  4028a6:	81a3      	strh	r3, [r4, #12]
  4028a8:	eb0b 000a 	add.w	r0, fp, sl
  4028ac:	eba8 030a 	sub.w	r3, r8, sl
  4028b0:	f8c4 b010 	str.w	fp, [r4, #16]
  4028b4:	f8c4 8014 	str.w	r8, [r4, #20]
  4028b8:	6020      	str	r0, [r4, #0]
  4028ba:	60a3      	str	r3, [r4, #8]
  4028bc:	46b8      	mov	r8, r7
  4028be:	46ba      	mov	sl, r7
  4028c0:	46bb      	mov	fp, r7
  4028c2:	e721      	b.n	402708 <__sfvwrite_r+0xa8>
  4028c4:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
  4028c8:	42b9      	cmp	r1, r7
  4028ca:	bf28      	it	cs
  4028cc:	4639      	movcs	r1, r7
  4028ce:	464a      	mov	r2, r9
  4028d0:	fb91 f1f3 	sdiv	r1, r1, r3
  4028d4:	9800      	ldr	r0, [sp, #0]
  4028d6:	6a66      	ldr	r6, [r4, #36]	; 0x24
  4028d8:	fb03 f301 	mul.w	r3, r3, r1
  4028dc:	69e1      	ldr	r1, [r4, #28]
  4028de:	47b0      	blx	r6
  4028e0:	f1b0 0a00 	subs.w	sl, r0, #0
  4028e4:	f73f af1b 	bgt.w	40271e <__sfvwrite_r+0xbe>
  4028e8:	e738      	b.n	40275c <__sfvwrite_r+0xfc>
  4028ea:	461a      	mov	r2, r3
  4028ec:	4629      	mov	r1, r5
  4028ee:	9301      	str	r3, [sp, #4]
  4028f0:	f000 fca0 	bl	403234 <memmove>
  4028f4:	6822      	ldr	r2, [r4, #0]
  4028f6:	9b01      	ldr	r3, [sp, #4]
  4028f8:	9800      	ldr	r0, [sp, #0]
  4028fa:	441a      	add	r2, r3
  4028fc:	6022      	str	r2, [r4, #0]
  4028fe:	4621      	mov	r1, r4
  402900:	f7ff fc4a 	bl	402198 <_fflush_r>
  402904:	9b01      	ldr	r3, [sp, #4]
  402906:	2800      	cmp	r0, #0
  402908:	f47f af28 	bne.w	40275c <__sfvwrite_r+0xfc>
  40290c:	461f      	mov	r7, r3
  40290e:	e750      	b.n	4027b2 <__sfvwrite_r+0x152>
  402910:	9800      	ldr	r0, [sp, #0]
  402912:	f000 fcff 	bl	403314 <_realloc_r>
  402916:	4683      	mov	fp, r0
  402918:	2800      	cmp	r0, #0
  40291a:	d1c5      	bne.n	4028a8 <__sfvwrite_r+0x248>
  40291c:	9d00      	ldr	r5, [sp, #0]
  40291e:	6921      	ldr	r1, [r4, #16]
  402920:	4628      	mov	r0, r5
  402922:	f7ff fdb7 	bl	402494 <_free_r>
  402926:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40292a:	220c      	movs	r2, #12
  40292c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  402930:	602a      	str	r2, [r5, #0]
  402932:	e715      	b.n	402760 <__sfvwrite_r+0x100>
  402934:	f106 0901 	add.w	r9, r6, #1
  402938:	e722      	b.n	402780 <__sfvwrite_r+0x120>
  40293a:	f04f 30ff 	mov.w	r0, #4294967295
  40293e:	e6bf      	b.n	4026c0 <__sfvwrite_r+0x60>
  402940:	9a00      	ldr	r2, [sp, #0]
  402942:	230c      	movs	r3, #12
  402944:	6013      	str	r3, [r2, #0]
  402946:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40294a:	e709      	b.n	402760 <__sfvwrite_r+0x100>
  40294c:	7ffffc00 	.word	0x7ffffc00

00402950 <_fwalk_reent>:
  402950:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  402954:	f510 7738 	adds.w	r7, r0, #736	; 0x2e0
  402958:	d01f      	beq.n	40299a <_fwalk_reent+0x4a>
  40295a:	4688      	mov	r8, r1
  40295c:	4606      	mov	r6, r0
  40295e:	f04f 0900 	mov.w	r9, #0
  402962:	687d      	ldr	r5, [r7, #4]
  402964:	68bc      	ldr	r4, [r7, #8]
  402966:	3d01      	subs	r5, #1
  402968:	d411      	bmi.n	40298e <_fwalk_reent+0x3e>
  40296a:	89a3      	ldrh	r3, [r4, #12]
  40296c:	2b01      	cmp	r3, #1
  40296e:	f105 35ff 	add.w	r5, r5, #4294967295
  402972:	d908      	bls.n	402986 <_fwalk_reent+0x36>
  402974:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
  402978:	3301      	adds	r3, #1
  40297a:	4621      	mov	r1, r4
  40297c:	4630      	mov	r0, r6
  40297e:	d002      	beq.n	402986 <_fwalk_reent+0x36>
  402980:	47c0      	blx	r8
  402982:	ea49 0900 	orr.w	r9, r9, r0
  402986:	1c6b      	adds	r3, r5, #1
  402988:	f104 0468 	add.w	r4, r4, #104	; 0x68
  40298c:	d1ed      	bne.n	40296a <_fwalk_reent+0x1a>
  40298e:	683f      	ldr	r7, [r7, #0]
  402990:	2f00      	cmp	r7, #0
  402992:	d1e6      	bne.n	402962 <_fwalk_reent+0x12>
  402994:	4648      	mov	r0, r9
  402996:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40299a:	46b9      	mov	r9, r7
  40299c:	4648      	mov	r0, r9
  40299e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4029a2:	bf00      	nop

004029a4 <__locale_mb_cur_max>:
  4029a4:	4b04      	ldr	r3, [pc, #16]	; (4029b8 <__locale_mb_cur_max+0x14>)
  4029a6:	4a05      	ldr	r2, [pc, #20]	; (4029bc <__locale_mb_cur_max+0x18>)
  4029a8:	681b      	ldr	r3, [r3, #0]
  4029aa:	6b5b      	ldr	r3, [r3, #52]	; 0x34
  4029ac:	2b00      	cmp	r3, #0
  4029ae:	bf08      	it	eq
  4029b0:	4613      	moveq	r3, r2
  4029b2:	f893 0128 	ldrb.w	r0, [r3, #296]	; 0x128
  4029b6:	4770      	bx	lr
  4029b8:	20400008 	.word	0x20400008
  4029bc:	2040043c 	.word	0x2040043c

004029c0 <__retarget_lock_init_recursive>:
  4029c0:	4770      	bx	lr
  4029c2:	bf00      	nop

004029c4 <__retarget_lock_close_recursive>:
  4029c4:	4770      	bx	lr
  4029c6:	bf00      	nop

004029c8 <__retarget_lock_acquire_recursive>:
  4029c8:	4770      	bx	lr
  4029ca:	bf00      	nop

004029cc <__retarget_lock_release_recursive>:
  4029cc:	4770      	bx	lr
  4029ce:	bf00      	nop

004029d0 <__swhatbuf_r>:
  4029d0:	b570      	push	{r4, r5, r6, lr}
  4029d2:	460c      	mov	r4, r1
  4029d4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  4029d8:	2900      	cmp	r1, #0
  4029da:	b090      	sub	sp, #64	; 0x40
  4029dc:	4615      	mov	r5, r2
  4029de:	461e      	mov	r6, r3
  4029e0:	db14      	blt.n	402a0c <__swhatbuf_r+0x3c>
  4029e2:	aa01      	add	r2, sp, #4
  4029e4:	f001 f80e 	bl	403a04 <_fstat_r>
  4029e8:	2800      	cmp	r0, #0
  4029ea:	db0f      	blt.n	402a0c <__swhatbuf_r+0x3c>
  4029ec:	9a02      	ldr	r2, [sp, #8]
  4029ee:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
  4029f2:	f5a2 5200 	sub.w	r2, r2, #8192	; 0x2000
  4029f6:	fab2 f282 	clz	r2, r2
  4029fa:	0952      	lsrs	r2, r2, #5
  4029fc:	f44f 6380 	mov.w	r3, #1024	; 0x400
  402a00:	f44f 6000 	mov.w	r0, #2048	; 0x800
  402a04:	6032      	str	r2, [r6, #0]
  402a06:	602b      	str	r3, [r5, #0]
  402a08:	b010      	add	sp, #64	; 0x40
  402a0a:	bd70      	pop	{r4, r5, r6, pc}
  402a0c:	89a2      	ldrh	r2, [r4, #12]
  402a0e:	2300      	movs	r3, #0
  402a10:	f012 0080 	ands.w	r0, r2, #128	; 0x80
  402a14:	6033      	str	r3, [r6, #0]
  402a16:	d004      	beq.n	402a22 <__swhatbuf_r+0x52>
  402a18:	2240      	movs	r2, #64	; 0x40
  402a1a:	4618      	mov	r0, r3
  402a1c:	602a      	str	r2, [r5, #0]
  402a1e:	b010      	add	sp, #64	; 0x40
  402a20:	bd70      	pop	{r4, r5, r6, pc}
  402a22:	f44f 6380 	mov.w	r3, #1024	; 0x400
  402a26:	602b      	str	r3, [r5, #0]
  402a28:	b010      	add	sp, #64	; 0x40
  402a2a:	bd70      	pop	{r4, r5, r6, pc}

00402a2c <__smakebuf_r>:
  402a2c:	898a      	ldrh	r2, [r1, #12]
  402a2e:	0792      	lsls	r2, r2, #30
  402a30:	460b      	mov	r3, r1
  402a32:	d506      	bpl.n	402a42 <__smakebuf_r+0x16>
  402a34:	f101 0243 	add.w	r2, r1, #67	; 0x43
  402a38:	2101      	movs	r1, #1
  402a3a:	601a      	str	r2, [r3, #0]
  402a3c:	611a      	str	r2, [r3, #16]
  402a3e:	6159      	str	r1, [r3, #20]
  402a40:	4770      	bx	lr
  402a42:	b5f0      	push	{r4, r5, r6, r7, lr}
  402a44:	b083      	sub	sp, #12
  402a46:	ab01      	add	r3, sp, #4
  402a48:	466a      	mov	r2, sp
  402a4a:	460c      	mov	r4, r1
  402a4c:	4606      	mov	r6, r0
  402a4e:	f7ff ffbf 	bl	4029d0 <__swhatbuf_r>
  402a52:	9900      	ldr	r1, [sp, #0]
  402a54:	4605      	mov	r5, r0
  402a56:	4630      	mov	r0, r6
  402a58:	f000 f83a 	bl	402ad0 <_malloc_r>
  402a5c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402a60:	b1d8      	cbz	r0, 402a9a <__smakebuf_r+0x6e>
  402a62:	9a01      	ldr	r2, [sp, #4]
  402a64:	4f15      	ldr	r7, [pc, #84]	; (402abc <__smakebuf_r+0x90>)
  402a66:	9900      	ldr	r1, [sp, #0]
  402a68:	63f7      	str	r7, [r6, #60]	; 0x3c
  402a6a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  402a6e:	81a3      	strh	r3, [r4, #12]
  402a70:	6020      	str	r0, [r4, #0]
  402a72:	6120      	str	r0, [r4, #16]
  402a74:	6161      	str	r1, [r4, #20]
  402a76:	b91a      	cbnz	r2, 402a80 <__smakebuf_r+0x54>
  402a78:	432b      	orrs	r3, r5
  402a7a:	81a3      	strh	r3, [r4, #12]
  402a7c:	b003      	add	sp, #12
  402a7e:	bdf0      	pop	{r4, r5, r6, r7, pc}
  402a80:	4630      	mov	r0, r6
  402a82:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  402a86:	f000 ffd1 	bl	403a2c <_isatty_r>
  402a8a:	b1a0      	cbz	r0, 402ab6 <__smakebuf_r+0x8a>
  402a8c:	89a3      	ldrh	r3, [r4, #12]
  402a8e:	f023 0303 	bic.w	r3, r3, #3
  402a92:	f043 0301 	orr.w	r3, r3, #1
  402a96:	b21b      	sxth	r3, r3
  402a98:	e7ee      	b.n	402a78 <__smakebuf_r+0x4c>
  402a9a:	059a      	lsls	r2, r3, #22
  402a9c:	d4ee      	bmi.n	402a7c <__smakebuf_r+0x50>
  402a9e:	f023 0303 	bic.w	r3, r3, #3
  402aa2:	f104 0243 	add.w	r2, r4, #67	; 0x43
  402aa6:	f043 0302 	orr.w	r3, r3, #2
  402aaa:	2101      	movs	r1, #1
  402aac:	81a3      	strh	r3, [r4, #12]
  402aae:	6022      	str	r2, [r4, #0]
  402ab0:	6122      	str	r2, [r4, #16]
  402ab2:	6161      	str	r1, [r4, #20]
  402ab4:	e7e2      	b.n	402a7c <__smakebuf_r+0x50>
  402ab6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402aba:	e7dd      	b.n	402a78 <__smakebuf_r+0x4c>
  402abc:	004021ed 	.word	0x004021ed

00402ac0 <malloc>:
  402ac0:	4b02      	ldr	r3, [pc, #8]	; (402acc <malloc+0xc>)
  402ac2:	4601      	mov	r1, r0
  402ac4:	6818      	ldr	r0, [r3, #0]
  402ac6:	f000 b803 	b.w	402ad0 <_malloc_r>
  402aca:	bf00      	nop
  402acc:	20400008 	.word	0x20400008

00402ad0 <_malloc_r>:
  402ad0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402ad4:	f101 060b 	add.w	r6, r1, #11
  402ad8:	2e16      	cmp	r6, #22
  402ada:	b083      	sub	sp, #12
  402adc:	4605      	mov	r5, r0
  402ade:	f240 809e 	bls.w	402c1e <_malloc_r+0x14e>
  402ae2:	f036 0607 	bics.w	r6, r6, #7
  402ae6:	f100 80bd 	bmi.w	402c64 <_malloc_r+0x194>
  402aea:	42b1      	cmp	r1, r6
  402aec:	f200 80ba 	bhi.w	402c64 <_malloc_r+0x194>
  402af0:	f000 fc04 	bl	4032fc <__malloc_lock>
  402af4:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  402af8:	f0c0 8293 	bcc.w	403022 <_malloc_r+0x552>
  402afc:	0a73      	lsrs	r3, r6, #9
  402afe:	f000 80b8 	beq.w	402c72 <_malloc_r+0x1a2>
  402b02:	2b04      	cmp	r3, #4
  402b04:	f200 8179 	bhi.w	402dfa <_malloc_r+0x32a>
  402b08:	09b3      	lsrs	r3, r6, #6
  402b0a:	f103 0039 	add.w	r0, r3, #57	; 0x39
  402b0e:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  402b12:	00c3      	lsls	r3, r0, #3
  402b14:	4fbf      	ldr	r7, [pc, #764]	; (402e14 <_malloc_r+0x344>)
  402b16:	443b      	add	r3, r7
  402b18:	f1a3 0108 	sub.w	r1, r3, #8
  402b1c:	685c      	ldr	r4, [r3, #4]
  402b1e:	42a1      	cmp	r1, r4
  402b20:	d106      	bne.n	402b30 <_malloc_r+0x60>
  402b22:	e00c      	b.n	402b3e <_malloc_r+0x6e>
  402b24:	2a00      	cmp	r2, #0
  402b26:	f280 80aa 	bge.w	402c7e <_malloc_r+0x1ae>
  402b2a:	68e4      	ldr	r4, [r4, #12]
  402b2c:	42a1      	cmp	r1, r4
  402b2e:	d006      	beq.n	402b3e <_malloc_r+0x6e>
  402b30:	6863      	ldr	r3, [r4, #4]
  402b32:	f023 0303 	bic.w	r3, r3, #3
  402b36:	1b9a      	subs	r2, r3, r6
  402b38:	2a0f      	cmp	r2, #15
  402b3a:	ddf3      	ble.n	402b24 <_malloc_r+0x54>
  402b3c:	4670      	mov	r0, lr
  402b3e:	693c      	ldr	r4, [r7, #16]
  402b40:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 402e28 <_malloc_r+0x358>
  402b44:	4574      	cmp	r4, lr
  402b46:	f000 81ab 	beq.w	402ea0 <_malloc_r+0x3d0>
  402b4a:	6863      	ldr	r3, [r4, #4]
  402b4c:	f023 0303 	bic.w	r3, r3, #3
  402b50:	1b9a      	subs	r2, r3, r6
  402b52:	2a0f      	cmp	r2, #15
  402b54:	f300 8190 	bgt.w	402e78 <_malloc_r+0x3a8>
  402b58:	2a00      	cmp	r2, #0
  402b5a:	f8c7 e014 	str.w	lr, [r7, #20]
  402b5e:	f8c7 e010 	str.w	lr, [r7, #16]
  402b62:	f280 809d 	bge.w	402ca0 <_malloc_r+0x1d0>
  402b66:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  402b6a:	f080 8161 	bcs.w	402e30 <_malloc_r+0x360>
  402b6e:	08db      	lsrs	r3, r3, #3
  402b70:	f103 0c01 	add.w	ip, r3, #1
  402b74:	1099      	asrs	r1, r3, #2
  402b76:	687a      	ldr	r2, [r7, #4]
  402b78:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  402b7c:	f8c4 8008 	str.w	r8, [r4, #8]
  402b80:	2301      	movs	r3, #1
  402b82:	408b      	lsls	r3, r1
  402b84:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
  402b88:	4313      	orrs	r3, r2
  402b8a:	3908      	subs	r1, #8
  402b8c:	60e1      	str	r1, [r4, #12]
  402b8e:	607b      	str	r3, [r7, #4]
  402b90:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  402b94:	f8c8 400c 	str.w	r4, [r8, #12]
  402b98:	1082      	asrs	r2, r0, #2
  402b9a:	2401      	movs	r4, #1
  402b9c:	4094      	lsls	r4, r2
  402b9e:	429c      	cmp	r4, r3
  402ba0:	f200 808b 	bhi.w	402cba <_malloc_r+0x1ea>
  402ba4:	421c      	tst	r4, r3
  402ba6:	d106      	bne.n	402bb6 <_malloc_r+0xe6>
  402ba8:	f020 0003 	bic.w	r0, r0, #3
  402bac:	0064      	lsls	r4, r4, #1
  402bae:	421c      	tst	r4, r3
  402bb0:	f100 0004 	add.w	r0, r0, #4
  402bb4:	d0fa      	beq.n	402bac <_malloc_r+0xdc>
  402bb6:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  402bba:	46cc      	mov	ip, r9
  402bbc:	4680      	mov	r8, r0
  402bbe:	f8dc 300c 	ldr.w	r3, [ip, #12]
  402bc2:	459c      	cmp	ip, r3
  402bc4:	d107      	bne.n	402bd6 <_malloc_r+0x106>
  402bc6:	e16d      	b.n	402ea4 <_malloc_r+0x3d4>
  402bc8:	2a00      	cmp	r2, #0
  402bca:	f280 817b 	bge.w	402ec4 <_malloc_r+0x3f4>
  402bce:	68db      	ldr	r3, [r3, #12]
  402bd0:	459c      	cmp	ip, r3
  402bd2:	f000 8167 	beq.w	402ea4 <_malloc_r+0x3d4>
  402bd6:	6859      	ldr	r1, [r3, #4]
  402bd8:	f021 0103 	bic.w	r1, r1, #3
  402bdc:	1b8a      	subs	r2, r1, r6
  402bde:	2a0f      	cmp	r2, #15
  402be0:	ddf2      	ble.n	402bc8 <_malloc_r+0xf8>
  402be2:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  402be6:	f8d3 8008 	ldr.w	r8, [r3, #8]
  402bea:	9300      	str	r3, [sp, #0]
  402bec:	199c      	adds	r4, r3, r6
  402bee:	4628      	mov	r0, r5
  402bf0:	f046 0601 	orr.w	r6, r6, #1
  402bf4:	f042 0501 	orr.w	r5, r2, #1
  402bf8:	605e      	str	r6, [r3, #4]
  402bfa:	f8c8 c00c 	str.w	ip, [r8, #12]
  402bfe:	f8cc 8008 	str.w	r8, [ip, #8]
  402c02:	617c      	str	r4, [r7, #20]
  402c04:	613c      	str	r4, [r7, #16]
  402c06:	f8c4 e00c 	str.w	lr, [r4, #12]
  402c0a:	f8c4 e008 	str.w	lr, [r4, #8]
  402c0e:	6065      	str	r5, [r4, #4]
  402c10:	505a      	str	r2, [r3, r1]
  402c12:	f000 fb79 	bl	403308 <__malloc_unlock>
  402c16:	9b00      	ldr	r3, [sp, #0]
  402c18:	f103 0408 	add.w	r4, r3, #8
  402c1c:	e01e      	b.n	402c5c <_malloc_r+0x18c>
  402c1e:	2910      	cmp	r1, #16
  402c20:	d820      	bhi.n	402c64 <_malloc_r+0x194>
  402c22:	f000 fb6b 	bl	4032fc <__malloc_lock>
  402c26:	2610      	movs	r6, #16
  402c28:	2318      	movs	r3, #24
  402c2a:	2002      	movs	r0, #2
  402c2c:	4f79      	ldr	r7, [pc, #484]	; (402e14 <_malloc_r+0x344>)
  402c2e:	443b      	add	r3, r7
  402c30:	f1a3 0208 	sub.w	r2, r3, #8
  402c34:	685c      	ldr	r4, [r3, #4]
  402c36:	4294      	cmp	r4, r2
  402c38:	f000 813d 	beq.w	402eb6 <_malloc_r+0x3e6>
  402c3c:	6863      	ldr	r3, [r4, #4]
  402c3e:	68e1      	ldr	r1, [r4, #12]
  402c40:	68a6      	ldr	r6, [r4, #8]
  402c42:	f023 0303 	bic.w	r3, r3, #3
  402c46:	4423      	add	r3, r4
  402c48:	4628      	mov	r0, r5
  402c4a:	685a      	ldr	r2, [r3, #4]
  402c4c:	60f1      	str	r1, [r6, #12]
  402c4e:	f042 0201 	orr.w	r2, r2, #1
  402c52:	608e      	str	r6, [r1, #8]
  402c54:	605a      	str	r2, [r3, #4]
  402c56:	f000 fb57 	bl	403308 <__malloc_unlock>
  402c5a:	3408      	adds	r4, #8
  402c5c:	4620      	mov	r0, r4
  402c5e:	b003      	add	sp, #12
  402c60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402c64:	2400      	movs	r4, #0
  402c66:	230c      	movs	r3, #12
  402c68:	4620      	mov	r0, r4
  402c6a:	602b      	str	r3, [r5, #0]
  402c6c:	b003      	add	sp, #12
  402c6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402c72:	2040      	movs	r0, #64	; 0x40
  402c74:	f44f 7300 	mov.w	r3, #512	; 0x200
  402c78:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  402c7c:	e74a      	b.n	402b14 <_malloc_r+0x44>
  402c7e:	4423      	add	r3, r4
  402c80:	68e1      	ldr	r1, [r4, #12]
  402c82:	685a      	ldr	r2, [r3, #4]
  402c84:	68a6      	ldr	r6, [r4, #8]
  402c86:	f042 0201 	orr.w	r2, r2, #1
  402c8a:	60f1      	str	r1, [r6, #12]
  402c8c:	4628      	mov	r0, r5
  402c8e:	608e      	str	r6, [r1, #8]
  402c90:	605a      	str	r2, [r3, #4]
  402c92:	f000 fb39 	bl	403308 <__malloc_unlock>
  402c96:	3408      	adds	r4, #8
  402c98:	4620      	mov	r0, r4
  402c9a:	b003      	add	sp, #12
  402c9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402ca0:	4423      	add	r3, r4
  402ca2:	4628      	mov	r0, r5
  402ca4:	685a      	ldr	r2, [r3, #4]
  402ca6:	f042 0201 	orr.w	r2, r2, #1
  402caa:	605a      	str	r2, [r3, #4]
  402cac:	f000 fb2c 	bl	403308 <__malloc_unlock>
  402cb0:	3408      	adds	r4, #8
  402cb2:	4620      	mov	r0, r4
  402cb4:	b003      	add	sp, #12
  402cb6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402cba:	68bc      	ldr	r4, [r7, #8]
  402cbc:	6863      	ldr	r3, [r4, #4]
  402cbe:	f023 0803 	bic.w	r8, r3, #3
  402cc2:	45b0      	cmp	r8, r6
  402cc4:	d304      	bcc.n	402cd0 <_malloc_r+0x200>
  402cc6:	eba8 0306 	sub.w	r3, r8, r6
  402cca:	2b0f      	cmp	r3, #15
  402ccc:	f300 8085 	bgt.w	402dda <_malloc_r+0x30a>
  402cd0:	f8df 9158 	ldr.w	r9, [pc, #344]	; 402e2c <_malloc_r+0x35c>
  402cd4:	4b50      	ldr	r3, [pc, #320]	; (402e18 <_malloc_r+0x348>)
  402cd6:	f8d9 2000 	ldr.w	r2, [r9]
  402cda:	681b      	ldr	r3, [r3, #0]
  402cdc:	3201      	adds	r2, #1
  402cde:	4433      	add	r3, r6
  402ce0:	eb04 0a08 	add.w	sl, r4, r8
  402ce4:	f000 8155 	beq.w	402f92 <_malloc_r+0x4c2>
  402ce8:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  402cec:	330f      	adds	r3, #15
  402cee:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  402cf2:	f02b 0b0f 	bic.w	fp, fp, #15
  402cf6:	4659      	mov	r1, fp
  402cf8:	4628      	mov	r0, r5
  402cfa:	f000 fcb1 	bl	403660 <_sbrk_r>
  402cfe:	1c41      	adds	r1, r0, #1
  402d00:	4602      	mov	r2, r0
  402d02:	f000 80fc 	beq.w	402efe <_malloc_r+0x42e>
  402d06:	4582      	cmp	sl, r0
  402d08:	f200 80f7 	bhi.w	402efa <_malloc_r+0x42a>
  402d0c:	4b43      	ldr	r3, [pc, #268]	; (402e1c <_malloc_r+0x34c>)
  402d0e:	6819      	ldr	r1, [r3, #0]
  402d10:	4459      	add	r1, fp
  402d12:	6019      	str	r1, [r3, #0]
  402d14:	f000 814d 	beq.w	402fb2 <_malloc_r+0x4e2>
  402d18:	f8d9 0000 	ldr.w	r0, [r9]
  402d1c:	3001      	adds	r0, #1
  402d1e:	bf1b      	ittet	ne
  402d20:	eba2 0a0a 	subne.w	sl, r2, sl
  402d24:	4451      	addne	r1, sl
  402d26:	f8c9 2000 	streq.w	r2, [r9]
  402d2a:	6019      	strne	r1, [r3, #0]
  402d2c:	f012 0107 	ands.w	r1, r2, #7
  402d30:	f000 8115 	beq.w	402f5e <_malloc_r+0x48e>
  402d34:	f1c1 0008 	rsb	r0, r1, #8
  402d38:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  402d3c:	4402      	add	r2, r0
  402d3e:	3108      	adds	r1, #8
  402d40:	eb02 090b 	add.w	r9, r2, fp
  402d44:	f3c9 090b 	ubfx	r9, r9, #0, #12
  402d48:	eba1 0909 	sub.w	r9, r1, r9
  402d4c:	4649      	mov	r1, r9
  402d4e:	4628      	mov	r0, r5
  402d50:	9301      	str	r3, [sp, #4]
  402d52:	9200      	str	r2, [sp, #0]
  402d54:	f000 fc84 	bl	403660 <_sbrk_r>
  402d58:	1c43      	adds	r3, r0, #1
  402d5a:	e89d 000c 	ldmia.w	sp, {r2, r3}
  402d5e:	f000 8143 	beq.w	402fe8 <_malloc_r+0x518>
  402d62:	1a80      	subs	r0, r0, r2
  402d64:	4448      	add	r0, r9
  402d66:	f040 0001 	orr.w	r0, r0, #1
  402d6a:	6819      	ldr	r1, [r3, #0]
  402d6c:	60ba      	str	r2, [r7, #8]
  402d6e:	4449      	add	r1, r9
  402d70:	42bc      	cmp	r4, r7
  402d72:	6050      	str	r0, [r2, #4]
  402d74:	6019      	str	r1, [r3, #0]
  402d76:	d017      	beq.n	402da8 <_malloc_r+0x2d8>
  402d78:	f1b8 0f0f 	cmp.w	r8, #15
  402d7c:	f240 80fb 	bls.w	402f76 <_malloc_r+0x4a6>
  402d80:	6860      	ldr	r0, [r4, #4]
  402d82:	f1a8 020c 	sub.w	r2, r8, #12
  402d86:	f022 0207 	bic.w	r2, r2, #7
  402d8a:	eb04 0e02 	add.w	lr, r4, r2
  402d8e:	f000 0001 	and.w	r0, r0, #1
  402d92:	f04f 0c05 	mov.w	ip, #5
  402d96:	4310      	orrs	r0, r2
  402d98:	2a0f      	cmp	r2, #15
  402d9a:	6060      	str	r0, [r4, #4]
  402d9c:	f8ce c004 	str.w	ip, [lr, #4]
  402da0:	f8ce c008 	str.w	ip, [lr, #8]
  402da4:	f200 8117 	bhi.w	402fd6 <_malloc_r+0x506>
  402da8:	4b1d      	ldr	r3, [pc, #116]	; (402e20 <_malloc_r+0x350>)
  402daa:	68bc      	ldr	r4, [r7, #8]
  402dac:	681a      	ldr	r2, [r3, #0]
  402dae:	4291      	cmp	r1, r2
  402db0:	bf88      	it	hi
  402db2:	6019      	strhi	r1, [r3, #0]
  402db4:	4b1b      	ldr	r3, [pc, #108]	; (402e24 <_malloc_r+0x354>)
  402db6:	681a      	ldr	r2, [r3, #0]
  402db8:	4291      	cmp	r1, r2
  402dba:	6862      	ldr	r2, [r4, #4]
  402dbc:	bf88      	it	hi
  402dbe:	6019      	strhi	r1, [r3, #0]
  402dc0:	f022 0203 	bic.w	r2, r2, #3
  402dc4:	4296      	cmp	r6, r2
  402dc6:	eba2 0306 	sub.w	r3, r2, r6
  402dca:	d801      	bhi.n	402dd0 <_malloc_r+0x300>
  402dcc:	2b0f      	cmp	r3, #15
  402dce:	dc04      	bgt.n	402dda <_malloc_r+0x30a>
  402dd0:	4628      	mov	r0, r5
  402dd2:	f000 fa99 	bl	403308 <__malloc_unlock>
  402dd6:	2400      	movs	r4, #0
  402dd8:	e740      	b.n	402c5c <_malloc_r+0x18c>
  402dda:	19a2      	adds	r2, r4, r6
  402ddc:	f043 0301 	orr.w	r3, r3, #1
  402de0:	f046 0601 	orr.w	r6, r6, #1
  402de4:	6066      	str	r6, [r4, #4]
  402de6:	4628      	mov	r0, r5
  402de8:	60ba      	str	r2, [r7, #8]
  402dea:	6053      	str	r3, [r2, #4]
  402dec:	f000 fa8c 	bl	403308 <__malloc_unlock>
  402df0:	3408      	adds	r4, #8
  402df2:	4620      	mov	r0, r4
  402df4:	b003      	add	sp, #12
  402df6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402dfa:	2b14      	cmp	r3, #20
  402dfc:	d971      	bls.n	402ee2 <_malloc_r+0x412>
  402dfe:	2b54      	cmp	r3, #84	; 0x54
  402e00:	f200 80a3 	bhi.w	402f4a <_malloc_r+0x47a>
  402e04:	0b33      	lsrs	r3, r6, #12
  402e06:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  402e0a:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  402e0e:	00c3      	lsls	r3, r0, #3
  402e10:	e680      	b.n	402b14 <_malloc_r+0x44>
  402e12:	bf00      	nop
  402e14:	204005a8 	.word	0x204005a8
  402e18:	20400a7c 	.word	0x20400a7c
  402e1c:	20400a4c 	.word	0x20400a4c
  402e20:	20400a74 	.word	0x20400a74
  402e24:	20400a78 	.word	0x20400a78
  402e28:	204005b0 	.word	0x204005b0
  402e2c:	204009b0 	.word	0x204009b0
  402e30:	0a5a      	lsrs	r2, r3, #9
  402e32:	2a04      	cmp	r2, #4
  402e34:	d95b      	bls.n	402eee <_malloc_r+0x41e>
  402e36:	2a14      	cmp	r2, #20
  402e38:	f200 80ae 	bhi.w	402f98 <_malloc_r+0x4c8>
  402e3c:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  402e40:	00c9      	lsls	r1, r1, #3
  402e42:	325b      	adds	r2, #91	; 0x5b
  402e44:	eb07 0c01 	add.w	ip, r7, r1
  402e48:	5879      	ldr	r1, [r7, r1]
  402e4a:	f1ac 0c08 	sub.w	ip, ip, #8
  402e4e:	458c      	cmp	ip, r1
  402e50:	f000 8088 	beq.w	402f64 <_malloc_r+0x494>
  402e54:	684a      	ldr	r2, [r1, #4]
  402e56:	f022 0203 	bic.w	r2, r2, #3
  402e5a:	4293      	cmp	r3, r2
  402e5c:	d273      	bcs.n	402f46 <_malloc_r+0x476>
  402e5e:	6889      	ldr	r1, [r1, #8]
  402e60:	458c      	cmp	ip, r1
  402e62:	d1f7      	bne.n	402e54 <_malloc_r+0x384>
  402e64:	f8dc 200c 	ldr.w	r2, [ip, #12]
  402e68:	687b      	ldr	r3, [r7, #4]
  402e6a:	60e2      	str	r2, [r4, #12]
  402e6c:	f8c4 c008 	str.w	ip, [r4, #8]
  402e70:	6094      	str	r4, [r2, #8]
  402e72:	f8cc 400c 	str.w	r4, [ip, #12]
  402e76:	e68f      	b.n	402b98 <_malloc_r+0xc8>
  402e78:	19a1      	adds	r1, r4, r6
  402e7a:	f046 0c01 	orr.w	ip, r6, #1
  402e7e:	f042 0601 	orr.w	r6, r2, #1
  402e82:	f8c4 c004 	str.w	ip, [r4, #4]
  402e86:	4628      	mov	r0, r5
  402e88:	6179      	str	r1, [r7, #20]
  402e8a:	6139      	str	r1, [r7, #16]
  402e8c:	f8c1 e00c 	str.w	lr, [r1, #12]
  402e90:	f8c1 e008 	str.w	lr, [r1, #8]
  402e94:	604e      	str	r6, [r1, #4]
  402e96:	50e2      	str	r2, [r4, r3]
  402e98:	f000 fa36 	bl	403308 <__malloc_unlock>
  402e9c:	3408      	adds	r4, #8
  402e9e:	e6dd      	b.n	402c5c <_malloc_r+0x18c>
  402ea0:	687b      	ldr	r3, [r7, #4]
  402ea2:	e679      	b.n	402b98 <_malloc_r+0xc8>
  402ea4:	f108 0801 	add.w	r8, r8, #1
  402ea8:	f018 0f03 	tst.w	r8, #3
  402eac:	f10c 0c08 	add.w	ip, ip, #8
  402eb0:	f47f ae85 	bne.w	402bbe <_malloc_r+0xee>
  402eb4:	e02d      	b.n	402f12 <_malloc_r+0x442>
  402eb6:	68dc      	ldr	r4, [r3, #12]
  402eb8:	42a3      	cmp	r3, r4
  402eba:	bf08      	it	eq
  402ebc:	3002      	addeq	r0, #2
  402ebe:	f43f ae3e 	beq.w	402b3e <_malloc_r+0x6e>
  402ec2:	e6bb      	b.n	402c3c <_malloc_r+0x16c>
  402ec4:	4419      	add	r1, r3
  402ec6:	461c      	mov	r4, r3
  402ec8:	684a      	ldr	r2, [r1, #4]
  402eca:	68db      	ldr	r3, [r3, #12]
  402ecc:	f854 6f08 	ldr.w	r6, [r4, #8]!
  402ed0:	f042 0201 	orr.w	r2, r2, #1
  402ed4:	604a      	str	r2, [r1, #4]
  402ed6:	4628      	mov	r0, r5
  402ed8:	60f3      	str	r3, [r6, #12]
  402eda:	609e      	str	r6, [r3, #8]
  402edc:	f000 fa14 	bl	403308 <__malloc_unlock>
  402ee0:	e6bc      	b.n	402c5c <_malloc_r+0x18c>
  402ee2:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  402ee6:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  402eea:	00c3      	lsls	r3, r0, #3
  402eec:	e612      	b.n	402b14 <_malloc_r+0x44>
  402eee:	099a      	lsrs	r2, r3, #6
  402ef0:	f102 0139 	add.w	r1, r2, #57	; 0x39
  402ef4:	00c9      	lsls	r1, r1, #3
  402ef6:	3238      	adds	r2, #56	; 0x38
  402ef8:	e7a4      	b.n	402e44 <_malloc_r+0x374>
  402efa:	42bc      	cmp	r4, r7
  402efc:	d054      	beq.n	402fa8 <_malloc_r+0x4d8>
  402efe:	68bc      	ldr	r4, [r7, #8]
  402f00:	6862      	ldr	r2, [r4, #4]
  402f02:	f022 0203 	bic.w	r2, r2, #3
  402f06:	e75d      	b.n	402dc4 <_malloc_r+0x2f4>
  402f08:	f859 3908 	ldr.w	r3, [r9], #-8
  402f0c:	4599      	cmp	r9, r3
  402f0e:	f040 8086 	bne.w	40301e <_malloc_r+0x54e>
  402f12:	f010 0f03 	tst.w	r0, #3
  402f16:	f100 30ff 	add.w	r0, r0, #4294967295
  402f1a:	d1f5      	bne.n	402f08 <_malloc_r+0x438>
  402f1c:	687b      	ldr	r3, [r7, #4]
  402f1e:	ea23 0304 	bic.w	r3, r3, r4
  402f22:	607b      	str	r3, [r7, #4]
  402f24:	0064      	lsls	r4, r4, #1
  402f26:	429c      	cmp	r4, r3
  402f28:	f63f aec7 	bhi.w	402cba <_malloc_r+0x1ea>
  402f2c:	2c00      	cmp	r4, #0
  402f2e:	f43f aec4 	beq.w	402cba <_malloc_r+0x1ea>
  402f32:	421c      	tst	r4, r3
  402f34:	4640      	mov	r0, r8
  402f36:	f47f ae3e 	bne.w	402bb6 <_malloc_r+0xe6>
  402f3a:	0064      	lsls	r4, r4, #1
  402f3c:	421c      	tst	r4, r3
  402f3e:	f100 0004 	add.w	r0, r0, #4
  402f42:	d0fa      	beq.n	402f3a <_malloc_r+0x46a>
  402f44:	e637      	b.n	402bb6 <_malloc_r+0xe6>
  402f46:	468c      	mov	ip, r1
  402f48:	e78c      	b.n	402e64 <_malloc_r+0x394>
  402f4a:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  402f4e:	d815      	bhi.n	402f7c <_malloc_r+0x4ac>
  402f50:	0bf3      	lsrs	r3, r6, #15
  402f52:	f103 0078 	add.w	r0, r3, #120	; 0x78
  402f56:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  402f5a:	00c3      	lsls	r3, r0, #3
  402f5c:	e5da      	b.n	402b14 <_malloc_r+0x44>
  402f5e:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  402f62:	e6ed      	b.n	402d40 <_malloc_r+0x270>
  402f64:	687b      	ldr	r3, [r7, #4]
  402f66:	1092      	asrs	r2, r2, #2
  402f68:	2101      	movs	r1, #1
  402f6a:	fa01 f202 	lsl.w	r2, r1, r2
  402f6e:	4313      	orrs	r3, r2
  402f70:	607b      	str	r3, [r7, #4]
  402f72:	4662      	mov	r2, ip
  402f74:	e779      	b.n	402e6a <_malloc_r+0x39a>
  402f76:	2301      	movs	r3, #1
  402f78:	6053      	str	r3, [r2, #4]
  402f7a:	e729      	b.n	402dd0 <_malloc_r+0x300>
  402f7c:	f240 5254 	movw	r2, #1364	; 0x554
  402f80:	4293      	cmp	r3, r2
  402f82:	d822      	bhi.n	402fca <_malloc_r+0x4fa>
  402f84:	0cb3      	lsrs	r3, r6, #18
  402f86:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  402f8a:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  402f8e:	00c3      	lsls	r3, r0, #3
  402f90:	e5c0      	b.n	402b14 <_malloc_r+0x44>
  402f92:	f103 0b10 	add.w	fp, r3, #16
  402f96:	e6ae      	b.n	402cf6 <_malloc_r+0x226>
  402f98:	2a54      	cmp	r2, #84	; 0x54
  402f9a:	d829      	bhi.n	402ff0 <_malloc_r+0x520>
  402f9c:	0b1a      	lsrs	r2, r3, #12
  402f9e:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  402fa2:	00c9      	lsls	r1, r1, #3
  402fa4:	326e      	adds	r2, #110	; 0x6e
  402fa6:	e74d      	b.n	402e44 <_malloc_r+0x374>
  402fa8:	4b20      	ldr	r3, [pc, #128]	; (40302c <_malloc_r+0x55c>)
  402faa:	6819      	ldr	r1, [r3, #0]
  402fac:	4459      	add	r1, fp
  402fae:	6019      	str	r1, [r3, #0]
  402fb0:	e6b2      	b.n	402d18 <_malloc_r+0x248>
  402fb2:	f3ca 000b 	ubfx	r0, sl, #0, #12
  402fb6:	2800      	cmp	r0, #0
  402fb8:	f47f aeae 	bne.w	402d18 <_malloc_r+0x248>
  402fbc:	eb08 030b 	add.w	r3, r8, fp
  402fc0:	68ba      	ldr	r2, [r7, #8]
  402fc2:	f043 0301 	orr.w	r3, r3, #1
  402fc6:	6053      	str	r3, [r2, #4]
  402fc8:	e6ee      	b.n	402da8 <_malloc_r+0x2d8>
  402fca:	207f      	movs	r0, #127	; 0x7f
  402fcc:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  402fd0:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  402fd4:	e59e      	b.n	402b14 <_malloc_r+0x44>
  402fd6:	f104 0108 	add.w	r1, r4, #8
  402fda:	4628      	mov	r0, r5
  402fdc:	9300      	str	r3, [sp, #0]
  402fde:	f7ff fa59 	bl	402494 <_free_r>
  402fe2:	9b00      	ldr	r3, [sp, #0]
  402fe4:	6819      	ldr	r1, [r3, #0]
  402fe6:	e6df      	b.n	402da8 <_malloc_r+0x2d8>
  402fe8:	2001      	movs	r0, #1
  402fea:	f04f 0900 	mov.w	r9, #0
  402fee:	e6bc      	b.n	402d6a <_malloc_r+0x29a>
  402ff0:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  402ff4:	d805      	bhi.n	403002 <_malloc_r+0x532>
  402ff6:	0bda      	lsrs	r2, r3, #15
  402ff8:	f102 0178 	add.w	r1, r2, #120	; 0x78
  402ffc:	00c9      	lsls	r1, r1, #3
  402ffe:	3277      	adds	r2, #119	; 0x77
  403000:	e720      	b.n	402e44 <_malloc_r+0x374>
  403002:	f240 5154 	movw	r1, #1364	; 0x554
  403006:	428a      	cmp	r2, r1
  403008:	d805      	bhi.n	403016 <_malloc_r+0x546>
  40300a:	0c9a      	lsrs	r2, r3, #18
  40300c:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  403010:	00c9      	lsls	r1, r1, #3
  403012:	327c      	adds	r2, #124	; 0x7c
  403014:	e716      	b.n	402e44 <_malloc_r+0x374>
  403016:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  40301a:	227e      	movs	r2, #126	; 0x7e
  40301c:	e712      	b.n	402e44 <_malloc_r+0x374>
  40301e:	687b      	ldr	r3, [r7, #4]
  403020:	e780      	b.n	402f24 <_malloc_r+0x454>
  403022:	08f0      	lsrs	r0, r6, #3
  403024:	f106 0308 	add.w	r3, r6, #8
  403028:	e600      	b.n	402c2c <_malloc_r+0x15c>
  40302a:	bf00      	nop
  40302c:	20400a4c 	.word	0x20400a4c

00403030 <__ascii_mbtowc>:
  403030:	b082      	sub	sp, #8
  403032:	b149      	cbz	r1, 403048 <__ascii_mbtowc+0x18>
  403034:	b15a      	cbz	r2, 40304e <__ascii_mbtowc+0x1e>
  403036:	b16b      	cbz	r3, 403054 <__ascii_mbtowc+0x24>
  403038:	7813      	ldrb	r3, [r2, #0]
  40303a:	600b      	str	r3, [r1, #0]
  40303c:	7812      	ldrb	r2, [r2, #0]
  40303e:	1c10      	adds	r0, r2, #0
  403040:	bf18      	it	ne
  403042:	2001      	movne	r0, #1
  403044:	b002      	add	sp, #8
  403046:	4770      	bx	lr
  403048:	a901      	add	r1, sp, #4
  40304a:	2a00      	cmp	r2, #0
  40304c:	d1f3      	bne.n	403036 <__ascii_mbtowc+0x6>
  40304e:	4610      	mov	r0, r2
  403050:	b002      	add	sp, #8
  403052:	4770      	bx	lr
  403054:	f06f 0001 	mvn.w	r0, #1
  403058:	e7f4      	b.n	403044 <__ascii_mbtowc+0x14>
  40305a:	bf00      	nop
  40305c:	0000      	movs	r0, r0
	...

00403060 <memchr>:
  403060:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  403064:	2a10      	cmp	r2, #16
  403066:	db2b      	blt.n	4030c0 <memchr+0x60>
  403068:	f010 0f07 	tst.w	r0, #7
  40306c:	d008      	beq.n	403080 <memchr+0x20>
  40306e:	f810 3b01 	ldrb.w	r3, [r0], #1
  403072:	3a01      	subs	r2, #1
  403074:	428b      	cmp	r3, r1
  403076:	d02d      	beq.n	4030d4 <memchr+0x74>
  403078:	f010 0f07 	tst.w	r0, #7
  40307c:	b342      	cbz	r2, 4030d0 <memchr+0x70>
  40307e:	d1f6      	bne.n	40306e <memchr+0xe>
  403080:	b4f0      	push	{r4, r5, r6, r7}
  403082:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  403086:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  40308a:	f022 0407 	bic.w	r4, r2, #7
  40308e:	f07f 0700 	mvns.w	r7, #0
  403092:	2300      	movs	r3, #0
  403094:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  403098:	3c08      	subs	r4, #8
  40309a:	ea85 0501 	eor.w	r5, r5, r1
  40309e:	ea86 0601 	eor.w	r6, r6, r1
  4030a2:	fa85 f547 	uadd8	r5, r5, r7
  4030a6:	faa3 f587 	sel	r5, r3, r7
  4030aa:	fa86 f647 	uadd8	r6, r6, r7
  4030ae:	faa5 f687 	sel	r6, r5, r7
  4030b2:	b98e      	cbnz	r6, 4030d8 <memchr+0x78>
  4030b4:	d1ee      	bne.n	403094 <memchr+0x34>
  4030b6:	bcf0      	pop	{r4, r5, r6, r7}
  4030b8:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  4030bc:	f002 0207 	and.w	r2, r2, #7
  4030c0:	b132      	cbz	r2, 4030d0 <memchr+0x70>
  4030c2:	f810 3b01 	ldrb.w	r3, [r0], #1
  4030c6:	3a01      	subs	r2, #1
  4030c8:	ea83 0301 	eor.w	r3, r3, r1
  4030cc:	b113      	cbz	r3, 4030d4 <memchr+0x74>
  4030ce:	d1f8      	bne.n	4030c2 <memchr+0x62>
  4030d0:	2000      	movs	r0, #0
  4030d2:	4770      	bx	lr
  4030d4:	3801      	subs	r0, #1
  4030d6:	4770      	bx	lr
  4030d8:	2d00      	cmp	r5, #0
  4030da:	bf06      	itte	eq
  4030dc:	4635      	moveq	r5, r6
  4030de:	3803      	subeq	r0, #3
  4030e0:	3807      	subne	r0, #7
  4030e2:	f015 0f01 	tst.w	r5, #1
  4030e6:	d107      	bne.n	4030f8 <memchr+0x98>
  4030e8:	3001      	adds	r0, #1
  4030ea:	f415 7f80 	tst.w	r5, #256	; 0x100
  4030ee:	bf02      	ittt	eq
  4030f0:	3001      	addeq	r0, #1
  4030f2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  4030f6:	3001      	addeq	r0, #1
  4030f8:	bcf0      	pop	{r4, r5, r6, r7}
  4030fa:	3801      	subs	r0, #1
  4030fc:	4770      	bx	lr
  4030fe:	bf00      	nop

00403100 <memcpy>:
  403100:	4684      	mov	ip, r0
  403102:	ea41 0300 	orr.w	r3, r1, r0
  403106:	f013 0303 	ands.w	r3, r3, #3
  40310a:	d16d      	bne.n	4031e8 <memcpy+0xe8>
  40310c:	3a40      	subs	r2, #64	; 0x40
  40310e:	d341      	bcc.n	403194 <memcpy+0x94>
  403110:	f851 3b04 	ldr.w	r3, [r1], #4
  403114:	f840 3b04 	str.w	r3, [r0], #4
  403118:	f851 3b04 	ldr.w	r3, [r1], #4
  40311c:	f840 3b04 	str.w	r3, [r0], #4
  403120:	f851 3b04 	ldr.w	r3, [r1], #4
  403124:	f840 3b04 	str.w	r3, [r0], #4
  403128:	f851 3b04 	ldr.w	r3, [r1], #4
  40312c:	f840 3b04 	str.w	r3, [r0], #4
  403130:	f851 3b04 	ldr.w	r3, [r1], #4
  403134:	f840 3b04 	str.w	r3, [r0], #4
  403138:	f851 3b04 	ldr.w	r3, [r1], #4
  40313c:	f840 3b04 	str.w	r3, [r0], #4
  403140:	f851 3b04 	ldr.w	r3, [r1], #4
  403144:	f840 3b04 	str.w	r3, [r0], #4
  403148:	f851 3b04 	ldr.w	r3, [r1], #4
  40314c:	f840 3b04 	str.w	r3, [r0], #4
  403150:	f851 3b04 	ldr.w	r3, [r1], #4
  403154:	f840 3b04 	str.w	r3, [r0], #4
  403158:	f851 3b04 	ldr.w	r3, [r1], #4
  40315c:	f840 3b04 	str.w	r3, [r0], #4
  403160:	f851 3b04 	ldr.w	r3, [r1], #4
  403164:	f840 3b04 	str.w	r3, [r0], #4
  403168:	f851 3b04 	ldr.w	r3, [r1], #4
  40316c:	f840 3b04 	str.w	r3, [r0], #4
  403170:	f851 3b04 	ldr.w	r3, [r1], #4
  403174:	f840 3b04 	str.w	r3, [r0], #4
  403178:	f851 3b04 	ldr.w	r3, [r1], #4
  40317c:	f840 3b04 	str.w	r3, [r0], #4
  403180:	f851 3b04 	ldr.w	r3, [r1], #4
  403184:	f840 3b04 	str.w	r3, [r0], #4
  403188:	f851 3b04 	ldr.w	r3, [r1], #4
  40318c:	f840 3b04 	str.w	r3, [r0], #4
  403190:	3a40      	subs	r2, #64	; 0x40
  403192:	d2bd      	bcs.n	403110 <memcpy+0x10>
  403194:	3230      	adds	r2, #48	; 0x30
  403196:	d311      	bcc.n	4031bc <memcpy+0xbc>
  403198:	f851 3b04 	ldr.w	r3, [r1], #4
  40319c:	f840 3b04 	str.w	r3, [r0], #4
  4031a0:	f851 3b04 	ldr.w	r3, [r1], #4
  4031a4:	f840 3b04 	str.w	r3, [r0], #4
  4031a8:	f851 3b04 	ldr.w	r3, [r1], #4
  4031ac:	f840 3b04 	str.w	r3, [r0], #4
  4031b0:	f851 3b04 	ldr.w	r3, [r1], #4
  4031b4:	f840 3b04 	str.w	r3, [r0], #4
  4031b8:	3a10      	subs	r2, #16
  4031ba:	d2ed      	bcs.n	403198 <memcpy+0x98>
  4031bc:	320c      	adds	r2, #12
  4031be:	d305      	bcc.n	4031cc <memcpy+0xcc>
  4031c0:	f851 3b04 	ldr.w	r3, [r1], #4
  4031c4:	f840 3b04 	str.w	r3, [r0], #4
  4031c8:	3a04      	subs	r2, #4
  4031ca:	d2f9      	bcs.n	4031c0 <memcpy+0xc0>
  4031cc:	3204      	adds	r2, #4
  4031ce:	d008      	beq.n	4031e2 <memcpy+0xe2>
  4031d0:	07d2      	lsls	r2, r2, #31
  4031d2:	bf1c      	itt	ne
  4031d4:	f811 3b01 	ldrbne.w	r3, [r1], #1
  4031d8:	f800 3b01 	strbne.w	r3, [r0], #1
  4031dc:	d301      	bcc.n	4031e2 <memcpy+0xe2>
  4031de:	880b      	ldrh	r3, [r1, #0]
  4031e0:	8003      	strh	r3, [r0, #0]
  4031e2:	4660      	mov	r0, ip
  4031e4:	4770      	bx	lr
  4031e6:	bf00      	nop
  4031e8:	2a08      	cmp	r2, #8
  4031ea:	d313      	bcc.n	403214 <memcpy+0x114>
  4031ec:	078b      	lsls	r3, r1, #30
  4031ee:	d08d      	beq.n	40310c <memcpy+0xc>
  4031f0:	f010 0303 	ands.w	r3, r0, #3
  4031f4:	d08a      	beq.n	40310c <memcpy+0xc>
  4031f6:	f1c3 0304 	rsb	r3, r3, #4
  4031fa:	1ad2      	subs	r2, r2, r3
  4031fc:	07db      	lsls	r3, r3, #31
  4031fe:	bf1c      	itt	ne
  403200:	f811 3b01 	ldrbne.w	r3, [r1], #1
  403204:	f800 3b01 	strbne.w	r3, [r0], #1
  403208:	d380      	bcc.n	40310c <memcpy+0xc>
  40320a:	f831 3b02 	ldrh.w	r3, [r1], #2
  40320e:	f820 3b02 	strh.w	r3, [r0], #2
  403212:	e77b      	b.n	40310c <memcpy+0xc>
  403214:	3a04      	subs	r2, #4
  403216:	d3d9      	bcc.n	4031cc <memcpy+0xcc>
  403218:	3a01      	subs	r2, #1
  40321a:	f811 3b01 	ldrb.w	r3, [r1], #1
  40321e:	f800 3b01 	strb.w	r3, [r0], #1
  403222:	d2f9      	bcs.n	403218 <memcpy+0x118>
  403224:	780b      	ldrb	r3, [r1, #0]
  403226:	7003      	strb	r3, [r0, #0]
  403228:	784b      	ldrb	r3, [r1, #1]
  40322a:	7043      	strb	r3, [r0, #1]
  40322c:	788b      	ldrb	r3, [r1, #2]
  40322e:	7083      	strb	r3, [r0, #2]
  403230:	4660      	mov	r0, ip
  403232:	4770      	bx	lr

00403234 <memmove>:
  403234:	4288      	cmp	r0, r1
  403236:	b5f0      	push	{r4, r5, r6, r7, lr}
  403238:	d90d      	bls.n	403256 <memmove+0x22>
  40323a:	188b      	adds	r3, r1, r2
  40323c:	4298      	cmp	r0, r3
  40323e:	d20a      	bcs.n	403256 <memmove+0x22>
  403240:	1884      	adds	r4, r0, r2
  403242:	2a00      	cmp	r2, #0
  403244:	d051      	beq.n	4032ea <memmove+0xb6>
  403246:	4622      	mov	r2, r4
  403248:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  40324c:	f802 4d01 	strb.w	r4, [r2, #-1]!
  403250:	4299      	cmp	r1, r3
  403252:	d1f9      	bne.n	403248 <memmove+0x14>
  403254:	bdf0      	pop	{r4, r5, r6, r7, pc}
  403256:	2a0f      	cmp	r2, #15
  403258:	d948      	bls.n	4032ec <memmove+0xb8>
  40325a:	ea41 0300 	orr.w	r3, r1, r0
  40325e:	079b      	lsls	r3, r3, #30
  403260:	d146      	bne.n	4032f0 <memmove+0xbc>
  403262:	f100 0410 	add.w	r4, r0, #16
  403266:	f101 0310 	add.w	r3, r1, #16
  40326a:	4615      	mov	r5, r2
  40326c:	f853 6c10 	ldr.w	r6, [r3, #-16]
  403270:	f844 6c10 	str.w	r6, [r4, #-16]
  403274:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  403278:	f844 6c0c 	str.w	r6, [r4, #-12]
  40327c:	f853 6c08 	ldr.w	r6, [r3, #-8]
  403280:	f844 6c08 	str.w	r6, [r4, #-8]
  403284:	3d10      	subs	r5, #16
  403286:	f853 6c04 	ldr.w	r6, [r3, #-4]
  40328a:	f844 6c04 	str.w	r6, [r4, #-4]
  40328e:	2d0f      	cmp	r5, #15
  403290:	f103 0310 	add.w	r3, r3, #16
  403294:	f104 0410 	add.w	r4, r4, #16
  403298:	d8e8      	bhi.n	40326c <memmove+0x38>
  40329a:	f1a2 0310 	sub.w	r3, r2, #16
  40329e:	f023 030f 	bic.w	r3, r3, #15
  4032a2:	f002 0e0f 	and.w	lr, r2, #15
  4032a6:	3310      	adds	r3, #16
  4032a8:	f1be 0f03 	cmp.w	lr, #3
  4032ac:	4419      	add	r1, r3
  4032ae:	4403      	add	r3, r0
  4032b0:	d921      	bls.n	4032f6 <memmove+0xc2>
  4032b2:	1f1e      	subs	r6, r3, #4
  4032b4:	460d      	mov	r5, r1
  4032b6:	4674      	mov	r4, lr
  4032b8:	3c04      	subs	r4, #4
  4032ba:	f855 7b04 	ldr.w	r7, [r5], #4
  4032be:	f846 7f04 	str.w	r7, [r6, #4]!
  4032c2:	2c03      	cmp	r4, #3
  4032c4:	d8f8      	bhi.n	4032b8 <memmove+0x84>
  4032c6:	f1ae 0404 	sub.w	r4, lr, #4
  4032ca:	f024 0403 	bic.w	r4, r4, #3
  4032ce:	3404      	adds	r4, #4
  4032d0:	4421      	add	r1, r4
  4032d2:	4423      	add	r3, r4
  4032d4:	f002 0203 	and.w	r2, r2, #3
  4032d8:	b162      	cbz	r2, 4032f4 <memmove+0xc0>
  4032da:	3b01      	subs	r3, #1
  4032dc:	440a      	add	r2, r1
  4032de:	f811 4b01 	ldrb.w	r4, [r1], #1
  4032e2:	f803 4f01 	strb.w	r4, [r3, #1]!
  4032e6:	428a      	cmp	r2, r1
  4032e8:	d1f9      	bne.n	4032de <memmove+0xaa>
  4032ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4032ec:	4603      	mov	r3, r0
  4032ee:	e7f3      	b.n	4032d8 <memmove+0xa4>
  4032f0:	4603      	mov	r3, r0
  4032f2:	e7f2      	b.n	4032da <memmove+0xa6>
  4032f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4032f6:	4672      	mov	r2, lr
  4032f8:	e7ee      	b.n	4032d8 <memmove+0xa4>
  4032fa:	bf00      	nop

004032fc <__malloc_lock>:
  4032fc:	4801      	ldr	r0, [pc, #4]	; (403304 <__malloc_lock+0x8>)
  4032fe:	f7ff bb63 	b.w	4029c8 <__retarget_lock_acquire_recursive>
  403302:	bf00      	nop
  403304:	20400a9c 	.word	0x20400a9c

00403308 <__malloc_unlock>:
  403308:	4801      	ldr	r0, [pc, #4]	; (403310 <__malloc_unlock+0x8>)
  40330a:	f7ff bb5f 	b.w	4029cc <__retarget_lock_release_recursive>
  40330e:	bf00      	nop
  403310:	20400a9c 	.word	0x20400a9c

00403314 <_realloc_r>:
  403314:	2900      	cmp	r1, #0
  403316:	f000 8095 	beq.w	403444 <_realloc_r+0x130>
  40331a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40331e:	460d      	mov	r5, r1
  403320:	4616      	mov	r6, r2
  403322:	b083      	sub	sp, #12
  403324:	4680      	mov	r8, r0
  403326:	f106 070b 	add.w	r7, r6, #11
  40332a:	f7ff ffe7 	bl	4032fc <__malloc_lock>
  40332e:	f855 ec04 	ldr.w	lr, [r5, #-4]
  403332:	2f16      	cmp	r7, #22
  403334:	f02e 0403 	bic.w	r4, lr, #3
  403338:	f1a5 0908 	sub.w	r9, r5, #8
  40333c:	d83c      	bhi.n	4033b8 <_realloc_r+0xa4>
  40333e:	2210      	movs	r2, #16
  403340:	4617      	mov	r7, r2
  403342:	42be      	cmp	r6, r7
  403344:	d83d      	bhi.n	4033c2 <_realloc_r+0xae>
  403346:	4294      	cmp	r4, r2
  403348:	da43      	bge.n	4033d2 <_realloc_r+0xbe>
  40334a:	4bc4      	ldr	r3, [pc, #784]	; (40365c <_realloc_r+0x348>)
  40334c:	6899      	ldr	r1, [r3, #8]
  40334e:	eb09 0004 	add.w	r0, r9, r4
  403352:	4288      	cmp	r0, r1
  403354:	f000 80b4 	beq.w	4034c0 <_realloc_r+0x1ac>
  403358:	6843      	ldr	r3, [r0, #4]
  40335a:	f023 0101 	bic.w	r1, r3, #1
  40335e:	4401      	add	r1, r0
  403360:	6849      	ldr	r1, [r1, #4]
  403362:	07c9      	lsls	r1, r1, #31
  403364:	d54c      	bpl.n	403400 <_realloc_r+0xec>
  403366:	f01e 0f01 	tst.w	lr, #1
  40336a:	f000 809b 	beq.w	4034a4 <_realloc_r+0x190>
  40336e:	4631      	mov	r1, r6
  403370:	4640      	mov	r0, r8
  403372:	f7ff fbad 	bl	402ad0 <_malloc_r>
  403376:	4606      	mov	r6, r0
  403378:	2800      	cmp	r0, #0
  40337a:	d03a      	beq.n	4033f2 <_realloc_r+0xde>
  40337c:	f855 3c04 	ldr.w	r3, [r5, #-4]
  403380:	f023 0301 	bic.w	r3, r3, #1
  403384:	444b      	add	r3, r9
  403386:	f1a0 0208 	sub.w	r2, r0, #8
  40338a:	429a      	cmp	r2, r3
  40338c:	f000 8121 	beq.w	4035d2 <_realloc_r+0x2be>
  403390:	1f22      	subs	r2, r4, #4
  403392:	2a24      	cmp	r2, #36	; 0x24
  403394:	f200 8107 	bhi.w	4035a6 <_realloc_r+0x292>
  403398:	2a13      	cmp	r2, #19
  40339a:	f200 80db 	bhi.w	403554 <_realloc_r+0x240>
  40339e:	4603      	mov	r3, r0
  4033a0:	462a      	mov	r2, r5
  4033a2:	6811      	ldr	r1, [r2, #0]
  4033a4:	6019      	str	r1, [r3, #0]
  4033a6:	6851      	ldr	r1, [r2, #4]
  4033a8:	6059      	str	r1, [r3, #4]
  4033aa:	6892      	ldr	r2, [r2, #8]
  4033ac:	609a      	str	r2, [r3, #8]
  4033ae:	4629      	mov	r1, r5
  4033b0:	4640      	mov	r0, r8
  4033b2:	f7ff f86f 	bl	402494 <_free_r>
  4033b6:	e01c      	b.n	4033f2 <_realloc_r+0xde>
  4033b8:	f027 0707 	bic.w	r7, r7, #7
  4033bc:	2f00      	cmp	r7, #0
  4033be:	463a      	mov	r2, r7
  4033c0:	dabf      	bge.n	403342 <_realloc_r+0x2e>
  4033c2:	2600      	movs	r6, #0
  4033c4:	230c      	movs	r3, #12
  4033c6:	4630      	mov	r0, r6
  4033c8:	f8c8 3000 	str.w	r3, [r8]
  4033cc:	b003      	add	sp, #12
  4033ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4033d2:	462e      	mov	r6, r5
  4033d4:	1be3      	subs	r3, r4, r7
  4033d6:	2b0f      	cmp	r3, #15
  4033d8:	d81e      	bhi.n	403418 <_realloc_r+0x104>
  4033da:	f8d9 3004 	ldr.w	r3, [r9, #4]
  4033de:	f003 0301 	and.w	r3, r3, #1
  4033e2:	4323      	orrs	r3, r4
  4033e4:	444c      	add	r4, r9
  4033e6:	f8c9 3004 	str.w	r3, [r9, #4]
  4033ea:	6863      	ldr	r3, [r4, #4]
  4033ec:	f043 0301 	orr.w	r3, r3, #1
  4033f0:	6063      	str	r3, [r4, #4]
  4033f2:	4640      	mov	r0, r8
  4033f4:	f7ff ff88 	bl	403308 <__malloc_unlock>
  4033f8:	4630      	mov	r0, r6
  4033fa:	b003      	add	sp, #12
  4033fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403400:	f023 0303 	bic.w	r3, r3, #3
  403404:	18e1      	adds	r1, r4, r3
  403406:	4291      	cmp	r1, r2
  403408:	db1f      	blt.n	40344a <_realloc_r+0x136>
  40340a:	68c3      	ldr	r3, [r0, #12]
  40340c:	6882      	ldr	r2, [r0, #8]
  40340e:	462e      	mov	r6, r5
  403410:	60d3      	str	r3, [r2, #12]
  403412:	460c      	mov	r4, r1
  403414:	609a      	str	r2, [r3, #8]
  403416:	e7dd      	b.n	4033d4 <_realloc_r+0xc0>
  403418:	f8d9 2004 	ldr.w	r2, [r9, #4]
  40341c:	eb09 0107 	add.w	r1, r9, r7
  403420:	f002 0201 	and.w	r2, r2, #1
  403424:	444c      	add	r4, r9
  403426:	f043 0301 	orr.w	r3, r3, #1
  40342a:	4317      	orrs	r7, r2
  40342c:	f8c9 7004 	str.w	r7, [r9, #4]
  403430:	604b      	str	r3, [r1, #4]
  403432:	6863      	ldr	r3, [r4, #4]
  403434:	f043 0301 	orr.w	r3, r3, #1
  403438:	3108      	adds	r1, #8
  40343a:	6063      	str	r3, [r4, #4]
  40343c:	4640      	mov	r0, r8
  40343e:	f7ff f829 	bl	402494 <_free_r>
  403442:	e7d6      	b.n	4033f2 <_realloc_r+0xde>
  403444:	4611      	mov	r1, r2
  403446:	f7ff bb43 	b.w	402ad0 <_malloc_r>
  40344a:	f01e 0f01 	tst.w	lr, #1
  40344e:	d18e      	bne.n	40336e <_realloc_r+0x5a>
  403450:	f855 1c08 	ldr.w	r1, [r5, #-8]
  403454:	eba9 0a01 	sub.w	sl, r9, r1
  403458:	f8da 1004 	ldr.w	r1, [sl, #4]
  40345c:	f021 0103 	bic.w	r1, r1, #3
  403460:	440b      	add	r3, r1
  403462:	4423      	add	r3, r4
  403464:	4293      	cmp	r3, r2
  403466:	db25      	blt.n	4034b4 <_realloc_r+0x1a0>
  403468:	68c2      	ldr	r2, [r0, #12]
  40346a:	6881      	ldr	r1, [r0, #8]
  40346c:	4656      	mov	r6, sl
  40346e:	60ca      	str	r2, [r1, #12]
  403470:	6091      	str	r1, [r2, #8]
  403472:	f8da 100c 	ldr.w	r1, [sl, #12]
  403476:	f856 0f08 	ldr.w	r0, [r6, #8]!
  40347a:	1f22      	subs	r2, r4, #4
  40347c:	2a24      	cmp	r2, #36	; 0x24
  40347e:	60c1      	str	r1, [r0, #12]
  403480:	6088      	str	r0, [r1, #8]
  403482:	f200 8094 	bhi.w	4035ae <_realloc_r+0x29a>
  403486:	2a13      	cmp	r2, #19
  403488:	d96f      	bls.n	40356a <_realloc_r+0x256>
  40348a:	6829      	ldr	r1, [r5, #0]
  40348c:	f8ca 1008 	str.w	r1, [sl, #8]
  403490:	6869      	ldr	r1, [r5, #4]
  403492:	f8ca 100c 	str.w	r1, [sl, #12]
  403496:	2a1b      	cmp	r2, #27
  403498:	f200 80a2 	bhi.w	4035e0 <_realloc_r+0x2cc>
  40349c:	3508      	adds	r5, #8
  40349e:	f10a 0210 	add.w	r2, sl, #16
  4034a2:	e063      	b.n	40356c <_realloc_r+0x258>
  4034a4:	f855 3c08 	ldr.w	r3, [r5, #-8]
  4034a8:	eba9 0a03 	sub.w	sl, r9, r3
  4034ac:	f8da 1004 	ldr.w	r1, [sl, #4]
  4034b0:	f021 0103 	bic.w	r1, r1, #3
  4034b4:	1863      	adds	r3, r4, r1
  4034b6:	4293      	cmp	r3, r2
  4034b8:	f6ff af59 	blt.w	40336e <_realloc_r+0x5a>
  4034bc:	4656      	mov	r6, sl
  4034be:	e7d8      	b.n	403472 <_realloc_r+0x15e>
  4034c0:	6841      	ldr	r1, [r0, #4]
  4034c2:	f021 0b03 	bic.w	fp, r1, #3
  4034c6:	44a3      	add	fp, r4
  4034c8:	f107 0010 	add.w	r0, r7, #16
  4034cc:	4583      	cmp	fp, r0
  4034ce:	da56      	bge.n	40357e <_realloc_r+0x26a>
  4034d0:	f01e 0f01 	tst.w	lr, #1
  4034d4:	f47f af4b 	bne.w	40336e <_realloc_r+0x5a>
  4034d8:	f855 1c08 	ldr.w	r1, [r5, #-8]
  4034dc:	eba9 0a01 	sub.w	sl, r9, r1
  4034e0:	f8da 1004 	ldr.w	r1, [sl, #4]
  4034e4:	f021 0103 	bic.w	r1, r1, #3
  4034e8:	448b      	add	fp, r1
  4034ea:	4558      	cmp	r0, fp
  4034ec:	dce2      	bgt.n	4034b4 <_realloc_r+0x1a0>
  4034ee:	4656      	mov	r6, sl
  4034f0:	f8da 100c 	ldr.w	r1, [sl, #12]
  4034f4:	f856 0f08 	ldr.w	r0, [r6, #8]!
  4034f8:	1f22      	subs	r2, r4, #4
  4034fa:	2a24      	cmp	r2, #36	; 0x24
  4034fc:	60c1      	str	r1, [r0, #12]
  4034fe:	6088      	str	r0, [r1, #8]
  403500:	f200 808f 	bhi.w	403622 <_realloc_r+0x30e>
  403504:	2a13      	cmp	r2, #19
  403506:	f240 808a 	bls.w	40361e <_realloc_r+0x30a>
  40350a:	6829      	ldr	r1, [r5, #0]
  40350c:	f8ca 1008 	str.w	r1, [sl, #8]
  403510:	6869      	ldr	r1, [r5, #4]
  403512:	f8ca 100c 	str.w	r1, [sl, #12]
  403516:	2a1b      	cmp	r2, #27
  403518:	f200 808a 	bhi.w	403630 <_realloc_r+0x31c>
  40351c:	3508      	adds	r5, #8
  40351e:	f10a 0210 	add.w	r2, sl, #16
  403522:	6829      	ldr	r1, [r5, #0]
  403524:	6011      	str	r1, [r2, #0]
  403526:	6869      	ldr	r1, [r5, #4]
  403528:	6051      	str	r1, [r2, #4]
  40352a:	68a9      	ldr	r1, [r5, #8]
  40352c:	6091      	str	r1, [r2, #8]
  40352e:	eb0a 0107 	add.w	r1, sl, r7
  403532:	ebab 0207 	sub.w	r2, fp, r7
  403536:	f042 0201 	orr.w	r2, r2, #1
  40353a:	6099      	str	r1, [r3, #8]
  40353c:	604a      	str	r2, [r1, #4]
  40353e:	f8da 3004 	ldr.w	r3, [sl, #4]
  403542:	f003 0301 	and.w	r3, r3, #1
  403546:	431f      	orrs	r7, r3
  403548:	4640      	mov	r0, r8
  40354a:	f8ca 7004 	str.w	r7, [sl, #4]
  40354e:	f7ff fedb 	bl	403308 <__malloc_unlock>
  403552:	e751      	b.n	4033f8 <_realloc_r+0xe4>
  403554:	682b      	ldr	r3, [r5, #0]
  403556:	6003      	str	r3, [r0, #0]
  403558:	686b      	ldr	r3, [r5, #4]
  40355a:	6043      	str	r3, [r0, #4]
  40355c:	2a1b      	cmp	r2, #27
  40355e:	d82d      	bhi.n	4035bc <_realloc_r+0x2a8>
  403560:	f100 0308 	add.w	r3, r0, #8
  403564:	f105 0208 	add.w	r2, r5, #8
  403568:	e71b      	b.n	4033a2 <_realloc_r+0x8e>
  40356a:	4632      	mov	r2, r6
  40356c:	6829      	ldr	r1, [r5, #0]
  40356e:	6011      	str	r1, [r2, #0]
  403570:	6869      	ldr	r1, [r5, #4]
  403572:	6051      	str	r1, [r2, #4]
  403574:	68a9      	ldr	r1, [r5, #8]
  403576:	6091      	str	r1, [r2, #8]
  403578:	461c      	mov	r4, r3
  40357a:	46d1      	mov	r9, sl
  40357c:	e72a      	b.n	4033d4 <_realloc_r+0xc0>
  40357e:	eb09 0107 	add.w	r1, r9, r7
  403582:	ebab 0b07 	sub.w	fp, fp, r7
  403586:	f04b 0201 	orr.w	r2, fp, #1
  40358a:	6099      	str	r1, [r3, #8]
  40358c:	604a      	str	r2, [r1, #4]
  40358e:	f855 3c04 	ldr.w	r3, [r5, #-4]
  403592:	f003 0301 	and.w	r3, r3, #1
  403596:	431f      	orrs	r7, r3
  403598:	4640      	mov	r0, r8
  40359a:	f845 7c04 	str.w	r7, [r5, #-4]
  40359e:	f7ff feb3 	bl	403308 <__malloc_unlock>
  4035a2:	462e      	mov	r6, r5
  4035a4:	e728      	b.n	4033f8 <_realloc_r+0xe4>
  4035a6:	4629      	mov	r1, r5
  4035a8:	f7ff fe44 	bl	403234 <memmove>
  4035ac:	e6ff      	b.n	4033ae <_realloc_r+0x9a>
  4035ae:	4629      	mov	r1, r5
  4035b0:	4630      	mov	r0, r6
  4035b2:	461c      	mov	r4, r3
  4035b4:	46d1      	mov	r9, sl
  4035b6:	f7ff fe3d 	bl	403234 <memmove>
  4035ba:	e70b      	b.n	4033d4 <_realloc_r+0xc0>
  4035bc:	68ab      	ldr	r3, [r5, #8]
  4035be:	6083      	str	r3, [r0, #8]
  4035c0:	68eb      	ldr	r3, [r5, #12]
  4035c2:	60c3      	str	r3, [r0, #12]
  4035c4:	2a24      	cmp	r2, #36	; 0x24
  4035c6:	d017      	beq.n	4035f8 <_realloc_r+0x2e4>
  4035c8:	f100 0310 	add.w	r3, r0, #16
  4035cc:	f105 0210 	add.w	r2, r5, #16
  4035d0:	e6e7      	b.n	4033a2 <_realloc_r+0x8e>
  4035d2:	f850 3c04 	ldr.w	r3, [r0, #-4]
  4035d6:	f023 0303 	bic.w	r3, r3, #3
  4035da:	441c      	add	r4, r3
  4035dc:	462e      	mov	r6, r5
  4035de:	e6f9      	b.n	4033d4 <_realloc_r+0xc0>
  4035e0:	68a9      	ldr	r1, [r5, #8]
  4035e2:	f8ca 1010 	str.w	r1, [sl, #16]
  4035e6:	68e9      	ldr	r1, [r5, #12]
  4035e8:	f8ca 1014 	str.w	r1, [sl, #20]
  4035ec:	2a24      	cmp	r2, #36	; 0x24
  4035ee:	d00c      	beq.n	40360a <_realloc_r+0x2f6>
  4035f0:	3510      	adds	r5, #16
  4035f2:	f10a 0218 	add.w	r2, sl, #24
  4035f6:	e7b9      	b.n	40356c <_realloc_r+0x258>
  4035f8:	692b      	ldr	r3, [r5, #16]
  4035fa:	6103      	str	r3, [r0, #16]
  4035fc:	696b      	ldr	r3, [r5, #20]
  4035fe:	6143      	str	r3, [r0, #20]
  403600:	f105 0218 	add.w	r2, r5, #24
  403604:	f100 0318 	add.w	r3, r0, #24
  403608:	e6cb      	b.n	4033a2 <_realloc_r+0x8e>
  40360a:	692a      	ldr	r2, [r5, #16]
  40360c:	f8ca 2018 	str.w	r2, [sl, #24]
  403610:	696a      	ldr	r2, [r5, #20]
  403612:	f8ca 201c 	str.w	r2, [sl, #28]
  403616:	3518      	adds	r5, #24
  403618:	f10a 0220 	add.w	r2, sl, #32
  40361c:	e7a6      	b.n	40356c <_realloc_r+0x258>
  40361e:	4632      	mov	r2, r6
  403620:	e77f      	b.n	403522 <_realloc_r+0x20e>
  403622:	4629      	mov	r1, r5
  403624:	4630      	mov	r0, r6
  403626:	9301      	str	r3, [sp, #4]
  403628:	f7ff fe04 	bl	403234 <memmove>
  40362c:	9b01      	ldr	r3, [sp, #4]
  40362e:	e77e      	b.n	40352e <_realloc_r+0x21a>
  403630:	68a9      	ldr	r1, [r5, #8]
  403632:	f8ca 1010 	str.w	r1, [sl, #16]
  403636:	68e9      	ldr	r1, [r5, #12]
  403638:	f8ca 1014 	str.w	r1, [sl, #20]
  40363c:	2a24      	cmp	r2, #36	; 0x24
  40363e:	d003      	beq.n	403648 <_realloc_r+0x334>
  403640:	3510      	adds	r5, #16
  403642:	f10a 0218 	add.w	r2, sl, #24
  403646:	e76c      	b.n	403522 <_realloc_r+0x20e>
  403648:	692a      	ldr	r2, [r5, #16]
  40364a:	f8ca 2018 	str.w	r2, [sl, #24]
  40364e:	696a      	ldr	r2, [r5, #20]
  403650:	f8ca 201c 	str.w	r2, [sl, #28]
  403654:	3518      	adds	r5, #24
  403656:	f10a 0220 	add.w	r2, sl, #32
  40365a:	e762      	b.n	403522 <_realloc_r+0x20e>
  40365c:	204005a8 	.word	0x204005a8

00403660 <_sbrk_r>:
  403660:	b538      	push	{r3, r4, r5, lr}
  403662:	4c07      	ldr	r4, [pc, #28]	; (403680 <_sbrk_r+0x20>)
  403664:	2300      	movs	r3, #0
  403666:	4605      	mov	r5, r0
  403668:	4608      	mov	r0, r1
  40366a:	6023      	str	r3, [r4, #0]
  40366c:	f7fd f9cc 	bl	400a08 <_sbrk>
  403670:	1c43      	adds	r3, r0, #1
  403672:	d000      	beq.n	403676 <_sbrk_r+0x16>
  403674:	bd38      	pop	{r3, r4, r5, pc}
  403676:	6823      	ldr	r3, [r4, #0]
  403678:	2b00      	cmp	r3, #0
  40367a:	d0fb      	beq.n	403674 <_sbrk_r+0x14>
  40367c:	602b      	str	r3, [r5, #0]
  40367e:	bd38      	pop	{r3, r4, r5, pc}
  403680:	20400ab0 	.word	0x20400ab0

00403684 <__sread>:
  403684:	b510      	push	{r4, lr}
  403686:	460c      	mov	r4, r1
  403688:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  40368c:	f000 f9f6 	bl	403a7c <_read_r>
  403690:	2800      	cmp	r0, #0
  403692:	db03      	blt.n	40369c <__sread+0x18>
  403694:	6d23      	ldr	r3, [r4, #80]	; 0x50
  403696:	4403      	add	r3, r0
  403698:	6523      	str	r3, [r4, #80]	; 0x50
  40369a:	bd10      	pop	{r4, pc}
  40369c:	89a3      	ldrh	r3, [r4, #12]
  40369e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
  4036a2:	81a3      	strh	r3, [r4, #12]
  4036a4:	bd10      	pop	{r4, pc}
  4036a6:	bf00      	nop

004036a8 <__swrite>:
  4036a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4036ac:	4616      	mov	r6, r2
  4036ae:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
  4036b2:	461f      	mov	r7, r3
  4036b4:	05d3      	lsls	r3, r2, #23
  4036b6:	460c      	mov	r4, r1
  4036b8:	4605      	mov	r5, r0
  4036ba:	d507      	bpl.n	4036cc <__swrite+0x24>
  4036bc:	2200      	movs	r2, #0
  4036be:	2302      	movs	r3, #2
  4036c0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  4036c4:	f000 f9c4 	bl	403a50 <_lseek_r>
  4036c8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  4036cc:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  4036d0:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
  4036d4:	81a2      	strh	r2, [r4, #12]
  4036d6:	463b      	mov	r3, r7
  4036d8:	4632      	mov	r2, r6
  4036da:	4628      	mov	r0, r5
  4036dc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  4036e0:	f000 b8a4 	b.w	40382c <_write_r>

004036e4 <__sseek>:
  4036e4:	b510      	push	{r4, lr}
  4036e6:	460c      	mov	r4, r1
  4036e8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  4036ec:	f000 f9b0 	bl	403a50 <_lseek_r>
  4036f0:	89a3      	ldrh	r3, [r4, #12]
  4036f2:	1c42      	adds	r2, r0, #1
  4036f4:	bf0e      	itee	eq
  4036f6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
  4036fa:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
  4036fe:	6520      	strne	r0, [r4, #80]	; 0x50
  403700:	81a3      	strh	r3, [r4, #12]
  403702:	bd10      	pop	{r4, pc}

00403704 <__sclose>:
  403704:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  403708:	f000 b908 	b.w	40391c <_close_r>

0040370c <__swbuf_r>:
  40370c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40370e:	460d      	mov	r5, r1
  403710:	4614      	mov	r4, r2
  403712:	4606      	mov	r6, r0
  403714:	b110      	cbz	r0, 40371c <__swbuf_r+0x10>
  403716:	6b83      	ldr	r3, [r0, #56]	; 0x38
  403718:	2b00      	cmp	r3, #0
  40371a:	d04b      	beq.n	4037b4 <__swbuf_r+0xa8>
  40371c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  403720:	69a3      	ldr	r3, [r4, #24]
  403722:	60a3      	str	r3, [r4, #8]
  403724:	b291      	uxth	r1, r2
  403726:	0708      	lsls	r0, r1, #28
  403728:	d539      	bpl.n	40379e <__swbuf_r+0x92>
  40372a:	6923      	ldr	r3, [r4, #16]
  40372c:	2b00      	cmp	r3, #0
  40372e:	d036      	beq.n	40379e <__swbuf_r+0x92>
  403730:	b2ed      	uxtb	r5, r5
  403732:	0489      	lsls	r1, r1, #18
  403734:	462f      	mov	r7, r5
  403736:	d515      	bpl.n	403764 <__swbuf_r+0x58>
  403738:	6822      	ldr	r2, [r4, #0]
  40373a:	6961      	ldr	r1, [r4, #20]
  40373c:	1ad3      	subs	r3, r2, r3
  40373e:	428b      	cmp	r3, r1
  403740:	da1c      	bge.n	40377c <__swbuf_r+0x70>
  403742:	3301      	adds	r3, #1
  403744:	68a1      	ldr	r1, [r4, #8]
  403746:	1c50      	adds	r0, r2, #1
  403748:	3901      	subs	r1, #1
  40374a:	60a1      	str	r1, [r4, #8]
  40374c:	6020      	str	r0, [r4, #0]
  40374e:	7015      	strb	r5, [r2, #0]
  403750:	6962      	ldr	r2, [r4, #20]
  403752:	429a      	cmp	r2, r3
  403754:	d01a      	beq.n	40378c <__swbuf_r+0x80>
  403756:	89a3      	ldrh	r3, [r4, #12]
  403758:	07db      	lsls	r3, r3, #31
  40375a:	d501      	bpl.n	403760 <__swbuf_r+0x54>
  40375c:	2d0a      	cmp	r5, #10
  40375e:	d015      	beq.n	40378c <__swbuf_r+0x80>
  403760:	4638      	mov	r0, r7
  403762:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  403764:	6e61      	ldr	r1, [r4, #100]	; 0x64
  403766:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  40376a:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
  40376e:	81a2      	strh	r2, [r4, #12]
  403770:	6822      	ldr	r2, [r4, #0]
  403772:	6661      	str	r1, [r4, #100]	; 0x64
  403774:	6961      	ldr	r1, [r4, #20]
  403776:	1ad3      	subs	r3, r2, r3
  403778:	428b      	cmp	r3, r1
  40377a:	dbe2      	blt.n	403742 <__swbuf_r+0x36>
  40377c:	4621      	mov	r1, r4
  40377e:	4630      	mov	r0, r6
  403780:	f7fe fd0a 	bl	402198 <_fflush_r>
  403784:	b940      	cbnz	r0, 403798 <__swbuf_r+0x8c>
  403786:	6822      	ldr	r2, [r4, #0]
  403788:	2301      	movs	r3, #1
  40378a:	e7db      	b.n	403744 <__swbuf_r+0x38>
  40378c:	4621      	mov	r1, r4
  40378e:	4630      	mov	r0, r6
  403790:	f7fe fd02 	bl	402198 <_fflush_r>
  403794:	2800      	cmp	r0, #0
  403796:	d0e3      	beq.n	403760 <__swbuf_r+0x54>
  403798:	f04f 37ff 	mov.w	r7, #4294967295
  40379c:	e7e0      	b.n	403760 <__swbuf_r+0x54>
  40379e:	4621      	mov	r1, r4
  4037a0:	4630      	mov	r0, r6
  4037a2:	f7fe fbe5 	bl	401f70 <__swsetup_r>
  4037a6:	2800      	cmp	r0, #0
  4037a8:	d1f6      	bne.n	403798 <__swbuf_r+0x8c>
  4037aa:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  4037ae:	6923      	ldr	r3, [r4, #16]
  4037b0:	b291      	uxth	r1, r2
  4037b2:	e7bd      	b.n	403730 <__swbuf_r+0x24>
  4037b4:	f7fe fd48 	bl	402248 <__sinit>
  4037b8:	e7b0      	b.n	40371c <__swbuf_r+0x10>
  4037ba:	bf00      	nop

004037bc <_wcrtomb_r>:
  4037bc:	b5f0      	push	{r4, r5, r6, r7, lr}
  4037be:	4606      	mov	r6, r0
  4037c0:	b085      	sub	sp, #20
  4037c2:	461f      	mov	r7, r3
  4037c4:	b189      	cbz	r1, 4037ea <_wcrtomb_r+0x2e>
  4037c6:	4c10      	ldr	r4, [pc, #64]	; (403808 <_wcrtomb_r+0x4c>)
  4037c8:	4d10      	ldr	r5, [pc, #64]	; (40380c <_wcrtomb_r+0x50>)
  4037ca:	6824      	ldr	r4, [r4, #0]
  4037cc:	6b64      	ldr	r4, [r4, #52]	; 0x34
  4037ce:	2c00      	cmp	r4, #0
  4037d0:	bf08      	it	eq
  4037d2:	462c      	moveq	r4, r5
  4037d4:	f8d4 40e0 	ldr.w	r4, [r4, #224]	; 0xe0
  4037d8:	47a0      	blx	r4
  4037da:	1c43      	adds	r3, r0, #1
  4037dc:	d103      	bne.n	4037e6 <_wcrtomb_r+0x2a>
  4037de:	2200      	movs	r2, #0
  4037e0:	238a      	movs	r3, #138	; 0x8a
  4037e2:	603a      	str	r2, [r7, #0]
  4037e4:	6033      	str	r3, [r6, #0]
  4037e6:	b005      	add	sp, #20
  4037e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4037ea:	460c      	mov	r4, r1
  4037ec:	4906      	ldr	r1, [pc, #24]	; (403808 <_wcrtomb_r+0x4c>)
  4037ee:	4a07      	ldr	r2, [pc, #28]	; (40380c <_wcrtomb_r+0x50>)
  4037f0:	6809      	ldr	r1, [r1, #0]
  4037f2:	6b49      	ldr	r1, [r1, #52]	; 0x34
  4037f4:	2900      	cmp	r1, #0
  4037f6:	bf08      	it	eq
  4037f8:	4611      	moveq	r1, r2
  4037fa:	4622      	mov	r2, r4
  4037fc:	f8d1 40e0 	ldr.w	r4, [r1, #224]	; 0xe0
  403800:	a901      	add	r1, sp, #4
  403802:	47a0      	blx	r4
  403804:	e7e9      	b.n	4037da <_wcrtomb_r+0x1e>
  403806:	bf00      	nop
  403808:	20400008 	.word	0x20400008
  40380c:	2040043c 	.word	0x2040043c

00403810 <__ascii_wctomb>:
  403810:	b121      	cbz	r1, 40381c <__ascii_wctomb+0xc>
  403812:	2aff      	cmp	r2, #255	; 0xff
  403814:	d804      	bhi.n	403820 <__ascii_wctomb+0x10>
  403816:	700a      	strb	r2, [r1, #0]
  403818:	2001      	movs	r0, #1
  40381a:	4770      	bx	lr
  40381c:	4608      	mov	r0, r1
  40381e:	4770      	bx	lr
  403820:	238a      	movs	r3, #138	; 0x8a
  403822:	6003      	str	r3, [r0, #0]
  403824:	f04f 30ff 	mov.w	r0, #4294967295
  403828:	4770      	bx	lr
  40382a:	bf00      	nop

0040382c <_write_r>:
  40382c:	b570      	push	{r4, r5, r6, lr}
  40382e:	460d      	mov	r5, r1
  403830:	4c08      	ldr	r4, [pc, #32]	; (403854 <_write_r+0x28>)
  403832:	4611      	mov	r1, r2
  403834:	4606      	mov	r6, r0
  403836:	461a      	mov	r2, r3
  403838:	4628      	mov	r0, r5
  40383a:	2300      	movs	r3, #0
  40383c:	6023      	str	r3, [r4, #0]
  40383e:	f7fc fd71 	bl	400324 <_write>
  403842:	1c43      	adds	r3, r0, #1
  403844:	d000      	beq.n	403848 <_write_r+0x1c>
  403846:	bd70      	pop	{r4, r5, r6, pc}
  403848:	6823      	ldr	r3, [r4, #0]
  40384a:	2b00      	cmp	r3, #0
  40384c:	d0fb      	beq.n	403846 <_write_r+0x1a>
  40384e:	6033      	str	r3, [r6, #0]
  403850:	bd70      	pop	{r4, r5, r6, pc}
  403852:	bf00      	nop
  403854:	20400ab0 	.word	0x20400ab0

00403858 <__register_exitproc>:
  403858:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  40385c:	4d2c      	ldr	r5, [pc, #176]	; (403910 <__register_exitproc+0xb8>)
  40385e:	4606      	mov	r6, r0
  403860:	6828      	ldr	r0, [r5, #0]
  403862:	4698      	mov	r8, r3
  403864:	460f      	mov	r7, r1
  403866:	4691      	mov	r9, r2
  403868:	f7ff f8ae 	bl	4029c8 <__retarget_lock_acquire_recursive>
  40386c:	4b29      	ldr	r3, [pc, #164]	; (403914 <__register_exitproc+0xbc>)
  40386e:	681c      	ldr	r4, [r3, #0]
  403870:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  403874:	2b00      	cmp	r3, #0
  403876:	d03e      	beq.n	4038f6 <__register_exitproc+0x9e>
  403878:	685a      	ldr	r2, [r3, #4]
  40387a:	2a1f      	cmp	r2, #31
  40387c:	dc1c      	bgt.n	4038b8 <__register_exitproc+0x60>
  40387e:	f102 0e01 	add.w	lr, r2, #1
  403882:	b176      	cbz	r6, 4038a2 <__register_exitproc+0x4a>
  403884:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  403888:	2401      	movs	r4, #1
  40388a:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  40388e:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  403892:	4094      	lsls	r4, r2
  403894:	4320      	orrs	r0, r4
  403896:	2e02      	cmp	r6, #2
  403898:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  40389c:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  4038a0:	d023      	beq.n	4038ea <__register_exitproc+0x92>
  4038a2:	3202      	adds	r2, #2
  4038a4:	f8c3 e004 	str.w	lr, [r3, #4]
  4038a8:	6828      	ldr	r0, [r5, #0]
  4038aa:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  4038ae:	f7ff f88d 	bl	4029cc <__retarget_lock_release_recursive>
  4038b2:	2000      	movs	r0, #0
  4038b4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4038b8:	4b17      	ldr	r3, [pc, #92]	; (403918 <__register_exitproc+0xc0>)
  4038ba:	b30b      	cbz	r3, 403900 <__register_exitproc+0xa8>
  4038bc:	f44f 70c8 	mov.w	r0, #400	; 0x190
  4038c0:	f7ff f8fe 	bl	402ac0 <malloc>
  4038c4:	4603      	mov	r3, r0
  4038c6:	b1d8      	cbz	r0, 403900 <__register_exitproc+0xa8>
  4038c8:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  4038cc:	6002      	str	r2, [r0, #0]
  4038ce:	2100      	movs	r1, #0
  4038d0:	6041      	str	r1, [r0, #4]
  4038d2:	460a      	mov	r2, r1
  4038d4:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  4038d8:	f04f 0e01 	mov.w	lr, #1
  4038dc:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  4038e0:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  4038e4:	2e00      	cmp	r6, #0
  4038e6:	d0dc      	beq.n	4038a2 <__register_exitproc+0x4a>
  4038e8:	e7cc      	b.n	403884 <__register_exitproc+0x2c>
  4038ea:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  4038ee:	430c      	orrs	r4, r1
  4038f0:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  4038f4:	e7d5      	b.n	4038a2 <__register_exitproc+0x4a>
  4038f6:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  4038fa:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  4038fe:	e7bb      	b.n	403878 <__register_exitproc+0x20>
  403900:	6828      	ldr	r0, [r5, #0]
  403902:	f7ff f863 	bl	4029cc <__retarget_lock_release_recursive>
  403906:	f04f 30ff 	mov.w	r0, #4294967295
  40390a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40390e:	bf00      	nop
  403910:	20400438 	.word	0x20400438
  403914:	00403de8 	.word	0x00403de8
  403918:	00402ac1 	.word	0x00402ac1

0040391c <_close_r>:
  40391c:	b538      	push	{r3, r4, r5, lr}
  40391e:	4c07      	ldr	r4, [pc, #28]	; (40393c <_close_r+0x20>)
  403920:	2300      	movs	r3, #0
  403922:	4605      	mov	r5, r0
  403924:	4608      	mov	r0, r1
  403926:	6023      	str	r3, [r4, #0]
  403928:	f7fd f88a 	bl	400a40 <_close>
  40392c:	1c43      	adds	r3, r0, #1
  40392e:	d000      	beq.n	403932 <_close_r+0x16>
  403930:	bd38      	pop	{r3, r4, r5, pc}
  403932:	6823      	ldr	r3, [r4, #0]
  403934:	2b00      	cmp	r3, #0
  403936:	d0fb      	beq.n	403930 <_close_r+0x14>
  403938:	602b      	str	r3, [r5, #0]
  40393a:	bd38      	pop	{r3, r4, r5, pc}
  40393c:	20400ab0 	.word	0x20400ab0

00403940 <_fclose_r>:
  403940:	b570      	push	{r4, r5, r6, lr}
  403942:	b159      	cbz	r1, 40395c <_fclose_r+0x1c>
  403944:	4605      	mov	r5, r0
  403946:	460c      	mov	r4, r1
  403948:	b110      	cbz	r0, 403950 <_fclose_r+0x10>
  40394a:	6b83      	ldr	r3, [r0, #56]	; 0x38
  40394c:	2b00      	cmp	r3, #0
  40394e:	d03c      	beq.n	4039ca <_fclose_r+0x8a>
  403950:	6e63      	ldr	r3, [r4, #100]	; 0x64
  403952:	07d8      	lsls	r0, r3, #31
  403954:	d505      	bpl.n	403962 <_fclose_r+0x22>
  403956:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40395a:	b92b      	cbnz	r3, 403968 <_fclose_r+0x28>
  40395c:	2600      	movs	r6, #0
  40395e:	4630      	mov	r0, r6
  403960:	bd70      	pop	{r4, r5, r6, pc}
  403962:	89a3      	ldrh	r3, [r4, #12]
  403964:	0599      	lsls	r1, r3, #22
  403966:	d53c      	bpl.n	4039e2 <_fclose_r+0xa2>
  403968:	4621      	mov	r1, r4
  40396a:	4628      	mov	r0, r5
  40396c:	f7fe fb74 	bl	402058 <__sflush_r>
  403970:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  403972:	4606      	mov	r6, r0
  403974:	b133      	cbz	r3, 403984 <_fclose_r+0x44>
  403976:	69e1      	ldr	r1, [r4, #28]
  403978:	4628      	mov	r0, r5
  40397a:	4798      	blx	r3
  40397c:	2800      	cmp	r0, #0
  40397e:	bfb8      	it	lt
  403980:	f04f 36ff 	movlt.w	r6, #4294967295
  403984:	89a3      	ldrh	r3, [r4, #12]
  403986:	061a      	lsls	r2, r3, #24
  403988:	d422      	bmi.n	4039d0 <_fclose_r+0x90>
  40398a:	6b21      	ldr	r1, [r4, #48]	; 0x30
  40398c:	b141      	cbz	r1, 4039a0 <_fclose_r+0x60>
  40398e:	f104 0340 	add.w	r3, r4, #64	; 0x40
  403992:	4299      	cmp	r1, r3
  403994:	d002      	beq.n	40399c <_fclose_r+0x5c>
  403996:	4628      	mov	r0, r5
  403998:	f7fe fd7c 	bl	402494 <_free_r>
  40399c:	2300      	movs	r3, #0
  40399e:	6323      	str	r3, [r4, #48]	; 0x30
  4039a0:	6c61      	ldr	r1, [r4, #68]	; 0x44
  4039a2:	b121      	cbz	r1, 4039ae <_fclose_r+0x6e>
  4039a4:	4628      	mov	r0, r5
  4039a6:	f7fe fd75 	bl	402494 <_free_r>
  4039aa:	2300      	movs	r3, #0
  4039ac:	6463      	str	r3, [r4, #68]	; 0x44
  4039ae:	f7fe fc77 	bl	4022a0 <__sfp_lock_acquire>
  4039b2:	6e63      	ldr	r3, [r4, #100]	; 0x64
  4039b4:	2200      	movs	r2, #0
  4039b6:	07db      	lsls	r3, r3, #31
  4039b8:	81a2      	strh	r2, [r4, #12]
  4039ba:	d50e      	bpl.n	4039da <_fclose_r+0x9a>
  4039bc:	6da0      	ldr	r0, [r4, #88]	; 0x58
  4039be:	f7ff f801 	bl	4029c4 <__retarget_lock_close_recursive>
  4039c2:	f7fe fc73 	bl	4022ac <__sfp_lock_release>
  4039c6:	4630      	mov	r0, r6
  4039c8:	bd70      	pop	{r4, r5, r6, pc}
  4039ca:	f7fe fc3d 	bl	402248 <__sinit>
  4039ce:	e7bf      	b.n	403950 <_fclose_r+0x10>
  4039d0:	6921      	ldr	r1, [r4, #16]
  4039d2:	4628      	mov	r0, r5
  4039d4:	f7fe fd5e 	bl	402494 <_free_r>
  4039d8:	e7d7      	b.n	40398a <_fclose_r+0x4a>
  4039da:	6da0      	ldr	r0, [r4, #88]	; 0x58
  4039dc:	f7fe fff6 	bl	4029cc <__retarget_lock_release_recursive>
  4039e0:	e7ec      	b.n	4039bc <_fclose_r+0x7c>
  4039e2:	6da0      	ldr	r0, [r4, #88]	; 0x58
  4039e4:	f7fe fff0 	bl	4029c8 <__retarget_lock_acquire_recursive>
  4039e8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4039ec:	2b00      	cmp	r3, #0
  4039ee:	d1bb      	bne.n	403968 <_fclose_r+0x28>
  4039f0:	6e66      	ldr	r6, [r4, #100]	; 0x64
  4039f2:	f016 0601 	ands.w	r6, r6, #1
  4039f6:	d1b1      	bne.n	40395c <_fclose_r+0x1c>
  4039f8:	6da0      	ldr	r0, [r4, #88]	; 0x58
  4039fa:	f7fe ffe7 	bl	4029cc <__retarget_lock_release_recursive>
  4039fe:	4630      	mov	r0, r6
  403a00:	bd70      	pop	{r4, r5, r6, pc}
  403a02:	bf00      	nop

00403a04 <_fstat_r>:
  403a04:	b538      	push	{r3, r4, r5, lr}
  403a06:	460b      	mov	r3, r1
  403a08:	4c07      	ldr	r4, [pc, #28]	; (403a28 <_fstat_r+0x24>)
  403a0a:	4605      	mov	r5, r0
  403a0c:	4611      	mov	r1, r2
  403a0e:	4618      	mov	r0, r3
  403a10:	2300      	movs	r3, #0
  403a12:	6023      	str	r3, [r4, #0]
  403a14:	f7fd f817 	bl	400a46 <_fstat>
  403a18:	1c43      	adds	r3, r0, #1
  403a1a:	d000      	beq.n	403a1e <_fstat_r+0x1a>
  403a1c:	bd38      	pop	{r3, r4, r5, pc}
  403a1e:	6823      	ldr	r3, [r4, #0]
  403a20:	2b00      	cmp	r3, #0
  403a22:	d0fb      	beq.n	403a1c <_fstat_r+0x18>
  403a24:	602b      	str	r3, [r5, #0]
  403a26:	bd38      	pop	{r3, r4, r5, pc}
  403a28:	20400ab0 	.word	0x20400ab0

00403a2c <_isatty_r>:
  403a2c:	b538      	push	{r3, r4, r5, lr}
  403a2e:	4c07      	ldr	r4, [pc, #28]	; (403a4c <_isatty_r+0x20>)
  403a30:	2300      	movs	r3, #0
  403a32:	4605      	mov	r5, r0
  403a34:	4608      	mov	r0, r1
  403a36:	6023      	str	r3, [r4, #0]
  403a38:	f7fd f80a 	bl	400a50 <_isatty>
  403a3c:	1c43      	adds	r3, r0, #1
  403a3e:	d000      	beq.n	403a42 <_isatty_r+0x16>
  403a40:	bd38      	pop	{r3, r4, r5, pc}
  403a42:	6823      	ldr	r3, [r4, #0]
  403a44:	2b00      	cmp	r3, #0
  403a46:	d0fb      	beq.n	403a40 <_isatty_r+0x14>
  403a48:	602b      	str	r3, [r5, #0]
  403a4a:	bd38      	pop	{r3, r4, r5, pc}
  403a4c:	20400ab0 	.word	0x20400ab0

00403a50 <_lseek_r>:
  403a50:	b570      	push	{r4, r5, r6, lr}
  403a52:	460d      	mov	r5, r1
  403a54:	4c08      	ldr	r4, [pc, #32]	; (403a78 <_lseek_r+0x28>)
  403a56:	4611      	mov	r1, r2
  403a58:	4606      	mov	r6, r0
  403a5a:	461a      	mov	r2, r3
  403a5c:	4628      	mov	r0, r5
  403a5e:	2300      	movs	r3, #0
  403a60:	6023      	str	r3, [r4, #0]
  403a62:	f7fc fff7 	bl	400a54 <_lseek>
  403a66:	1c43      	adds	r3, r0, #1
  403a68:	d000      	beq.n	403a6c <_lseek_r+0x1c>
  403a6a:	bd70      	pop	{r4, r5, r6, pc}
  403a6c:	6823      	ldr	r3, [r4, #0]
  403a6e:	2b00      	cmp	r3, #0
  403a70:	d0fb      	beq.n	403a6a <_lseek_r+0x1a>
  403a72:	6033      	str	r3, [r6, #0]
  403a74:	bd70      	pop	{r4, r5, r6, pc}
  403a76:	bf00      	nop
  403a78:	20400ab0 	.word	0x20400ab0

00403a7c <_read_r>:
  403a7c:	b570      	push	{r4, r5, r6, lr}
  403a7e:	460d      	mov	r5, r1
  403a80:	4c08      	ldr	r4, [pc, #32]	; (403aa4 <_read_r+0x28>)
  403a82:	4611      	mov	r1, r2
  403a84:	4606      	mov	r6, r0
  403a86:	461a      	mov	r2, r3
  403a88:	4628      	mov	r0, r5
  403a8a:	2300      	movs	r3, #0
  403a8c:	6023      	str	r3, [r4, #0]
  403a8e:	f7fc fba1 	bl	4001d4 <_read>
  403a92:	1c43      	adds	r3, r0, #1
  403a94:	d000      	beq.n	403a98 <_read_r+0x1c>
  403a96:	bd70      	pop	{r4, r5, r6, pc}
  403a98:	6823      	ldr	r3, [r4, #0]
  403a9a:	2b00      	cmp	r3, #0
  403a9c:	d0fb      	beq.n	403a96 <_read_r+0x1a>
  403a9e:	6033      	str	r3, [r6, #0]
  403aa0:	bd70      	pop	{r4, r5, r6, pc}
  403aa2:	bf00      	nop
  403aa4:	20400ab0 	.word	0x20400ab0

00403aa8 <__aeabi_uldivmod>:
  403aa8:	b953      	cbnz	r3, 403ac0 <__aeabi_uldivmod+0x18>
  403aaa:	b94a      	cbnz	r2, 403ac0 <__aeabi_uldivmod+0x18>
  403aac:	2900      	cmp	r1, #0
  403aae:	bf08      	it	eq
  403ab0:	2800      	cmpeq	r0, #0
  403ab2:	bf1c      	itt	ne
  403ab4:	f04f 31ff 	movne.w	r1, #4294967295
  403ab8:	f04f 30ff 	movne.w	r0, #4294967295
  403abc:	f000 b97a 	b.w	403db4 <__aeabi_idiv0>
  403ac0:	f1ad 0c08 	sub.w	ip, sp, #8
  403ac4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  403ac8:	f000 f806 	bl	403ad8 <__udivmoddi4>
  403acc:	f8dd e004 	ldr.w	lr, [sp, #4]
  403ad0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  403ad4:	b004      	add	sp, #16
  403ad6:	4770      	bx	lr

00403ad8 <__udivmoddi4>:
  403ad8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  403adc:	468c      	mov	ip, r1
  403ade:	460d      	mov	r5, r1
  403ae0:	4604      	mov	r4, r0
  403ae2:	9e08      	ldr	r6, [sp, #32]
  403ae4:	2b00      	cmp	r3, #0
  403ae6:	d151      	bne.n	403b8c <__udivmoddi4+0xb4>
  403ae8:	428a      	cmp	r2, r1
  403aea:	4617      	mov	r7, r2
  403aec:	d96d      	bls.n	403bca <__udivmoddi4+0xf2>
  403aee:	fab2 fe82 	clz	lr, r2
  403af2:	f1be 0f00 	cmp.w	lr, #0
  403af6:	d00b      	beq.n	403b10 <__udivmoddi4+0x38>
  403af8:	f1ce 0c20 	rsb	ip, lr, #32
  403afc:	fa01 f50e 	lsl.w	r5, r1, lr
  403b00:	fa20 fc0c 	lsr.w	ip, r0, ip
  403b04:	fa02 f70e 	lsl.w	r7, r2, lr
  403b08:	ea4c 0c05 	orr.w	ip, ip, r5
  403b0c:	fa00 f40e 	lsl.w	r4, r0, lr
  403b10:	ea4f 4a17 	mov.w	sl, r7, lsr #16
  403b14:	0c25      	lsrs	r5, r4, #16
  403b16:	fbbc f8fa 	udiv	r8, ip, sl
  403b1a:	fa1f f987 	uxth.w	r9, r7
  403b1e:	fb0a cc18 	mls	ip, sl, r8, ip
  403b22:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
  403b26:	fb08 f309 	mul.w	r3, r8, r9
  403b2a:	42ab      	cmp	r3, r5
  403b2c:	d90a      	bls.n	403b44 <__udivmoddi4+0x6c>
  403b2e:	19ed      	adds	r5, r5, r7
  403b30:	f108 32ff 	add.w	r2, r8, #4294967295
  403b34:	f080 8123 	bcs.w	403d7e <__udivmoddi4+0x2a6>
  403b38:	42ab      	cmp	r3, r5
  403b3a:	f240 8120 	bls.w	403d7e <__udivmoddi4+0x2a6>
  403b3e:	f1a8 0802 	sub.w	r8, r8, #2
  403b42:	443d      	add	r5, r7
  403b44:	1aed      	subs	r5, r5, r3
  403b46:	b2a4      	uxth	r4, r4
  403b48:	fbb5 f0fa 	udiv	r0, r5, sl
  403b4c:	fb0a 5510 	mls	r5, sl, r0, r5
  403b50:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  403b54:	fb00 f909 	mul.w	r9, r0, r9
  403b58:	45a1      	cmp	r9, r4
  403b5a:	d909      	bls.n	403b70 <__udivmoddi4+0x98>
  403b5c:	19e4      	adds	r4, r4, r7
  403b5e:	f100 33ff 	add.w	r3, r0, #4294967295
  403b62:	f080 810a 	bcs.w	403d7a <__udivmoddi4+0x2a2>
  403b66:	45a1      	cmp	r9, r4
  403b68:	f240 8107 	bls.w	403d7a <__udivmoddi4+0x2a2>
  403b6c:	3802      	subs	r0, #2
  403b6e:	443c      	add	r4, r7
  403b70:	eba4 0409 	sub.w	r4, r4, r9
  403b74:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  403b78:	2100      	movs	r1, #0
  403b7a:	2e00      	cmp	r6, #0
  403b7c:	d061      	beq.n	403c42 <__udivmoddi4+0x16a>
  403b7e:	fa24 f40e 	lsr.w	r4, r4, lr
  403b82:	2300      	movs	r3, #0
  403b84:	6034      	str	r4, [r6, #0]
  403b86:	6073      	str	r3, [r6, #4]
  403b88:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  403b8c:	428b      	cmp	r3, r1
  403b8e:	d907      	bls.n	403ba0 <__udivmoddi4+0xc8>
  403b90:	2e00      	cmp	r6, #0
  403b92:	d054      	beq.n	403c3e <__udivmoddi4+0x166>
  403b94:	2100      	movs	r1, #0
  403b96:	e886 0021 	stmia.w	r6, {r0, r5}
  403b9a:	4608      	mov	r0, r1
  403b9c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  403ba0:	fab3 f183 	clz	r1, r3
  403ba4:	2900      	cmp	r1, #0
  403ba6:	f040 808e 	bne.w	403cc6 <__udivmoddi4+0x1ee>
  403baa:	42ab      	cmp	r3, r5
  403bac:	d302      	bcc.n	403bb4 <__udivmoddi4+0xdc>
  403bae:	4282      	cmp	r2, r0
  403bb0:	f200 80fa 	bhi.w	403da8 <__udivmoddi4+0x2d0>
  403bb4:	1a84      	subs	r4, r0, r2
  403bb6:	eb65 0503 	sbc.w	r5, r5, r3
  403bba:	2001      	movs	r0, #1
  403bbc:	46ac      	mov	ip, r5
  403bbe:	2e00      	cmp	r6, #0
  403bc0:	d03f      	beq.n	403c42 <__udivmoddi4+0x16a>
  403bc2:	e886 1010 	stmia.w	r6, {r4, ip}
  403bc6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  403bca:	b912      	cbnz	r2, 403bd2 <__udivmoddi4+0xfa>
  403bcc:	2701      	movs	r7, #1
  403bce:	fbb7 f7f2 	udiv	r7, r7, r2
  403bd2:	fab7 fe87 	clz	lr, r7
  403bd6:	f1be 0f00 	cmp.w	lr, #0
  403bda:	d134      	bne.n	403c46 <__udivmoddi4+0x16e>
  403bdc:	1beb      	subs	r3, r5, r7
  403bde:	0c3a      	lsrs	r2, r7, #16
  403be0:	fa1f fc87 	uxth.w	ip, r7
  403be4:	2101      	movs	r1, #1
  403be6:	fbb3 f8f2 	udiv	r8, r3, r2
  403bea:	0c25      	lsrs	r5, r4, #16
  403bec:	fb02 3318 	mls	r3, r2, r8, r3
  403bf0:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  403bf4:	fb0c f308 	mul.w	r3, ip, r8
  403bf8:	42ab      	cmp	r3, r5
  403bfa:	d907      	bls.n	403c0c <__udivmoddi4+0x134>
  403bfc:	19ed      	adds	r5, r5, r7
  403bfe:	f108 30ff 	add.w	r0, r8, #4294967295
  403c02:	d202      	bcs.n	403c0a <__udivmoddi4+0x132>
  403c04:	42ab      	cmp	r3, r5
  403c06:	f200 80d1 	bhi.w	403dac <__udivmoddi4+0x2d4>
  403c0a:	4680      	mov	r8, r0
  403c0c:	1aed      	subs	r5, r5, r3
  403c0e:	b2a3      	uxth	r3, r4
  403c10:	fbb5 f0f2 	udiv	r0, r5, r2
  403c14:	fb02 5510 	mls	r5, r2, r0, r5
  403c18:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
  403c1c:	fb0c fc00 	mul.w	ip, ip, r0
  403c20:	45a4      	cmp	ip, r4
  403c22:	d907      	bls.n	403c34 <__udivmoddi4+0x15c>
  403c24:	19e4      	adds	r4, r4, r7
  403c26:	f100 33ff 	add.w	r3, r0, #4294967295
  403c2a:	d202      	bcs.n	403c32 <__udivmoddi4+0x15a>
  403c2c:	45a4      	cmp	ip, r4
  403c2e:	f200 80b8 	bhi.w	403da2 <__udivmoddi4+0x2ca>
  403c32:	4618      	mov	r0, r3
  403c34:	eba4 040c 	sub.w	r4, r4, ip
  403c38:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  403c3c:	e79d      	b.n	403b7a <__udivmoddi4+0xa2>
  403c3e:	4631      	mov	r1, r6
  403c40:	4630      	mov	r0, r6
  403c42:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  403c46:	f1ce 0420 	rsb	r4, lr, #32
  403c4a:	fa05 f30e 	lsl.w	r3, r5, lr
  403c4e:	fa07 f70e 	lsl.w	r7, r7, lr
  403c52:	fa20 f804 	lsr.w	r8, r0, r4
  403c56:	0c3a      	lsrs	r2, r7, #16
  403c58:	fa25 f404 	lsr.w	r4, r5, r4
  403c5c:	ea48 0803 	orr.w	r8, r8, r3
  403c60:	fbb4 f1f2 	udiv	r1, r4, r2
  403c64:	ea4f 4518 	mov.w	r5, r8, lsr #16
  403c68:	fb02 4411 	mls	r4, r2, r1, r4
  403c6c:	fa1f fc87 	uxth.w	ip, r7
  403c70:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
  403c74:	fb01 f30c 	mul.w	r3, r1, ip
  403c78:	42ab      	cmp	r3, r5
  403c7a:	fa00 f40e 	lsl.w	r4, r0, lr
  403c7e:	d909      	bls.n	403c94 <__udivmoddi4+0x1bc>
  403c80:	19ed      	adds	r5, r5, r7
  403c82:	f101 30ff 	add.w	r0, r1, #4294967295
  403c86:	f080 808a 	bcs.w	403d9e <__udivmoddi4+0x2c6>
  403c8a:	42ab      	cmp	r3, r5
  403c8c:	f240 8087 	bls.w	403d9e <__udivmoddi4+0x2c6>
  403c90:	3902      	subs	r1, #2
  403c92:	443d      	add	r5, r7
  403c94:	1aeb      	subs	r3, r5, r3
  403c96:	fa1f f588 	uxth.w	r5, r8
  403c9a:	fbb3 f0f2 	udiv	r0, r3, r2
  403c9e:	fb02 3310 	mls	r3, r2, r0, r3
  403ca2:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  403ca6:	fb00 f30c 	mul.w	r3, r0, ip
  403caa:	42ab      	cmp	r3, r5
  403cac:	d907      	bls.n	403cbe <__udivmoddi4+0x1e6>
  403cae:	19ed      	adds	r5, r5, r7
  403cb0:	f100 38ff 	add.w	r8, r0, #4294967295
  403cb4:	d26f      	bcs.n	403d96 <__udivmoddi4+0x2be>
  403cb6:	42ab      	cmp	r3, r5
  403cb8:	d96d      	bls.n	403d96 <__udivmoddi4+0x2be>
  403cba:	3802      	subs	r0, #2
  403cbc:	443d      	add	r5, r7
  403cbe:	1aeb      	subs	r3, r5, r3
  403cc0:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  403cc4:	e78f      	b.n	403be6 <__udivmoddi4+0x10e>
  403cc6:	f1c1 0720 	rsb	r7, r1, #32
  403cca:	fa22 f807 	lsr.w	r8, r2, r7
  403cce:	408b      	lsls	r3, r1
  403cd0:	fa05 f401 	lsl.w	r4, r5, r1
  403cd4:	ea48 0303 	orr.w	r3, r8, r3
  403cd8:	fa20 fe07 	lsr.w	lr, r0, r7
  403cdc:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  403ce0:	40fd      	lsrs	r5, r7
  403ce2:	ea4e 0e04 	orr.w	lr, lr, r4
  403ce6:	fbb5 f9fc 	udiv	r9, r5, ip
  403cea:	ea4f 441e 	mov.w	r4, lr, lsr #16
  403cee:	fb0c 5519 	mls	r5, ip, r9, r5
  403cf2:	fa1f f883 	uxth.w	r8, r3
  403cf6:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
  403cfa:	fb09 f408 	mul.w	r4, r9, r8
  403cfe:	42ac      	cmp	r4, r5
  403d00:	fa02 f201 	lsl.w	r2, r2, r1
  403d04:	fa00 fa01 	lsl.w	sl, r0, r1
  403d08:	d908      	bls.n	403d1c <__udivmoddi4+0x244>
  403d0a:	18ed      	adds	r5, r5, r3
  403d0c:	f109 30ff 	add.w	r0, r9, #4294967295
  403d10:	d243      	bcs.n	403d9a <__udivmoddi4+0x2c2>
  403d12:	42ac      	cmp	r4, r5
  403d14:	d941      	bls.n	403d9a <__udivmoddi4+0x2c2>
  403d16:	f1a9 0902 	sub.w	r9, r9, #2
  403d1a:	441d      	add	r5, r3
  403d1c:	1b2d      	subs	r5, r5, r4
  403d1e:	fa1f fe8e 	uxth.w	lr, lr
  403d22:	fbb5 f0fc 	udiv	r0, r5, ip
  403d26:	fb0c 5510 	mls	r5, ip, r0, r5
  403d2a:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
  403d2e:	fb00 f808 	mul.w	r8, r0, r8
  403d32:	45a0      	cmp	r8, r4
  403d34:	d907      	bls.n	403d46 <__udivmoddi4+0x26e>
  403d36:	18e4      	adds	r4, r4, r3
  403d38:	f100 35ff 	add.w	r5, r0, #4294967295
  403d3c:	d229      	bcs.n	403d92 <__udivmoddi4+0x2ba>
  403d3e:	45a0      	cmp	r8, r4
  403d40:	d927      	bls.n	403d92 <__udivmoddi4+0x2ba>
  403d42:	3802      	subs	r0, #2
  403d44:	441c      	add	r4, r3
  403d46:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  403d4a:	eba4 0408 	sub.w	r4, r4, r8
  403d4e:	fba0 8902 	umull	r8, r9, r0, r2
  403d52:	454c      	cmp	r4, r9
  403d54:	46c6      	mov	lr, r8
  403d56:	464d      	mov	r5, r9
  403d58:	d315      	bcc.n	403d86 <__udivmoddi4+0x2ae>
  403d5a:	d012      	beq.n	403d82 <__udivmoddi4+0x2aa>
  403d5c:	b156      	cbz	r6, 403d74 <__udivmoddi4+0x29c>
  403d5e:	ebba 030e 	subs.w	r3, sl, lr
  403d62:	eb64 0405 	sbc.w	r4, r4, r5
  403d66:	fa04 f707 	lsl.w	r7, r4, r7
  403d6a:	40cb      	lsrs	r3, r1
  403d6c:	431f      	orrs	r7, r3
  403d6e:	40cc      	lsrs	r4, r1
  403d70:	6037      	str	r7, [r6, #0]
  403d72:	6074      	str	r4, [r6, #4]
  403d74:	2100      	movs	r1, #0
  403d76:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  403d7a:	4618      	mov	r0, r3
  403d7c:	e6f8      	b.n	403b70 <__udivmoddi4+0x98>
  403d7e:	4690      	mov	r8, r2
  403d80:	e6e0      	b.n	403b44 <__udivmoddi4+0x6c>
  403d82:	45c2      	cmp	sl, r8
  403d84:	d2ea      	bcs.n	403d5c <__udivmoddi4+0x284>
  403d86:	ebb8 0e02 	subs.w	lr, r8, r2
  403d8a:	eb69 0503 	sbc.w	r5, r9, r3
  403d8e:	3801      	subs	r0, #1
  403d90:	e7e4      	b.n	403d5c <__udivmoddi4+0x284>
  403d92:	4628      	mov	r0, r5
  403d94:	e7d7      	b.n	403d46 <__udivmoddi4+0x26e>
  403d96:	4640      	mov	r0, r8
  403d98:	e791      	b.n	403cbe <__udivmoddi4+0x1e6>
  403d9a:	4681      	mov	r9, r0
  403d9c:	e7be      	b.n	403d1c <__udivmoddi4+0x244>
  403d9e:	4601      	mov	r1, r0
  403da0:	e778      	b.n	403c94 <__udivmoddi4+0x1bc>
  403da2:	3802      	subs	r0, #2
  403da4:	443c      	add	r4, r7
  403da6:	e745      	b.n	403c34 <__udivmoddi4+0x15c>
  403da8:	4608      	mov	r0, r1
  403daa:	e708      	b.n	403bbe <__udivmoddi4+0xe6>
  403dac:	f1a8 0802 	sub.w	r8, r8, #2
  403db0:	443d      	add	r5, r7
  403db2:	e72b      	b.n	403c0c <__udivmoddi4+0x134>

00403db4 <__aeabi_idiv0>:
  403db4:	4770      	bx	lr
  403db6:	bf00      	nop
  403db8:	72617453 	.word	0x72617453
  403dbc:	676e6974 	.word	0x676e6974
  403dc0:	0a0d0a0d 	.word	0x0a0d0a0d
  403dc4:	00000000 	.word	0x00000000
  403dc8:	0046464f 	.word	0x0046464f
  403dcc:	64616552 	.word	0x64616552
  403dd0:	74614420 	.word	0x74614420
  403dd4:	000a0d61 	.word	0x000a0d61
  403dd8:	00004e4f 	.word	0x00004e4f
  403ddc:	2044454c 	.word	0x2044454c
  403de0:	25207369 	.word	0x25207369
  403de4:	000a0d73 	.word	0x000a0d73

00403de8 <_global_impure_ptr>:
  403de8:	20400010 0000000a 33323130 37363534     ..@ ....01234567
  403df8:	42413938 46454443 00000000 33323130     89ABCDEF....0123
  403e08:	37363534 62613938 66656463 00000000     456789abcdef....
  403e18:	6c756e28 0000296c                       (null)..

00403e20 <blanks.7217>:
  403e20:	20202020 20202020 20202020 20202020                     

00403e30 <zeroes.7218>:
  403e30:	30303030 30303030 30303030 30303030     0000000000000000
  403e40:	00000043 49534f50 00000058 0000002e     C...POSIX.......

00403e50 <_ctype_>:
  403e50:	20202000 20202020 28282020 20282828     .         ((((( 
  403e60:	20202020 20202020 20202020 20202020                     
  403e70:	10108820 10101010 10101010 10101010      ...............
  403e80:	04040410 04040404 10040404 10101010     ................
  403e90:	41411010 41414141 01010101 01010101     ..AAAAAA........
  403ea0:	01010101 01010101 01010101 10101010     ................
  403eb0:	42421010 42424242 02020202 02020202     ..BBBBBB........
  403ec0:	02020202 02020202 02020202 10101010     ................
  403ed0:	00000020 00000000 00000000 00000000      ...............
	...

00403f54 <_init>:
  403f54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  403f56:	bf00      	nop
  403f58:	bcf8      	pop	{r3, r4, r5, r6, r7}
  403f5a:	bc08      	pop	{r3}
  403f5c:	469e      	mov	lr, r3
  403f5e:	4770      	bx	lr

00403f60 <__init_array_start>:
  403f60:	00402039 	.word	0x00402039

00403f64 <__frame_dummy_init_array_entry>:
  403f64:	0040018d                                ..@.

00403f68 <_fini>:
  403f68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  403f6a:	bf00      	nop
  403f6c:	bcf8      	pop	{r3, r4, r5, r6, r7}
  403f6e:	bc08      	pop	{r3}
  403f70:	469e      	mov	lr, r3
  403f72:	4770      	bx	lr

00403f74 <__fini_array_start>:
  403f74:	00400169 	.word	0x00400169
